[{"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\index.tsx":"1","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\reportWebVitals.ts":"2","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\App.tsx":"3","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\registerRequest.ts":"4","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\userInfo.ts":"5","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\auth\\auth.tsx":"6","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\UIRelated.ts":"7","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\lookUpTypes.ts":"8","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\assets\\js\\all.js":"9","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\store.ts":"10","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootReducer.ts":"11","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootSaga.ts":"12","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\sagas.ts":"13","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\index.ts":"14","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\types.ts":"15","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\reducer.ts":"16","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\action.ts":"17","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\login.ts":"18","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ProtectedRoute.tsx":"19","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\Urls.ts":"20","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\localStorageHelper.ts":"21","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Footer.tsx":"22","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NotFound.tsx":"23","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewRequest.tsx":"24","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\TestRBwithRHF.tsx":"25","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Home.tsx":"26","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PersonalInfo.tsx":"27","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Login.tsx":"28","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Register.tsx":"29","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PassportInfo.tsx":"30","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\assignType.ts":"31","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\lookup.ts":"32","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Layout.tsx":"33","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\FullPageLoader.tsx":"34","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ModalInfo.tsx":"35","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\AuthHeader.tsx":"36","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Header.tsx":"37","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\SideMenu.tsx":"38","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\register.ts":"39","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewApp.tsx":"40","C:\\MOAProjects\\webRR\\src\\index.tsx":"41","C:\\MOAProjects\\webRR\\src\\reportWebVitals.ts":"42","C:\\MOAProjects\\webRR\\src\\State\\store.ts":"43","C:\\MOAProjects\\webRR\\src\\App.tsx":"44","C:\\MOAProjects\\webRR\\src\\State\\rootReducer.ts":"45","C:\\MOAProjects\\webRR\\src\\State\\rootSaga.ts":"46","C:\\MOAProjects\\webRR\\src\\UI\\views\\Login.tsx":"47","C:\\MOAProjects\\webRR\\src\\UI\\views\\Home.tsx":"48","C:\\MOAProjects\\webRR\\src\\UI\\views\\NotFound.tsx":"49","C:\\MOAProjects\\webRR\\src\\UI\\views\\Register.tsx":"50","C:\\MOAProjects\\webRR\\src\\UI\\views\\PersonalInfo.tsx":"51","C:\\MOAProjects\\webRR\\src\\UI\\views\\PassportInfo.tsx":"52","C:\\MOAProjects\\webRR\\src\\UI\\views\\TestRBwithRHF.tsx":"53","C:\\MOAProjects\\webRR\\src\\UI\\views\\NewRequest.tsx":"54","C:\\MOAProjects\\webRR\\src\\UI\\components\\ProtectedRoute.tsx":"55","C:\\MOAProjects\\webRR\\src\\UI\\views\\NewApp.tsx":"56","C:\\MOAProjects\\webRR\\src\\UI\\components\\Footer.tsx":"57","C:\\MOAProjects\\webRR\\src\\State\\login\\sagas.ts":"58","C:\\MOAProjects\\webRR\\src\\Services\\lookup.ts":"59","C:\\MOAProjects\\webRR\\src\\types\\registerRequest.ts":"60","C:\\MOAProjects\\webRR\\src\\types\\userInfo.ts":"61","C:\\MOAProjects\\webRR\\src\\Services\\register.ts":"62","C:\\MOAProjects\\webRR\\src\\Services\\utils\\localStorageHelper.ts":"63","C:\\MOAProjects\\webRR\\src\\Services\\utils\\assignType.ts":"64","C:\\MOAProjects\\webRR\\src\\UI\\components\\FullPageLoader.tsx":"65","C:\\MOAProjects\\webRR\\src\\UI\\components\\Layout.tsx":"66","C:\\MOAProjects\\webRR\\src\\UI\\components\\ModalInfo.tsx":"67","C:\\MOAProjects\\webRR\\src\\auth\\auth.tsx":"68","C:\\MOAProjects\\webRR\\src\\State\\login\\index.ts":"69","C:\\MOAProjects\\webRR\\src\\State\\login\\action.ts":"70","C:\\MOAProjects\\webRR\\src\\State\\login\\types.ts":"71","C:\\MOAProjects\\webRR\\src\\Services\\login.ts":"72","C:\\MOAProjects\\webRR\\src\\Services\\Urls.ts":"73","C:\\MOAProjects\\webRR\\src\\types\\UIRelated.ts":"74","C:\\MOAProjects\\webRR\\src\\types\\lookUpTypes.ts":"75","C:\\MOAProjects\\webRR\\src\\assets\\js\\all.js":"76","C:\\MOAProjects\\webRR\\src\\UI\\components\\SideMenu.tsx":"77","C:\\MOAProjects\\webRR\\src\\UI\\components\\Header.tsx":"78","C:\\MOAProjects\\webRR\\src\\UI\\components\\AuthHeader.tsx":"79","C:\\MOAProjects\\webRR\\src\\State\\login\\reducer.ts":"80","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\index.ts":"81","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\reducer.ts":"82","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\action.ts":"83","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\types.ts":"84","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\sagas.ts":"85","C:\\MOAProjects\\webRR\\src\\State\\newApp\\index.ts":"86","C:\\MOAProjects\\webRR\\src\\State\\newApp\\sagas.ts":"87","C:\\MOAProjects\\webRR\\src\\State\\newApp\\action.ts":"88","C:\\MOAProjects\\webRR\\src\\State\\newApp\\reducer.ts":"89","C:\\MOAProjects\\webRR\\src\\State\\newApp\\types.ts":"90","C:\\MOAProjects\\webRR\\src\\Services\\newApp.ts":"91","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\index.ts":"92","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\reducer.ts":"93","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\sagas.ts":"94","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\action.ts":"95","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\types.ts":"96","C:\\MOAProjects\\webRR\\src\\Services\\personalInfo.ts":"97","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\index.ts":"98","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\reducer.ts":"99","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\action.ts":"100","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\sagas.ts":"101","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\types.ts":"102","C:\\MOAProjects\\webRR\\src\\Services\\passportInfo.ts":"103","C:\\MOAProjects\\webRR\\src\\types\\Enums.ts":"104","C:\\MOAProjects\\webRR\\src\\UI\\views\\FileAttachments.tsx":"105","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\index.ts":"106","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\reducer.ts":"107","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\sagas.ts":"108","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\action.ts":"109","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\types.ts":"110","C:\\MOAProjects\\webRR\\src\\Services\\fileAttachment.ts":"111","C:\\MOAProjects\\webRR\\src\\UI\\views\\ManageRequests.tsx":"112","C:\\MOAProjects\\webRR\\src\\UI\\views\\Agreament.tsx":"113","C:\\MOAProjects\\webRR\\src\\UI\\views\\Result.tsx":"114","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\PersonalInfo.tsx":"115","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\NewApp.tsx":"116","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\InwardApplication.tsx":"117","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\PassportInfo.tsx":"118","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\actions.ts":"119","C:\\MOAProjects\\webRR\\src\\UI\\views\\NoData.tsx":"120","C:\\MOAProjects\\webRR\\src\\UI\\components\\Datatables.tsx":"121","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\index.ts":"122","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\types.ts":"123","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\sagas.ts":"124","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\api.ts":"125","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\reducer.ts":"126","C:\\MOAProjects\\webRR\\src\\UI\\views\\Profile.tsx":"127","C:\\MOAProjects\\webRR\\src\\Services\\userProfile.ts":"128","C:\\MOAProjects\\webRR\\src\\UI\\views\\ChangePassword.tsx":"129","C:\\MOAProjects\\webRR\\src\\Services\\changePassword.ts":"130","C:\\MOAProjects\\webRR\\src\\UI\\components\\Toastr.tsx":"131","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\AppTypesSettings.tsx":"132","C:\\MOAProjects\\webRR\\src\\Services\\applicationTypes.ts":"133"},{"size":748,"mtime":1614848783478,"results":"134","hashOfConfig":"135"},{"size":425,"mtime":499162500000,"results":"136","hashOfConfig":"135"},{"size":1408,"mtime":1614852327892,"results":"137","hashOfConfig":"135"},{"size":910,"mtime":1613373783960,"results":"138","hashOfConfig":"135"},{"size":986,"mtime":1614758220228,"results":"139","hashOfConfig":"135"},{"size":404,"mtime":1610874310000,"results":"140","hashOfConfig":"135"},{"size":85,"mtime":1613296273412,"results":"141","hashOfConfig":"135"},{"size":189,"mtime":1613035468832,"results":"142","hashOfConfig":"135"},{"size":614,"mtime":1611123306000,"results":"143","hashOfConfig":"135"},{"size":581,"mtime":1614675776666,"results":"144","hashOfConfig":"135"},{"size":255,"mtime":1614675139607,"results":"145","hashOfConfig":"135"},{"size":166,"mtime":1614675480166,"results":"146","hashOfConfig":"135"},{"size":1260,"mtime":1614765970653,"results":"147","hashOfConfig":"135"},{"size":187,"mtime":1614666679997,"results":"148","hashOfConfig":"135"},{"size":1052,"mtime":1614764835248,"results":"149","hashOfConfig":"135"},{"size":881,"mtime":1614765970598,"results":"150","hashOfConfig":"135"},{"size":587,"mtime":1614755623442,"results":"151","hashOfConfig":"135"},{"size":823,"mtime":1614756854007,"results":"152","hashOfConfig":"135"},{"size":758,"mtime":1614760167508,"results":"153","hashOfConfig":"135"},{"size":387,"mtime":1614763791543,"results":"154","hashOfConfig":"135"},{"size":261,"mtime":1612429332395,"results":"155","hashOfConfig":"135"},{"size":536,"mtime":1610959568000,"results":"156","hashOfConfig":"135"},{"size":165,"mtime":1610792140000,"results":"157","hashOfConfig":"135"},{"size":164,"mtime":1611745332000,"results":"158","hashOfConfig":"135"},{"size":4128,"mtime":1613544153011,"results":"159","hashOfConfig":"135"},{"size":563,"mtime":1614760640427,"results":"160","hashOfConfig":"135"},{"size":6016,"mtime":1611563886000,"results":"161","hashOfConfig":"135"},{"size":5554,"mtime":1614763624801,"results":"162","hashOfConfig":"135"},{"size":12682,"mtime":1614850947245,"results":"163","hashOfConfig":"135"},{"size":7451,"mtime":1611649990000,"results":"164","hashOfConfig":"135"},{"size":1028,"mtime":1614760828476,"results":"165","hashOfConfig":"135"},{"size":1023,"mtime":1614760719126,"results":"166","hashOfConfig":"135"},{"size":998,"mtime":1614760592972,"results":"167","hashOfConfig":"135"},{"size":315,"mtime":1614760494666,"results":"168","hashOfConfig":"135"},{"size":717,"mtime":1614844281318,"results":"169","hashOfConfig":"135"},{"size":740,"mtime":1614759176932,"results":"170","hashOfConfig":"135"},{"size":2371,"mtime":1614760430936,"results":"171","hashOfConfig":"135"},{"size":4953,"mtime":1614852251559,"results":"172","hashOfConfig":"135"},{"size":525,"mtime":1614767281874,"results":"173","hashOfConfig":"135"},{"size":2590,"mtime":1614852122583,"results":"174","hashOfConfig":"135"},{"size":755,"mtime":1618217122827,"results":"175","hashOfConfig":"176"},{"size":425,"mtime":1618126127000,"results":"177","hashOfConfig":"176"},{"size":726,"mtime":1618126127000,"results":"178","hashOfConfig":"176"},{"size":3142,"mtime":1619418548957,"results":"179","hashOfConfig":"176"},{"size":717,"mtime":1618126127000,"results":"180","hashOfConfig":"176"},{"size":659,"mtime":1618126127000,"results":"181","hashOfConfig":"176"},{"size":5475,"mtime":1618126127000,"results":"182","hashOfConfig":"176"},{"size":563,"mtime":1614760642000,"results":"183","hashOfConfig":"176"},{"size":165,"mtime":1610792140000,"results":"184","hashOfConfig":"176"},{"size":12697,"mtime":1618995941585,"results":"185","hashOfConfig":"176"},{"size":14134,"mtime":1618305781071,"results":"186","hashOfConfig":"176"},{"size":15493,"mtime":1618126127000,"results":"187","hashOfConfig":"176"},{"size":4037,"mtime":1618126127000,"results":"188","hashOfConfig":"176"},{"size":153,"mtime":1618126127000,"results":"189","hashOfConfig":"176"},{"size":792,"mtime":1618126127000,"results":"190","hashOfConfig":"176"},{"size":5975,"mtime":1618296712607,"results":"191","hashOfConfig":"176"},{"size":519,"mtime":1618126127000,"results":"192","hashOfConfig":"176"},{"size":1737,"mtime":1618816423068,"results":"193","hashOfConfig":"176"},{"size":1918,"mtime":1618132230996,"results":"194","hashOfConfig":"176"},{"size":960,"mtime":1618474102706,"results":"195","hashOfConfig":"176"},{"size":1063,"mtime":1618739440518,"results":"196","hashOfConfig":"176"},{"size":508,"mtime":1618126127000,"results":"197","hashOfConfig":"176"},{"size":210,"mtime":1618220647317,"results":"198","hashOfConfig":"176"},{"size":993,"mtime":1618126127000,"results":"199","hashOfConfig":"176"},{"size":302,"mtime":1618126127000,"results":"200","hashOfConfig":"176"},{"size":1617,"mtime":1619076052042,"results":"201","hashOfConfig":"176"},{"size":687,"mtime":1618126127000,"results":"202","hashOfConfig":"176"},{"size":404,"mtime":1610874310000,"results":"203","hashOfConfig":"176"},{"size":147,"mtime":1618737211195,"results":"204","hashOfConfig":"176"},{"size":868,"mtime":1618737383765,"results":"205","hashOfConfig":"176"},{"size":1329,"mtime":1618737378768,"results":"206","hashOfConfig":"176"},{"size":788,"mtime":1618126127000,"results":"207","hashOfConfig":"176"},{"size":1238,"mtime":1619509112078,"results":"208","hashOfConfig":"176"},{"size":81,"mtime":1618126127000,"results":"209","hashOfConfig":"176"},{"size":265,"mtime":1618126127000,"results":"210","hashOfConfig":"176"},{"size":595,"mtime":1618126127000,"results":"211","hashOfConfig":"176"},{"size":2555,"mtime":1618899750246,"results":"212","hashOfConfig":"176"},{"size":3266,"mtime":1618303778884,"results":"213","hashOfConfig":"176"},{"size":715,"mtime":1618126127000,"results":"214","hashOfConfig":"176"},{"size":2130,"mtime":1618819850787,"results":"215","hashOfConfig":"176"},{"size":386,"mtime":1618126127000,"results":"216","hashOfConfig":"176"},{"size":940,"mtime":1618134071795,"results":"217","hashOfConfig":"176"},{"size":1306,"mtime":1618132021630,"results":"218","hashOfConfig":"176"},{"size":1852,"mtime":1618133747825,"results":"219","hashOfConfig":"176"},{"size":1474,"mtime":1618134142857,"results":"220","hashOfConfig":"176"},{"size":476,"mtime":1618126127000,"results":"221","hashOfConfig":"176"},{"size":2187,"mtime":1618126127000,"results":"222","hashOfConfig":"176"},{"size":1920,"mtime":1618126127000,"results":"223","hashOfConfig":"176"},{"size":2057,"mtime":1618126127000,"results":"224","hashOfConfig":"176"},{"size":2540,"mtime":1618126127000,"results":"225","hashOfConfig":"176"},{"size":5477,"mtime":1619264474340,"results":"226","hashOfConfig":"176"},{"size":235,"mtime":1618126127000,"results":"227","hashOfConfig":"176"},{"size":1589,"mtime":1618303666680,"results":"228","hashOfConfig":"176"},{"size":1587,"mtime":1618381443290,"results":"229","hashOfConfig":"176"},{"size":1106,"mtime":1618303761579,"results":"230","hashOfConfig":"176"},{"size":1447,"mtime":1618305254272,"results":"231","hashOfConfig":"176"},{"size":2126,"mtime":1618305859941,"results":"232","hashOfConfig":"176"},{"size":232,"mtime":1618126127000,"results":"233","hashOfConfig":"176"},{"size":1687,"mtime":1618303903101,"results":"234","hashOfConfig":"176"},{"size":1105,"mtime":1618303922472,"results":"235","hashOfConfig":"176"},{"size":1296,"mtime":1618303855020,"results":"236","hashOfConfig":"176"},{"size":1391,"mtime":1618303883102,"results":"237","hashOfConfig":"176"},{"size":2332,"mtime":1618729716638,"results":"238","hashOfConfig":"176"},{"size":676,"mtime":1619343921637,"results":"239","hashOfConfig":"176"},{"size":15777,"mtime":1618126127000,"results":"240","hashOfConfig":"176"},{"size":272,"mtime":1618126127000,"results":"241","hashOfConfig":"176"},{"size":1633,"mtime":1618303993841,"results":"242","hashOfConfig":"176"},{"size":1281,"mtime":1618303969793,"results":"243","hashOfConfig":"176"},{"size":1113,"mtime":1618304014849,"results":"244","hashOfConfig":"176"},{"size":1473,"mtime":1618304012108,"results":"245","hashOfConfig":"176"},{"size":3289,"mtime":1618126127000,"results":"246","hashOfConfig":"176"},{"size":3501,"mtime":1618126127000,"results":"247","hashOfConfig":"176"},{"size":4988,"mtime":1618126127000,"results":"248","hashOfConfig":"176"},{"size":2294,"mtime":1618381869026,"results":"249","hashOfConfig":"176"},{"size":11782,"mtime":1619068343000,"results":"250","hashOfConfig":"176"},{"size":5176,"mtime":1619068343000,"results":"251","hashOfConfig":"176"},{"size":4829,"mtime":1619068343000,"results":"252","hashOfConfig":"176"},{"size":11878,"mtime":1619068343000,"results":"253","hashOfConfig":"176"},{"size":2466,"mtime":1619068343000,"results":"254","hashOfConfig":"176"},{"size":984,"mtime":1618126127000,"results":"255","hashOfConfig":"176"},{"size":9948,"mtime":1618126127000,"results":"256","hashOfConfig":"176"},{"size":379,"mtime":1619068343000,"results":"257","hashOfConfig":"176"},{"size":3037,"mtime":1619068343000,"results":"258","hashOfConfig":"176"},{"size":3629,"mtime":1619068343000,"results":"259","hashOfConfig":"176"},{"size":2647,"mtime":1619068343000,"results":"260","hashOfConfig":"176"},{"size":2585,"mtime":1619068343000,"results":"261","hashOfConfig":"176"},{"size":5043,"mtime":1618741047805,"results":"262","hashOfConfig":"176"},{"size":663,"mtime":1618733439523,"results":"263","hashOfConfig":"176"},{"size":5280,"mtime":1619083147574,"results":"264","hashOfConfig":"176"},{"size":1007,"mtime":1619000114466,"results":"265","hashOfConfig":"176"},{"size":763,"mtime":1619056630837,"results":"266","hashOfConfig":"176"},{"size":6862,"mtime":1619514423279,"results":"267","hashOfConfig":"176"},{"size":1338,"mtime":1619514406256,"results":"268","hashOfConfig":"176"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},"1067rjg",{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"271"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"271"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"271"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"326","usedDeprecatedRules":"271"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"271"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"271"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"271"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"271"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"271"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"271"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"271"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},"1tzkq46",{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"365"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"365"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"382"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"365"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"365"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"365"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"365"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"365"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"365"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"365"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"365"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"447"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"365"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"365"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"365"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"365"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"510","usedDeprecatedRules":"365"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"365"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"365"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"365"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"365"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"365"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"365"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"365"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"365"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"547","messages":"548","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"551","usedDeprecatedRules":"365"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"554","usedDeprecatedRules":"365"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"365"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"563"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"365"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"573","usedDeprecatedRules":"365"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"365"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"365"},"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\index.tsx",[],["583","584"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\reportWebVitals.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\App.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\registerRequest.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\userInfo.ts",["585"],"\r\nexport class UserInfo {\r\n    userId: number = 0;\r\n    mobileNumber?: string;\r\n    email: string = \"\";\r\n    residencyByMoa: boolean = false;\r\n    isSapUser: boolean = false;\r\n    civilId: string = \"\";\r\n    employeeNumber?: string;\r\n    employeeName: string = \"\";\r\n    employeeType?: string;\r\n    sector?: string;\r\n    department?: string;\r\n    section?: string;\r\n    nationality: string = \"\";\r\n    birthDate?: Date;\r\n    jobTitle?: string;\r\n    organization?: string;\r\n    userTypeId: number = 0;\r\n    registrationStatusId: number = 0;\r\n}\r\n\r\ninterface AuthenticateResult {\r\n    userInfo: UserInfo,\r\n    jwtToken: string\r\n}\r\n\r\nexport class AuthenticateResponse {\r\n    response:AuthenticateResult = {\r\n        userInfo: userInfo,\r\n        jwtToken:\"\"\r\n    }\r\n    status: number = 0;\r\n    message: string = \"\";\r\n    hasError: boolean = false;\r\n    isLoggedIn:boolean = false;\r\n}\r\n\r\n\r\nexport const userInfo = new UserInfo();\r\nexport const authenticateResponse = new AuthenticateResponse();","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\auth\\auth.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\UIRelated.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\lookUpTypes.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\assets\\js\\all.js",[],["586","587"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\store.ts",["588"],"\r\n\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport {rootReducer,RootState} from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\n// sagaMiddleware.run(rootSaga);\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n  };\r\n\r\n  export default configureStore;\r\n\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootReducer.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootSaga.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\sagas.ts",["589","590","591","592"],"import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\r\n// import {LOGIN_CONSTS,credentials,LoginActionTypes} from \"./types\"\r\nimport { authenticateResponse, AuthenticateResponse, UserInfo, userInfo } from \"../../types/userInfo\";\r\nimport * as actionTypes from \"./types\";\r\nimport {getloginRequest,getloginSuccess,getloginRequestLoading} from \"./action\"\r\n\r\nimport {login} from \"../../Services/login\"\r\n\r\n\r\nfunction* onLoginRequest({ type, payload  }: actionTypes.login_request_action_type) {\r\n  console.log(\"in onLoginRequest\");\r\n    const { username, password} = payload;\r\n    try {\r\n      yield put(getloginRequestLoading());\r\n      const  data  = yield call(login, username, password);\r\n      let loginRes: AuthenticateResponse = data;\r\n      loginRes.isLoggedIn = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n\r\n      console.log(\"data\",data);\r\n      yield put(getloginSuccess(\"PleaseWork\"));\r\n    } catch (error) {\r\n    //   yield put(actionCreators.getLyricsFailure(error.response.data.error));\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchOnLgin() {\r\n    yield takeEvery(actionTypes.LOGIN_REQUEST, onLoginRequest);\r\n    // yield takeEvery()\r\n  }\r\n\r\n  export default function* loginSaga() {\r\n    yield all([fork(watchOnLgin)]);\r\n  }","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\index.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\types.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\reducer.ts",["593"],"import {\r\n    LoginActionTypes,\r\n    AuthState,\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_LOADING\r\n  } from './types'\r\n  \r\n  const initialState: AuthState = {\r\n    isLoading:false,  \r\n    isLoggedIn:false,\r\n    session:undefined,\r\n    userName:undefined\r\n  }\r\n  \r\n  export function loginReducer(\r\n    state:AuthState = initialState,\r\n    action: LoginActionTypes\r\n  ): AuthState {\r\n      console.log(\"in loginReducer\");\r\n    switch (action.type) {\r\n        case LOGIN_LOADING:\r\n        return {\r\n         ...state,\r\n         isLoading:true,\r\n        }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n             ...state,\r\n             isLoggedIn:true,\r\n             isLoading:false,\r\n             userName:\"tryThisOut\"\r\n            }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export default loginReducer;",["594","595"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\action.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\login.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ProtectedRoute.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\Urls.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\localStorageHelper.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Footer.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NotFound.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewRequest.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\TestRBwithRHF.tsx",["596","597","598","599"],"import React from 'react'\r\nimport { Form, Button, Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Select from 'react-select';\r\n\r\n\r\nfunction TestRBwithRHF() {\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n      ]\r\n    const { register, handleSubmit, watch, errors, control } = useForm();\r\n\r\n    const onSubmit = (data: FormData) => {\r\n        console.log(\"data\", data);\r\n    }\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\"\r\n                        className=\"text-danger\"\r\n                        ref={register({ required: true })} />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        We'll never share your email with anyone else.\r\n    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"row\">\r\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\r\n                          <div className=\"col-sm-4\">\r\n     \r\n                          <Select ref={register} name=\"ice\" options={options} />\r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\r\n                          <div className=\"col-sm-4\">\r\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\r\n                              <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" />\r\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\r\n                              {/* <Controller\r\n                                name=\"isMOA\"\r\n                                control={control}\r\n                                defaultValue={true}\r\n                                render={({ onChange, value }) => (\r\n                                  <Switch\r\n                                    onChange={onChange}\r\n                                    checked={value}\r\n                                    />\r\n                                  )}\r\n                              /> */}\r\n                            {/* </div> */}\r\n                          </div>\r\n                        \r\n                        \r\n                        </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n  </Button>\r\n            </Form>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col >\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n    </Card.Text>\r\n                                <Button variant=\"primary\">Go somewhere</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestRBwithRHF\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Home.tsx",["600"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n import auth from \"../../auth/auth\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\t// const user = useContext(UserInfoContext);\r\n\tconst history = useHistory();\r\n\t// console.log(\"Home ~ user\", user);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Home Page</h1>\r\n\t\t\t {true && <h3>logged in</h3>}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tauth.logout(() => {\r\n\t\t\t\t\t\thistory.push(\"/login\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}}>\r\n\t\t\t\tLogout\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PersonalInfo.tsx",["601","602"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\n\r\nconst PersonalInfo = () => {\r\n  return (\r\n    <Layout>\r\n      <main className=\"login-bg\">\r\n        <div className=\"container\" style={{ marginBottom: '80px' }}>\r\n          {/* Outer Row */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n                <div className=\"card-header bg-dark\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>معاملة تجديد اقامة - البيانات\r\n                      الشخصية</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body p-0 \">\r\n                  {/* Nested Row within Card Body */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"p-5\">\r\n                        <form className=\"user\">\r\n                          {/* ################### form- row-001 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-002 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-عربي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الهاتف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-003 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-انجليزي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ الميلاد</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"date\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-004 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">الادارة/القسم</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <select className=\"form-control form-control-user\">\r\n                                <option>اختر الادارة</option>\r\n                                <option value=\"1\">نظم المعلومات</option>\r\n                                <option value=\"2\">الشئون الادارية</option>\r\n                              </select>\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">المسمى الوظيفي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <select className=\"form-control form-control-user\">\r\n                                <option>اختر المسمى الوظيفي</option>\r\n                                <option value=\"1\">طباع</option>\r\n                                <option value=\"2\">مبرمج</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-005 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ التعيين</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"date\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-006 #################*/}\r\n                          {/* ################# submit btn ##################### */}\r\n                          <div className=\"row justify-content-between\"> <a href=\"001.html\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                            السابق\r\n                            </a>\r\n                            <a href=\"001-002.html\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                              التالي\r\n                            </a>\r\n                          </div>\r\n                          {/* ################# end submit btn ##################### */}\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div></main>\r\n    </Layout>\r\n  );\r\n}\r\nexport default PersonalInfo;","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Login.tsx",["603","604","605","606","607","608","609"],"import React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { login } from \"../../Services/login\";\r\nimport { authenticateResponse, AuthenticateResponse, UserInfo, userInfo } from \"../../types/userInfo\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport FullPageLoader from \"../components/FullPageLoader\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getLocalStorage } from \"../../Services/utils/localStorageHelper\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {RootState} from '../../State/rootReducer';\r\n\r\nimport {getloginRequest} from \"../../State/login\"\r\n\r\nconst Login = () => {\r\n\tlet userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\tconst history = useHistory();\r\n\tlet dispatch = useDispatch();\r\n\tconst loginstate = useSelector<RootState,RootState[\"login\"]>(state => state.login);\r\n\r\n\tconst [username, setUsername] = useState<string>(\"\");\r\n\tconst [password, setPassword] = useState<string>(\"\");\r\n\r\n\tconst {isLoading} = loginstate;\r\n\tconst [isFieldEmpty, setIsFieldEmpty] = useState(false);\r\n\tconst [wrongCredintials, setWrongCredintials] = useState(false);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(\"sb-sidenav-toggled\");\r\n\t\treturn () => {\r\n\t\t\tdocument.body.classList.remove(\"sb-sidenav-toggled\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(getloginRequest({username,password}));\r\n\t\t\r\n\t\t\r\n\r\n\t\t/*if (username.trim() === \"\" || password.trim() === \"\") {\r\n\t\t\tsetIsFieldEmpty(true);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLoading(true);\r\n\t\r\n\t\tlet loginRes: AuthenticateResponse = await login(username, password);\r\n\t\tconsole.log(\"loginRes\", loginRes);\r\n\t\t\r\n\r\n\t\tif (!loginRes.hasError) {\r\n\t\t\tloginRes.isLoggedIn = true;\r\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\telse if(loginRes.hasError && loginRes.status < 500 && loginRes.status > 299) {\r\n\t\t\tsetWrongCredintials(true);\r\n\t\t\tsetLoading(false);\r\n\t\t}*/\r\n\t}\r\n\r\n\tconst handleNewUser = (e:SyntheticEvent)=>\r\n\t{\r\n\t\te.preventDefault();\r\n\t\thistory.push(\"/register\");\r\n\t}\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t{ isLoading && <FullPageLoader />}\r\n\t\t\t{!userAuth.isLoggedIn &&\r\n\t\t\t\t<main className=\"login-bg\">\r\n\t\t\t\t\t<div className=\"container\" style={{ marginBottom: '80px' }}>\r\n\t\t\t\t\t\t{/* Outer Row */}\r\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t<div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n\t\t\t\t\t\t\t\t<div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header bg-dark\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading && <h3 className=\"text-danger\">Loading...</h3>}\r\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>تسجيل دخول لخدمات\r\n                            البوابة الالكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body p-0 \">\r\n\t\t\t\t\t\t\t\t\t\t{/* Nested Row within Card Body */}\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 p-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-4 gold\" style={{ fontSize: '16px', lineHeight: '30px' }}>ادخل اسم المستخدم وكلمة السر\r\n                                  للدخول الى خدمات البوابة اﻹلكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{wrongCredintials &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tاسم المتسخدم / كلمة المرور غير صحيحة!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{isFieldEmpty &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tمطلوب اسم المستخدم / كلمة المرور!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<form className=\"user\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={username} type=\"email\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل اسم المستخدم\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={password} type=\"password\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputPassword\" placeholder=\"ادخل كلمة السر \" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-user  shorooq \" style={{ fontSize: '22px' }}> تسجيل الدخول الى النظام  </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button  className=\"btn btn-info btn-user shorooq \" style={{ fontSize: '22px' }} onClick={handleNewUser}> تسجيل مستخدم جديد </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4 d-none d-lg-block text-center my-auto\" style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'img/kwtman.png'} alt=\"\" width=\"80%\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t\t{userAuth.isLoggedIn &&\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: \"/personalInfo\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Register.tsx",["610","611"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport Layout from \"../components/Layout\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport Switch from \"react-switch\";\r\nimport {RegisterRequest,RegisterRequestModel} from \"../../types/registerRequest\";\r\nimport {getNationalities,getUserTypes} from \"../../Services/lookup\";\r\nimport {assignToSelectType, assignToType} from \"../../Services/utils/assignType\";\r\nimport ModalInfo, {PropsModal} from '../components/ModalInfo';\r\nimport {SelectOptions} from \"../../types/UIRelated\";\r\nimport {RegisterNonSapUser}from \"../../Services/register\";\r\nimport {Response } from \"../../types/response\";\r\n\r\n\r\n\r\nconst Register2 = () => {\r\n  const history = useHistory(); \r\n\r\n\r\n  const [moaIqama, setmoaIqama] = useState(true);\r\n  const [nationalities, setnationalitiesOption] = useState<SelectOptions[]>();\r\n  const [userTypes, setuserTypesOption] = useState<SelectOptions[]>();\r\n  const [show, setShow] = useState(false);\r\n  const [propsModal, setpropsModal] = useState<PropsModal>({\r\n    handleClose: () => {setShow(false); history.push(\"/login\");},\r\n    show: show,\r\n    modalBody: '',\r\n    modalTitle: ''\r\n  });\r\n\r\n\r\n  const { register, handleSubmit, watch, errors,control } = useForm<RegisterRequestModel>();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n\r\n\r\n  const onSubmit = async (data:FormData) => {\r\n    \r\n    let temp = new RegisterRequestModel();\r\n    temp = assignToType(data,temp);\r\n    \r\n    let arg = new RegisterRequest();\r\n    arg.email = temp.email;\r\n    arg.password = temp.password;\r\n    arg.civilId= temp.civilId;\r\n    arg.employeeName= temp.employeeName;\r\n    arg.nationalityId = temp.nationalityId?.value;\r\n    arg.jobTitle = temp.jobTitle;\r\n    arg.userTypeId = temp.userTypeId?.value;\r\n    arg.employeeType=\"temp Data\";//TODO\r\n    arg.organization=temp.organization;\r\n    arg.mobileNumber = temp.mobileNumber;\r\n    arg.employeeNumber= temp.employeeNumber;\r\n\r\n\r\n    let a:Response= await RegisterNonSapUser(arg);\r\n\r\n    if (a.status ){\r\n      console.log(\"in modal\");\r\n      let tempModal = {...propsModal}\r\n      tempModal.show = true;\r\n      tempModal.modalBody=a.message;\r\n      tempModal.modalTitle=\"Info\"\r\n      setpropsModal({...tempModal});\r\n\r\n    }\r\n\r\n  }\r\n\r\n//intial fetch for dropdown\r\n  useEffect(() => {\r\n    const GetDropdownValues = async()=>{\r\n      let responseNations = await getNationalities();\r\n      let nationOptions: SelectOptions[] = assignToSelectType(responseNations, \"nationalityId\", \"nationalityName\");\r\n      setnationalitiesOption(nationOptions);\r\n\r\n      let responseUserTypes = await getUserTypes();\r\n      let userTypesOptions: SelectOptions[] = assignToSelectType(responseUserTypes, \"userTypeId\", \"userTypeName\");\r\n      setuserTypesOption(userTypesOptions);\r\n      \r\n    };  \r\n    GetDropdownValues();\r\n    \r\n  }, []);\r\n  return (\r\n    <Layout>\r\n\r\n      <main className=\"login-bg\">\r\n\r\n      <div className=\"container\" style={{marginBottom: '80px'}}>\r\n        {/* Outer Row */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\r\n              <div className=\"card-header bg-dark\">\r\n                <div className=\"text-center\">\r\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>تسجيل مستخدم جديد</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body p-0 \">\r\n                {/* Nested Row within Card Body */}\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"p-5\">\r\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\r\n                        {/* ################### form- row-001 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"civilId\" className=\"col-sm-2 col-form-label\">الرقم المدني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" name=\"civilId\" className=\"form-control form-control-user\"\r\n                             ref={register({ required: true,minLength:12,maxLength:12})} />\r\n                            {errors?.civilId?.type===\"required\" && <span className=\"text-danger\">CivilId is required</span>  }\r\n                            {(errors?.civilId?.type===\"minLength\" || errors?.civilId?.type===\"maxLength\")  && \r\n                             <span  className=\"text-danger\">Length must be 12 </span>  }\r\n                            \r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">الرقم المسلسل</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" className=\"form-control form-control-user\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-002 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeNumber\" className=\"col-sm-2 col-form-label\">رقم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeNumber\"  type=\"text\" className=\"form-control form-control-user\"\r\n                              ref={register}/>\r\n                          </div>\r\n                          <label htmlFor=\"employeeName\" className=\"col-sm-2 col-form-label\">اسم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeName\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-003 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"mobileNumber\" className=\"col-sm-2 col-form-label\">رقم الهاتف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"mobileNumber\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">البريد الالكتروني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"email\" type=\"email\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-004 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"organization\" className=\"col-sm-2 col-form-label\">الادارة / القسم</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"organization\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"nationalityId\" className=\"col-sm-2 col-form-label\">الجنسية</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <Controller\r\n                                name=\"nationalityId\"\r\n                                control={control}\r\n                                placeholder=\" اختر الدولة \"\r\n                                options={nationalities}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-005 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\r\n                          <div className=\"col-sm-4\">\r\n     \r\n                              <Controller\r\n                                name=\"userTypeId\"\r\n                                control={control}\r\n                                placeholder=\"  Select UserType \"\r\n                                options={userTypes}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\r\n                          <div className=\"col-sm-4\">\r\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\r\n                              {/* <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" /> */}\r\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\r\n                              <Controller\r\n                                name=\"isMOA\"\r\n                                control={control}\r\n                                defaultValue={true}\r\n                                render={({ onChange, value }) => (\r\n                                  <Switch\r\n                                    onChange={onChange}\r\n                                    checked={value}\r\n                                    />\r\n                                  )}\r\n                              />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        \r\n                        \r\n                        </div>\r\n                        {/* ################### form- row-006 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"password\" type=\"password\" className=\"form-control form-control-user\" \r\n                             ref={register({\r\n                              required: \"You must specify a password\",\r\n                              minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                              }\r\n                            })} />\r\n                             {errors.password && <span  className=\"text-danger\">{errors.password.message}</span>}\r\n                          </div>\r\n                          <label htmlFor=\"password_repeat\" className=\"col-sm-2 col-form-label\">تأكيد كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input  type=\"password\" name=\"password_repeat\" className=\"form-control form-control-user\" \r\n                            ref={register({\r\n                              validate: value =>\r\n                                value === password.current || \"The passwords do not match\"\r\n                            })}/>\r\n                             {errors.password_repeat && <span  className=\"text-danger\">{errors.password_repeat.message}</span>}\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                   \r\n                        <hr />\r\n                        {/* ################# submit btn ##################### */}\r\n                        <div className=\"row justify-content-center\"> \r\n                        <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{fontSize: '22px'}}>\r\n                            تسجيل مستخدم جديد\r\n                          </button>\r\n                        </div>\r\n                        {/* ################# end submit btn ##################### */}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div></main>\r\n\r\n    {/*Success Modal */}\r\n      <ModalInfo show={propsModal.show}\r\n         handleClose={propsModal.handleClose} \r\n         modalBody={propsModal.modalBody}\r\n         modalTitle = {propsModal.modalTitle}\r\n        />\r\n\r\n\r\n   </Layout>\r\n  );\r\n}\r\n\r\nexport default Register2\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PassportInfo.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\assignType.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\lookup.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Layout.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\FullPageLoader.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ModalInfo.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\AuthHeader.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Header.tsx",["612","613","614","615"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { authenticateResponse } from '../../types/userInfo';\r\nimport { getLocalStorage } from '../../Services/utils/localStorageHelper';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n        <img className=\"navbar-brand d-none d-md-block\" src={process.env.PUBLIC_URL + 'img/brand.png'} alt=\"\" />\r\n\r\n        <p className=\"navbar-brand d-block d-sm-none\">وزارة الاوقاف والشئون اﻹسلامية</p>\r\n        <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\"\r\n        > <i className=\"fas fa-bars\" />\r\n        </button>\r\n        {/* profle*/}\r\n        {/*#######################################*/}\r\n        <div className=\"d-none d-md-inline-block\">\r\n          <ul className=\"navbar-nav ml-auto ml-md-0\">\r\n            {userAuth.isLoggedIn ?\r\n              <li className=\"nav-item dropdown\"> <a className=\"top-nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\" />&nbsp;&nbsp; ملف المستخدم\r\n              &nbsp;&nbsp;</a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                  <button className=\"dropdown-item sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; الملف الشخصي\r\n                  </button>\r\n                  <Link to=\"/login\" className=\"dropdown-item sb-nav-link-icon\" onClick={logout} >\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; تسجيل الخروج\r\n                  </Link>\r\n                  <div className=\"dropdown-divider \" />\r\n                </div>\r\n              </li> : <li className=\"nav-item\"><Link to=\"/login\" className=\"top-nav-link\">تسجيل الدخول</Link></li>}\r\n          </ul>\r\n        </div>\r\n        <div className=\"d-none d-md-inline-block\" />\r\n        {/*#######################################*/}\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\SideMenu.tsx",["616","617","618"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SideMenu = () => {\r\n  return (\r\n    <>\r\n      <div id=\"layoutSidenav_nav\">\r\n        <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n          <div className=\"sb-sidenav-menu\">\r\n            {/*#######################################*/}\r\n            <div className=\"nav\">\r\n              {/*############### Section title ########################*/}\r\n              <div className=\"sb-sidenav-menu-heading-title text-center\">نظام تجديد اﻹقامات-وزارة الاوقاف</div>\r\n              {/*######################################################*/}\r\n              {/*#######################################*/} <a className=\"nav-link\" href=\"#\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-house-user\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>الصفحة الرئيسية</span>\r\n              </a>\r\n          \r\n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/newApp\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>معاملة جديدة</span>\r\n              </NavLink>\r\n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/personalInfo\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>البيانات الشخصية</span>\r\n              </NavLink>\r\n              <NavLink  activeClassName=\"active\" className=\"nav-link\" to=\"/passportInfo\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>بيانات الجواز والاقامة</span>\r\n              </NavLink>\r\n              <a className=\"nav-link\" href=\"001-003.html\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>المرفقات</span>\r\n              </a>\r\n              <a className=\"nav-link\" href=\"001-004.html\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>إقرار السداد</span>\r\n              </a>\r\n              {/* ################## collapse link for group links #############\r\n                            */} <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                <div className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-user\" />&nbsp;&nbsp;\r\n                </div>قائمة روابط منسدلة &nbsp;&nbsp;\r\n                <div className=\"sb-sidenav-collapse-arrow\">\r\n                  &nbsp;<i className=\"fas fa-angle-double-down\" />&nbsp;&nbsp;\r\n                </div>\r\n              </a>\r\n              <div className=\"collapse\" id=\"collapseLayouts\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم واحد</span>\r\n                </a>\r\n                </nav>\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم اثنين</span>\r\n                </a>\r\n                </nav>\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم ثلاث</span>\r\n                </a>\r\n                </nav>\r\n              </div>\r\n              {/* ################## End collapse ############################## */}\r\n              {/*#######################################*/}\r\n            </div>\r\n            {/*#######################################*/}\r\n          </div>\r\n          <div className=\"sb-sidenav-footer text-center\">\r\n            <img   src={process.env.PUBLIC_URL + 'img/itc-text-logo-white.png'}  alt=\"\" />\r\n           \r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\register.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewApp.tsx",[],"C:\\MOAProjects\\webRR\\src\\index.tsx",[],["619","620"],"C:\\MOAProjects\\webRR\\src\\reportWebVitals.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\store.ts",[],"C:\\MOAProjects\\webRR\\src\\App.tsx",["621","622","623","624","625","626","627"],"import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Home from \"./UI/views/Home\";\nimport Login from \"./UI/views/Login\";\nimport PersonalInfo from \"./UI/views/PersonalInfo\";\nimport PassportInfo from \"./UI/views/PassportInfo\";\nimport Register from \"./UI/views/Register\";\nimport ProtectedRoute from \"./UI/components/ProtectedRoute\";\nimport ProtectedRouteAdmin from \"./UI/components/ProtectedRouteAdmin\";\nimport NotFound from \"./UI/views/NotFound\";\nimport Footer from \"./UI/components/Footer\";\nimport NewRequest from \"./UI/views/NewRequest\";\nimport TestRBwithRHF from \"./UI/views/TestRBwithRHF\";\nimport NewApp from \"./UI/views/NewApp\";\nimport ManageRequests from \"./UI/views/ManageRequests\";\nimport FileAttachments from \"./UI/views/FileAttachments\";\nimport Agreament from \"./UI/views/Agreament\";\nimport Profile from \"./UI/views/Profile\";\nimport ChangePassword from \"./UI/views/ChangePassword\";\nimport Result from \"./UI/views/Result\";\n////// Admin Imports \nimport InwardApplication from \"./UI/views/Admin/InwardApplication\";\nimport NewAppAdmin   from \"./UI/views/Admin/NewApp\";\nimport PersonalInfoAdmin from \"./UI/views/Admin/PersonalInfo\";\nimport PassportInfoAdmin from \"./UI/views/Admin/PassportInfo\";\nimport AppTypesSettings from \"./UI/views/Admin/AppTypesSettings\";\n\n\n\n\nfunction App() {\n\n\treturn (\n\t\t<Router>\n\n\t\t\t\n\t\t\t\t\t<Switch>\n\t                /////// Public Routing \n\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\n\t\t\t\t\t\t<Route exact path=\"/register\" component={Register} />\n\t\t\t\t\t\t<Route exact path=\"/TestRBwithRHF\" component={TestRBwithRHF} />\n\t\t\t\t\t////// Client Route \n      \t\t\t\t\t<ProtectedRoute exact path=\"/\" component={NewApp} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/newApp\" component={NewApp} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/personalInfo\" component={PersonalInfo} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/passportInfo\" component={PassportInfo} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/newRequest\" component={NewRequest} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/managerequests\" component={ManageRequests} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/fileAttachements\" component={FileAttachments} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/Agreament\" component={Agreament} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/result\" component={Result} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/profile\" component={Profile} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/changePassword\" component={ChangePassword} />\n\t\t\t\t\t\t\n\t\t\t\t\t\t\n                    /////admin routing \t\t\t\t\t\t\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/admin/personalInfo\" component={PersonalInfoAdmin} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/admin/passportInfo\" component={PassportInfoAdmin} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/admin/newApp\" component={NewAppAdmin} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/admin/InwardApplication\" component={InwardApplication} />\n\t\t\t\t\t\t<ProtectedRoute exact path=\"/admin/appTypesSettings\" component={AppTypesSettings} />\n\n\t\t\t\t\t\t{/* <Route exact path=\"/notfound\" component={NotFound} />\n\t\t\t\t\t\t<Redirect to=\"/notfound\" /> */}\n\t\t\t\t\t</Switch>\n\t\t\t\t\n\t\t\t\t<Footer />\n\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","C:\\MOAProjects\\webRR\\src\\State\\rootReducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\rootSaga.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Login.tsx",["628","629","630","631"],"import React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\nimport { authenticateResponse } from \"../../types/userInfo\";\nimport { useHistory } from \"react-router-dom\";\nimport FullPageLoader from \"../components/FullPageLoader\";\nimport { Redirect } from \"react-router-dom\";\nimport { getLocalStorage } from \"../../Services/utils/localStorageHelper\";\nimport Layout from \"../components/Layout\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from '../../State/rootReducer';\nimport {getloginRequest} from \"../../State/login\";\nimport {RequestClearRequest} from \"../../State/newApp\";\n\nconst Login = () => {\n\tlet userAuth = getLocalStorage(\"user\", authenticateResponse);\n\tconst history = useHistory();\n\tlet dispatch = useDispatch();\n\tconst loginstate = useSelector<RootState,RootState[\"login\"]>(state => state.login);\n\n\tconst [username, setUsername] = useState<string>(\"\");\n\tconst [password, setPassword] = useState<string>(\"\");\n\n\tconst [isFieldEmpty, setIsFieldEmpty] = useState(false);\n\tconst [wrongCredintials, setWrongCredintials] = useState(false);\n\n\n\n\tuseEffect(() => {\n\t\tdocument.body.classList.add(\"sb-sidenav-toggled\");\n\t\treturn () => {\n\t\t\tdocument.body.classList.remove(\"sb-sidenav-toggled\");\n\t\t}\n\t}, []);\n\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\n\t\te.preventDefault();\n\t\tdispatch(getloginRequest({username,password}));\n\t    dispatch(RequestClearRequest());\n\n\t\n\t\t\n\n\t\t/*if (username.trim() === \"\" || password.trim() === \"\") {\n\t\t\tsetIsFieldEmpty(true);\n\t\t\treturn;\n\t\t}\n\t\tsetLoading(true);\n\t\n\t\tlet loginRes: AuthenticateResponse = await login(username, password);\n\t\tconsole.log(\"loginRes\", loginRes);\n\t\t\n\n\t\tif (!loginRes.hasError) {\n\t\t\tloginRes.isLoggedIn = true;\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(loginRes));\n\t\t\tsetLoading(false);\n\t\t}\n\t\telse if(loginRes.hasError && loginRes.status < 500 && loginRes.status > 299) {\n\t\t\tsetWrongCredintials(true);\n\t\t\tsetLoading(false);\n\t\t}*/\n\t}\n\n\tconst handleNewUser = (e:SyntheticEvent)=>\n\t{\n\t\te.preventDefault();\n\t\thistory.push(\"/register\");\n\t}\n\treturn (\n\t\t<Layout>\n\t\t\t{!userAuth.isLoggedIn &&\n\t\t\t\t<main className=\"login-bg\">\n\t\t\t\t\t<div className=\"container\" style={{ marginBottom: '80px' }}>\n\t\t\t\t\t\t{/* Outer Row */}\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t\t<div className=\"col-xl-10 col-lg-12 col-md-9\">\n\t\t\t\t\t\t\t\t<div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n\t\t\t\t\t\t\t\t\t<div className=\"card-header bg-dark\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>تسجيل دخول لخدمات\n                            البوابة الالكترونية</h1>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"card-body p-0 \">\n\t\t\t\t\t\t\t\t\t\t{/* Nested Row within Card Body */}\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 p-5 text-center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-4 gold\" style={{ fontSize: '16px', lineHeight: '30px' }}>ادخل اسم المستخدم وكلمة السر\n                                  للدخول الى خدمات البوابة اﻹلكترونية</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t{wrongCredintials &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tاسم المتسخدم / كلمة المرور غير صحيحة!\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t{isFieldEmpty &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tمطلوب اسم المستخدم / كلمة المرور!\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t<form className=\"user\" onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={username} type=\"email\" className=\"form-control form-control-user\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل اسم المستخدم\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={password} type=\"password\" className=\"form-control form-control-user\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputPassword\" placeholder=\"ادخل كلمة السر \" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row justify-content-between\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-user  shorooq \" style={{ fontSize: '22px' }}> تسجيل الدخول الى النظام  </button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button  className=\"btn btn-info btn-user shorooq \" style={{ fontSize: '22px' }} onClick={handleNewUser}> تسجيل مستخدم جديد </button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{loginstate.hasError &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tيوجد خطا فى كلمه واسم المرور\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4 d-none d-lg-block text-center my-auto\" style={{ backgroundColor: 'transparent' }}>\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'img/kwtman.png'} alt=\"\" width=\"80%\" />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t}\n\t\t\t{userAuth.isLoggedIn &&\n\t\t\t\t<Redirect\n\t\t\t\t\tto={{\n\t\t\t\t\t\tpathname: \"/newApp\",\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t}\n\t\t\t\n\t\t</Layout>\n\t);\n};\n\nexport default Login;","C:\\MOAProjects\\webRR\\src\\UI\\views\\Home.tsx",["632"],["633","634"],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NotFound.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Register.tsx",["635","636"],"import React,{useState,useEffect,useRef} from 'react'\nimport Layout from \"../components/Layout\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from 'react-select';\nimport Switch from \"react-switch\";\nimport {RegisterRequest,RegisterRequestModel} from \"../../types/registerRequest\";\nimport {getNationalities,getUserTypes} from \"../../Services/lookup\";\nimport {assignToSelectType, assignToType} from \"../../Services/utils/assignType\";\nimport ModalInfo, {PropsModal} from '../components/ModalInfo';\nimport {SelectOptions} from \"../../types/UIRelated\";\nimport {RegisterNonSapUser}from \"../../Services/register\";\nimport {IResponse as Response} from \"../../types\";\n\n\n\nconst Register2 = () => {\n  const history = useHistory(); \n\n\n  const [moaIqama, setmoaIqama] = useState(true);\n  const [nationalities, setnationalitiesOption] = useState<SelectOptions[]>();\n  const [userTypes, setuserTypesOption] = useState<SelectOptions[]>();\n  const [show, setShow] = useState(false);\n  const [propsModal, setpropsModal] = useState<PropsModal>({\n    handleClose: () => {setShow(false); history.push(\"/login\");},\n    show: show,\n    modalBody: '',\n    modalTitle: ''\n  });\n\n\n  const { register, handleSubmit, watch, errors,control } = useForm<RegisterRequestModel>();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n\n\n  const onSubmit = async (data:FormData) => {\n    \n    let temp = new RegisterRequestModel();\n    temp = assignToType(data,temp);\n    \n    let arg = new RegisterRequest();\n    arg.email = temp.email;\n    arg.password = temp.password;\n    arg.civilId= temp.civilId;\n    arg.employeeName= temp.employeeName;\n    arg.nationalityId = temp.selectedNationality?.value;\n    arg.jobTitle = temp.jobTitle;\n    arg.userTypeId = temp.userTypeId?.value;\n    arg.employeeType=\"temp Data\";//TODO\n    arg.organization=temp.organization;\n    arg.mobileNumber = temp.mobileNumber;\n    arg.employeeNumber= temp.employeeNumber;\n\n\n    let a:Response= await RegisterNonSapUser(arg);\n\n    if (a.status ){\n      let tempModal = {...propsModal}\n      tempModal.show = true;\n      tempModal.modalBody=a.message as string;\n      tempModal.modalTitle=\"Info\"\n      setpropsModal({...tempModal});\n    }\n\n  }\n\n//intial fetch for dropdown\n  useEffect(() => {\n    const GetDropdownValues = async()=>{\n      let responseNations = await getNationalities();\n      let nationOptions: SelectOptions[] = assignToSelectType(responseNations, \"nationalityId\", \"nationalityName\");\n      setnationalitiesOption(nationOptions);\n\n      let responseUserTypes = await getUserTypes();\n      let userTypesOptions: SelectOptions[] = assignToSelectType(responseUserTypes, \"userTypeId\", \"userTypeName\");\n      setuserTypesOption(userTypesOptions);\n      \n    };  \n    GetDropdownValues();\n    \n  }, []);\n  return (\n    <Layout>\n\n      <main className=\"login-bg\">\n\n      <div className=\"container\" style={{marginBottom: '80px'}}>\n        {/* Outer Row */}\n        <div className=\"row justify-content-center\">\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n              <div className=\"card-header bg-dark\">\n                <div className=\"text-center\">\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>تسجيل مستخدم جديد</h1>\n                </div>\n              </div>\n              <div className=\"card-body p-0 \">\n                {/* Nested Row within Card Body */}\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"p-5\">\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                        {/* ################### form- row-001 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"civilId\" className=\"col-sm-2 col-form-label\">الرقم المدني</label>\n                          <div className=\"col-sm-4\">\n                            <input type=\"text\" name=\"civilId\" className=\"form-control form-control-user\"\n                             ref={register({ required: true,minLength:12,maxLength:12})} />\n                            {errors?.civilId?.type===\"required\" && <span className=\"text-danger\">CivilId is required</span>  }\n                            {(errors?.civilId?.type===\"minLength\" || errors?.civilId?.type===\"maxLength\")  && \n                             <span  className=\"text-danger\">Length must be 12 </span>  }\n                            \n                          </div>\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">الرقم المسلسل</label>\n                          <div className=\"col-sm-4\">\n                            <input type=\"text\" name=\"civilIdSerialNumber\" className=\"form-control form-control-user\" \n                            ref={register({ required: true})}/>\n                             {errors?.civilIdSerialNumber?.type===\"required\" && \n                             <span className=\"text-danger\">CivilIdSerialNumber is required</span>  }\n                          </div>\n                        </div>\n                        {/* ################### form- row-002 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeNumber\" className=\"col-sm-2 col-form-label\">رقم الموظف</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"employeeNumber\"  type=\"text\" className=\"form-control form-control-user\"\n                              ref={register}/>\n                          </div>\n                          <label htmlFor=\"employeeName\" className=\"col-sm-2 col-form-label\">اسم الموظف</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"employeeName\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\n                          </div>\n                        </div>\n                        {/* ################### form- row-003 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"mobileNumber\" className=\"col-sm-2 col-form-label\">رقم الهاتف</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"mobileNumber\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\n                          </div>\n                          <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">البريد الالكتروني</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"email\" type=\"email\" className=\"form-control form-control-user\" ref={register} />\n                          </div>\n                        </div>\n                        {/* ################### form- row-004 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"organization\" className=\"col-sm-2 col-form-label\">الادارة / القسم</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"organization\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\n                          </div>\n                          <label htmlFor=\"selectedNationality\" className=\"col-sm-2 col-form-label\">الجنسية</label>\n                          <div className=\"col-sm-4\">\n                            <Controller\n                                name=\"selectedNationality\"\n                                control={control}\n                                placeholder=\" اختر الدولة \"\n                                options={nationalities}\n                                as={Select}\n                              />\n                          </div>\n                        </div>\n                        {/* ################### form- row-005 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\n                          <div className=\"col-sm-4\">\n     \n                              <Controller\n                                name=\"userTypeId\"\n                                control={control}\n                                placeholder=\"  Select UserType \"\n                                options={userTypes}\n                                as={Select}\n                              />\n                          </div>\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\n                          <div className=\"col-sm-4\">\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\n                              {/* <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" /> */}\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\n                              <Controller\n                                name=\"isMOA\"\n                                control={control}\n                                defaultValue={true}\n                                render={({ onChange, value }) => (\n                                  <Switch\n                                    onChange={onChange}\n                                    checked={value}\n                                    />\n                                  )}\n                              />\n                            {/* </div> */}\n                          </div>\n                        \n                        \n                        </div>\n                        {/* ################### form- row-006 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">كلمة المرور</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"password\" type=\"password\" className=\"form-control form-control-user\" \n                             ref={register({\n                              required: \"You must specify a password\",\n                              minLength: {\n                                value: 8,\n                                message: \"Password must have at least 8 characters\"\n                              }\n                            })} />\n                             {errors.password && <span  className=\"text-danger\">{errors.password.message}</span>}\n                          </div>\n                          <label htmlFor=\"password_repeat\" className=\"col-sm-2 col-form-label\">تأكيد كلمة المرور</label>\n                          <div className=\"col-sm-4\">\n                            <input  type=\"password\" name=\"password_repeat\" className=\"form-control form-control-user\" \n                            ref={register({\n                              validate: value =>\n                                value === password.current || \"The passwords do not match\"\n                            })}/>\n                             {errors.password_repeat && <span  className=\"text-danger\">{errors.password_repeat.message}</span>}\n\n                          </div>\n                        </div>\n\n                   \n                        <hr />\n                        {/* ################# submit btn ##################### */}\n                        <div className=\"row justify-content-center\"> \n                        <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{fontSize: '22px'}}>\n                            تسجيل مستخدم جديد\n                          </button>\n                        </div>\n                        {/* ################# end submit btn ##################### */}\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div></main>\n\n    {/*Success Modal */}\n      <ModalInfo show={propsModal.show}\n         handleClose={propsModal.handleClose} \n         modalBody={propsModal.modalBody}\n         modalTitle = {propsModal.modalTitle}\n        />\n\n\n   </Layout>\n  );\n}\n\nexport default Register2\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\PersonalInfo.tsx",["637","638","639","640","641","642","643","644","645","646"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { IState } from \"../../State/personalInfo\";\nimport { SelectOptions } from \"../../types/UIRelated\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../State/rootReducer\";\nimport { assignToType } from \"../../Services/utils/assignType\";\nimport { getCreateRequest,getFetchRequest,getUpdateRequest as personalInfoUpdate } from \"../../State/personalInfo\";\nimport { getFetchIncompleteRequest,getUpdateRequest } from \"../../State/newApp\";\nimport { useHistory } from \"react-router-dom\";\nimport {Steps,ErrorMessages} from \"../../types/Enums\"\n\n\n\nexport interface IFormData extends IState {\n  selectedDept?: SelectOptions,\n  selectedJobTitle?: SelectOptions\n}\n\nclass TempClass implements IState {\n  id: number | undefined;\n  employeeNumber: number | undefined;\n  employeeNameArabic: string | undefined;\n  employeeNameEnglish: string | undefined;\n  birthDate: Date | undefined;\n  mobileNumber: string | undefined;\n  department: string | undefined;\n  jobTitle?: string | undefined;\n  hireDate?: Date | undefined;\n  applicationNumber?: number | undefined;\n  userId?: number | undefined;\n  createdDate?: Date | undefined;\n  updatedDate?: Date | undefined;\n}\n\n\n\nconst PersonalInfo = () => {\n  const history = useHistory();\n  const newAppState = useSelector<RootState, RootState[\"newApp\"]>(state => state.newApp);\n  const loginData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const stateData = useSelector<RootState, RootState[\"personalInfo\"]>(state => state.personalInfo);\n  const { userInfo } = loginData;\n  const [Direction, setDirection] = useState<string>(\"\");\n  \n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors,setValue, getValues,control } = useForm<IFormData>({\n    defaultValues:{\n      userId : userInfo?.userId,\n      birthDate : userInfo?.birthDate?new Date(userInfo?.birthDate as Date):undefined,\n      employeeNumber:userInfo?.employeeNumber?Number(userInfo?.employeeNumber):undefined,\n      employeeNameArabic : userInfo?.employeeName,\n      mobileNumber : userInfo?.mobileNumber,\n      createdDate:  undefined,\n      updatedDate: undefined,\n      hireDate: userInfo?.hireDate?new Date(userInfo?.hireDate as Date):undefined\n    }\n  });\n\n  //TODO pick values correctly\n  const jobTitleOptions: SelectOptions[] =\n    [\n      { label: \"طباع\", value: \"1\" },\n      { label: \"مبرمج\", value: \"2\" }\n    ]\n\n  const deptOptions: SelectOptions[] =\n    [\n      { label: \"نظم المعلومات\", value: \"1\" },\n      { label: \"الشئون الادارية\", value: \"2\" }\n    ]\n\n\n\n  useEffect(() => {\n    if (newAppState.IState.applicationNumber === undefined) {\n      history.push(\"/newapp\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newAppState.IState.stepNo as number  >= Steps.PersonalInfo) {\n       dispatch(getFetchRequest(newAppState.IState.applicationNumber as number));\n   }\n  }, [newAppState.IState.stepNo]);\n\n  useEffect(() => {\n  if(stateData.id!==undefined)\n  {\n    setValue(\"employeeNameArabic\", stateData.employeeNameArabic);\n    setValue(\"employeeNameEnglish\", stateData.employeeNameEnglish);\n    setValue(\"mobileNumber\", stateData.mobileNumber);\n    setValue(\"employeeNumber\", stateData.employeeNumber);\n    setValue(\"selectedJobTitle\", jobTitleOptions.find(j => j.value === stateData.jobTitle));\n    setValue(\"selectedDept\", deptOptions.find(j => j.value === stateData.department));\n  }\n\n    \n  }, [stateData]);\n\n  const onSubmit = async (data: IFormData) => {\n    let res = new TempClass();\n    res = assignToType(data, res);\n    console.log(\"res on submit\", res);\n    res.department = data.selectedDept?.value;\n    res.jobTitle = data.selectedJobTitle?.value;\n    res.applicationNumber = newAppState.IState.applicationNumber;\n    res.userId = newAppState.IState.userId;\n    res.employeeNumber = Number(data?.employeeNumber);\n\n    if(stateData.id ===undefined ||stateData.id===0)\n    {\n      res.createdDate = new Date();\n      dispatch(getCreateRequest(res));\n    }\n   else{\n     res.id = stateData.id;\n     dispatch(personalInfoUpdate(res));\n   }\n   if(Direction===\"fwd\")\n   {\n     history.push(\"/passportInfo\");\n   }\n   else if(Direction===\"bwd\")\n   {\n     history.push(\"/newApp\");\n   }\n  }\n  return (\n      <main className=\"login-bg\">\n        <div className=\"container\" style={{ marginBottom: '80px' }}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>معاملة تجديد اقامة - البيانات\n                      الشخصية</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                          {/* ################### form- row-001 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"number\" className=\"form-control form-control-user\"\n                                name=\"employeeNumber\" defaultValue={userInfo?.employeeNumber} ref={register} />\n                            </div>\n                          </div>\n                          {/* ################### form- row-002 #################*/}\n                          <div className=\"form-group row\">\n                            <label htmlFor=\"employeeNameArabic\" className=\"col-sm-3 col-form-label\">اسم الموظف-عربي</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\"\n                                name=\"employeeNameArabic\"  ref={register({required:true})} />\n                                 {errors?.employeeNameArabic?.type===\"required\" && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">رقم الهاتف</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\"\n                                name=\"mobileNumber\" ref={register({required:true})} />\n                                 {errors?.mobileNumber?.type===\"required\" && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-003 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-انجليزي</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\"\n                                name=\"employeeNameEnglish\" ref={register({required:true})} />\n                                 {errors?.employeeNameEnglish?.type===\"required\" && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">تاريخ الميلاد</label>\n                            <div className=\"col-sm-3\">\n                              {/* <input type=\"date\" className=\"form-control form-control-user\" /> */}\n                              <Controller\n                                control={control}\n                                name=\"birthDate\"\n                                render={({ onChange, onBlur, value }) => (\n                                  <ReactDatePicker\n                                    onChange={onChange}\n                                    onBlur={onBlur}\n                                    selected={value}\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    placeholderText=\"dd/MM/yyyy \"\n                                    className=\"form-control form-control-user\"\n                                    disabled\n                                    required={true}\n                                  />\n                               \n                                )}\n                                \n                              />\n                              {errors?.birthDate?.type===\"required\" && \n                                  <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-004 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">الادارة/القسم</label>\n                            <div className=\"col-sm-3\">\n                              <Controller\n                                name=\"selectedDept\"\n                                control={control}\n                                rules={{\n                                  required: true  }}\n                                placeholder=\" اختر الادار  \"\n                                options={deptOptions}\n                                as={Select}\n                                \n                              />\n  {errors?.selectedDept !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">المسمى الوظيفي</label>\n                            <div className=\"col-sm-3\">\n                              <Controller\n                                name=\"selectedJobTitle\"\n                                control={control}\n                                rules={{\n                                  required: true  }}\n                                placeholder=\" اختر المسمى الوظيفي  \"\n                                options={jobTitleOptions}\n                                as={Select}\n                              />\n  {errors?.selectedJobTitle !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-005 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">تاريخ التعيين</label>\n                            <div className=\"col-sm-3\">\n                              <Controller\n                                control={control}\n                                name=\"hireDate\"\n                                render={({ onChange, onBlur, value }) => (\n                                  <ReactDatePicker\n                                    onChange={onChange}\n                                    onBlur={onBlur}\n                                    selected={value}\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    placeholderText=\"dd/MM/yyyy \"\n                                    className=\"form-control form-control-user\"\n                                    disabled\n                                required={true}\n                                    />\n                                )}\n                              />\n                                 {errors?.hireDate?.type===\"required\" && \n                                  <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-006 #################*/}\n                          {/* ################# submit btn ##################### */}\n                          <div  className=\"row justify-content-between\"> \n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"bwd\");  }} style={{ fontSize: '22px' }}>\n                          \n                          <a   className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\n                            السابق\n                            </a>\n                            </button>\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"fwd\");  }} style={{ fontSize: '22px' }}>\n                            <a  className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>التالي\n                          </a>\n                            </button>\n                          </div>\n                          {/* ################# end submit btn ##################### */}\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div></main>\n  );\n}\nexport default PersonalInfo;","C:\\MOAProjects\\webRR\\src\\UI\\views\\PassportInfo.tsx",["647","648","649","650","651","652","653","654","655","656","657","658","659","660"],"import React,{useState,useEffect} from 'react'\nimport Layout from \"../components/Layout\";\nimport ReactDatePicker from \"react-datepicker\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select';\nimport { useForm, Controller } from \"react-hook-form\";\nimport {IState} from \"../../State/passportInfo\";\nimport {SelectOptions} from \"../../types/UIRelated\"\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootState } from \"../../State/rootReducer\";\nimport { assignToType} from \"../../Services/utils/assignType\";\nimport {getCreateRequest,getFetchRequest,getUpdateRequest as updatePassportInfo} from \"../../State/passportInfo\";\nimport {getNationalitiesRequest} from \"../../State/lookUps\";\nimport { getFetchIncompleteRequest,getUpdateRequest } from \"../../State/newApp\";\nimport {Steps,ErrorMessages} from \"../../types/Enums\"\nimport { useHistory } from \"react-router-dom\";\n\n\nexport interface IFormData extends IState {\n  selectedNationality?:SelectOptions,\n  selectedIssueCountry?:SelectOptions\n  }\n\n\nclass TempClass implements IState{\n  id?:number ;\n  civilID?:number;  \n  nationalityId?:string;\n  passportNumber?:number;\n  issueCountry?:string;\n  issueDate?:Date;\n  expiryDate?:Date;\n  address?:string; \n  residencyExpiryDate?:Date; \n  applicationNumber?:number;    \n  userId?:number;    \n  createdDate?:Date; \n  updatedDate?:Date;\n\n}\nconst PassportInfo = () => {\n\n\n  const history = useHistory();\n  const LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\n  const newAppState = useSelector<RootState, RootState[\"newApp\"]>(state => state.newApp);\n  const loginData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const stateData = useSelector<RootState,RootState[\"passportInfo\"]>(state => state.passportInfo);\n  const {Nationalities} = LookUpState;\n  const { userInfo } = loginData;\n  const [startDate, setStartDate] = useState(new Date());\n  const [Direction, setDirection] = useState<string>(\"\");\n\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors,setValue, getValues,control } = useForm<IFormData>({\n    defaultValues:{\n      userId : userInfo?.userId,\n      civilID: userInfo?.civilId?Number(userInfo?.civilId):undefined,\n\n    }\n  });\n\n  console.log(\"errors\",errors);\n  useEffect(() => {\n    const GetDropdownValues = async () => {\n      if (Nationalities === undefined) {\n        dispatch(getNationalitiesRequest());\n      }\n    };\n    GetDropdownValues();\n\n  }, []);\n\n  useEffect(() => {\n    if (newAppState.IState.applicationNumber === undefined) {\n       dispatch(getFetchIncompleteRequest(userInfo?.userId as number));\n    }\n  }, []);\n\n  useEffect(() => {\n    console.log(\"in useeffect/newAppState.stepNo\");\n    if (newAppState.IState.stepNo as number  >= Steps.PassportInfo) {\n       dispatch(getFetchRequest(newAppState.IState.applicationNumber as number));\n       console.log(\"in useeffect/newAppState.stepNo\")\n   }\n  }, [newAppState.IState.stepNo]);\n\n\n  useEffect(() => {\n\n    setValue(\"passportNumber\", stateData.passportNumber);\n     setValue(\"issueDate\", stateData.issueDate?new Date(stateData.issueDate as Date):undefined);\n     setValue(\"expiryDate\", stateData.expiryDate?new Date(stateData.expiryDate as Date):undefined);\n     setValue(\"residencyExpiryDate\", stateData.residencyExpiryDate?new Date(stateData.residencyExpiryDate as Date):undefined);\n     setValue(\"address\", stateData.address);\n\n    if(Nationalities!==undefined ) \n    {\n      setValue(\"selectedNationality\", (Nationalities as SelectOptions[]).find(j => j.value === stateData.nationalityId));\n      setValue(\"selectedIssueCountry\", (Nationalities as SelectOptions[]).find(j => j.value === stateData.issueCountry));\n    }\n\n\n    \n  }, [stateData,Nationalities]);\n\n  const onSubmit = async (data:IFormData) => {\n    console.log(\"data on submit\",data);\n    console.log(\"stateData\",stateData); \n    let res  = new TempClass();\n    res = assignToType(data,res); \n    console.log(\"res on submit\",res);\n    res.nationalityId=data.selectedNationality?.value;\n    res.issueCountry = data.selectedIssueCountry?.value;\n    res.applicationNumber=newAppState.IState.applicationNumber;;\n    res.userId=newAppState.IState.userId;\n    res.civilID = userInfo?.civilId?Number(userInfo?.civilId):undefined;\n\n\n \n    if(stateData.id ===undefined ||stateData.id===0)\n    {\n      res.createdDate = new Date();\n      dispatch(getCreateRequest(res));\n      newAppState.IState.stepNo =Steps.PassportInfo;\n      dispatch(getUpdateRequest(newAppState.IState));\n    }\n   else{\n     res.id = stateData.id;\n     dispatch(updatePassportInfo(res));\n   }\n   if(Direction==\"fwd\")\n   {\n   history.push(\"/fileAttachements\");\n   }\n   else if(Direction==\"bwd\")\n   {\n    history.push(\"/personalinfo\");\n   }\n\n  }\n    return (\n        <main className=\"login-bg\">\n        <div className=\"container\" style={{marginBottom: '80px'}}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>معاملة تجديد اقامة - بيانات\n                      الجواز والاقامة</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                          {/* ################### form- row-001 #################*/}\n                          {/* <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">رقم الموظف</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\" />\n                            </div>\n                          </div> */}\n                          {/* ################### form- row-002 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">الرقم المتسلسل</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\" />\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">الجنسية</label>\n                            <div className=\"col-sm-3\">\n                                <Controller\n                                  name=\"selectedNationality\"\n                                  control={control}\n                                  placeholder=\" اختر الادار  \"\n                                  rules={{\n                                    required: true  }}\n                                  options={Nationalities}\n                                  as={Select}\n                                />\n                                      {errors?.selectedNationality !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-003 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">رقم الجواز</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\"  \n                              name=\"passportNumber\"  ref={register({ required: true})} />\n                                 {errors?.passportNumber?.type===\"required\" && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">مكان الاصدار</label>\n                            <div className=\"col-sm-3\">\n\n                               <Controller\n                                  name=\"selectedIssueCountry\"\n                                  control={control}\n                                  placeholder=\" اختر الادار  \"\n                                  options={Nationalities}\n                                  rules={{\n                                    required: true  }}\n                                  as={Select}\n                                />\n                                 {errors?.selectedIssueCountry !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-004 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الاصدار</label>\n                            <div className=\"col-sm-3\">\n                            <Controller\n                                  control={control}\n                                  name=\"issueDate\"\n                                  rules={{\n                                    required: true  }}\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      maxDate={new Date()}\n                                      onBlur={onBlur}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      className=\"form-control form-control-user\"\n                                    />\n                     \n                                  )}\n                                />\n                                {errors?.issueDate !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الانتهاء</label>\n                            <div className=\"col-sm-3\" >\n                            <Controller\n                                  control={control}\n                                  name=\"expiryDate\"\n                                  rules={{\n                                    required: true  }}\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      maxDate={new Date()}\n                                      onBlur={onBlur}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      className=\"form-control form-control-user\"\n                                    />\n                                  )}\n                                />\n                                {errors?.expiryDate !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                           \n                          </div>\n                          {/* ################### form- row-005 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">عنوان السكن</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" className=\"form-control form-control-user\"  \n                              name=\"address\" ref={register({ required: true})} />\n                                   {errors?.address?.type===\"required\" && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ انتهاء الاقامة</label>\n                            <div className=\"col-sm-3\">\n                            <Controller\n                                  control={control}\n                                  name=\"residencyExpiryDate\"\n                                  rules={{\n                                    required: true  }}\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      onBlur={onBlur}\n                                      maxDate={new Date()}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      className=\"form-control form-control-user\"\n                                    />\n                                  )}\n                                />\n                                    {errors?.residencyExpiryDate !==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                            </div>\n                          </div>\n                          {/* ################### form- row-006 #################*/}\n                          {/* ################# submit btn ##################### */}\n                          <div  className=\"row justify-content-between\"> \n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"bwd\");  }} style={{ fontSize: '22px' }}>\n                          \n                          <a   className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\n                            السابق\n                            </a>\n                            </button>\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"fwd\");  }} style={{ fontSize: '22px' }}>\n                            <a  className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>التالي\n                          </a>\n                            </button>\n                          </div>\n                          {/* ################# end submit btn ##################### */}\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </main>\n       \n    )\n}\n\nexport default PassportInfo;\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\TestRBwithRHF.tsx",["661","662","663","664"],"import React from 'react'\nimport { Form, Button, Card, Container, Row, Col } from 'react-bootstrap';\nimport { useForm, Controller } from \"react-hook-form\";\nimport Select from 'react-select';\n\n\nfunction TestRBwithRHF() {\n    const options = [\n        { value: 'chocolate', label: 'Chocolate' },\n        { value: 'strawberry', label: 'Strawberry' },\n        { value: 'vanilla', label: 'Vanilla' }\n      ]\n    const { register, handleSubmit, watch, errors, control } = useForm();\n\n    const onSubmit = (data: FormData) => {\n        console.log(\"data\", data);\n    }\n    return (\n        <>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\"\n                        className=\"text-danger\"\n                        ref={register({ required: true })} />\n                    <Form.Text className=\"text-muted\" >\n                        We'll never share your email with anyone else.\n    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\n                </Form.Group>\n                <Form.Group controlId=\"formBasicCheckbox\">\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n                </Form.Group>\n                <Form.Group className=\"row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\n                          <div className=\"col-sm-4\">\n     \n                          <Select ref={register} name=\"ice\" options={options} />\n                          </div>\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\n                          <div className=\"col-sm-4\">\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\n                              <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" />\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\n                              {/* <Controller\n                                name=\"isMOA\"\n                                control={control}\n                                defaultValue={true}\n                                render={({ onChange, value }) => (\n                                  <Switch\n                                    onChange={onChange}\n                                    checked={value}\n                                    />\n                                  )}\n                              /> */}\n                            {/* </div> */}\n                          </div>\n                        \n                        \n                        </Form.Group>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n  </Button>\n            </Form>\n            <Container fluid>\n                <Row>\n                    <Col >\n                        <Card style={{ width: '18rem' }}>\n                            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                            <Card.Body>\n                                <Card.Title>Card Title</Card.Title>\n                                <Card.Text>\n                                    Some quick example text to build on the card title and make up the bulk of\n                                    the card's content.\n    </Card.Text>\n                                <Button variant=\"primary\">Go somewhere</Button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n\n        </>\n    )\n}\n\nexport default TestRBwithRHF\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\NewRequest.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\ProtectedRoute.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NewApp.tsx",["665","666","667","668","669","670","671","672","673","674","675","676"],"import React, {useEffect,useState} from 'react';\nimport Layout from \"../components/Layout\";\nimport Select from 'react-select';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from '../../State/rootReducer';\nimport {getAppTypesRequest} from \"../../State/lookUps\";\nimport {SelectOptions} from '../../types/UIRelated';\nimport { useHistory ,useParams} from \"react-router-dom\";\nimport {getCreateRequest,getFetchIncompleteRequest,getUpdateRequest,getUserApplicationsByApplicationNumber} from \"../../State/newApp\";\nimport {Steps,StatusType,ErrorMessages} from \"../../types/Enums\"\nimport {INewAppState} from '../../types/newApp'\n\n\n\n\n\nconst NewApp: React.FunctionComponent<INewAppState> =() => {\n\tconst LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\n  const newAppState = useSelector<RootState,RootState[\"newApp\"]>(state => state.newApp);\n  const userData = useSelector<RootState,RootState[\"login\"]>(state => state.login);\n  const [appType, setappType] = useState<SelectOptions|undefined>({label:\"\",value:\"\"});\n  const [labelName,setLablelName]=useState<string>(\"\");\n  const history = useHistory();\n  const param=useParams();\n  const {AppTypes} = LookUpState;\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n       if (newAppState.IState.applicationNumber===undefined && newAppState.isloading==false )\n       {\n          dispatch(getFetchIncompleteRequest(userData.userInfo?.userId as number));\n       }\n       \n  \n    const GetDropdownValues = async () => {\n      if (AppTypes === undefined) {\n        dispatch(getAppTypesRequest());\n      }\n    };\n    GetDropdownValues();\n\n  }, []);\n\n  useEffect(() => {\n    console.log(\"in useEffect newAppState.applicationTypeId,AppTypes\");\n    if ( newAppState.IState.applicationStatusId==StatusType.Creation||newAppState.IState.applicationStatusId==StatusType.Return)\n    {\n      let selectedObj = AppTypes?.find(a=>a.value===newAppState.IState.applicationTypeId?.toString());\n      setappType(selectedObj);\n    }\n    if (( newAppState.IState.applicationStatusId==StatusType.Creation||newAppState.IState.applicationStatusId==StatusType.Return) && newAppState.isloading==false )\n    {\n      setLablelName(\"  استكمال اخر  معاملة \");\n   }\n    else \n    {\n      setLablelName(\"  بدء معاملة جديدة\");\n    }\n\n    return () => {\n    }\n  }, [newAppState.IState.applicationTypeId,AppTypes]);\n\n  \n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\n\t\t e.preventDefault();\n     newAppState.IState.applicationTypeId = Number(appType?.value);\n     if (newAppState.IState.applicationNumber===undefined||newAppState.IState.applicationNumber===0)\n     {\n      newAppState.IState.applicationDate = new Date();\n      newAppState.IState.userId=userData.userInfo?.userId;\n      newAppState.IState.isActive=false;\n      newAppState.IState.stepNo=Steps.CreateApp;\n      newAppState.IState.applicationStatusId=StatusType.Creation;\n      newAppState.IState.remark=\"ss\";\n      dispatch(getCreateRequest(newAppState.IState));\n     }\n    else\n    {\n      console.log(\"in else\");\n      \n      newAppState.IState.remark=\"ss1\";\n      dispatch(getUpdateRequest(newAppState.IState));\n    }\n    history.push(\"/personalInfo\");\n\n\t}\n\n  const handleAppTypeChange = async (value?:SelectOptions|SelectOptions[] | null) => { \n   if (value)\n   {\n      let temp : SelectOptions= value as SelectOptions;\n      setappType(temp);\n   }\n  }\n    return (\n                  <main className=\"login-bg\">\n        <div className=\"container\" style={{marginBottom: '80px'}}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>نموذج انشاء معاملة جديدة</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit}>\n                          <div className=\"form-group\">\n                            <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\" disabled={true} aria-describedby=\"emailHelp\" placeholder=\"اختر نوع المعامله \" />\n                          </div>\n                          <div className=\"form-group\">\n                           \n                            <Select \n                             name=\"AppType\" \n                             placeholder=\"اختر نوع المعاملة \"\n                             options={AppTypes}\n                             value= {appType}\n                             onChange={handleAppTypeChange}\n                             rules={{\n                              required: true  }}\n                              />\n {appType ==undefined && \n                                 <span className=\"text-danger\">{ErrorMessages.required}</span>  }\n                          </div>\n                          <div className=\"row justify-content-center\"> <button type=\"submit\" className=\"btn btn-primary btn-user  shorooq \" style={{fontSize: '22px'}}>\n                           {labelName}\n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div></main>\n   \n            \n        \n    )\n}\n\nexport default NewApp\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\Footer.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\lookup.ts",["677","678"],"import {GET_NATIONALITIES,GET_USERTYPES,GET_APPTYPES } from \"./Urls\";\nimport {assignToTypeArray} from \"./utils/assignType\";\nimport {Nationality,UserType,AppType} from \"../types/lookUpTypes\";\nimport {SelectOptions} from \"../types/UIRelated\"\n\nexport const getNationalities = async ():Promise<Nationality[]> =>{\n    let response = await fetch(GET_NATIONALITIES, { \n        headers: {\n          'Content-Type': 'application/json'\n        }      \n      });\n      let data = await response.json();     \n      let nationalities = new Array<Nationality>();\n      nationalities = assignToTypeArray<Nationality>(data, new Nationality(),nationalities);\n      return nationalities;\n}\n\n// export const getUserTypes = async ():Promise<UserType[]> =>{\n//     let response = await fetch(GET_USERTYPES, { \n//         headers: {\n//           'Content-Type': 'application/json'\n//         }      \n//       });\n//       let data = await response.json();     \n//       let userTypes = new Array<UserType>();\n//       userTypes = assignToTypeArray<UserType>(data, new UserType(),userTypes);\n//       return userTypes;\n// }\n\nexport const getAppTypes = async ():Promise<SelectOptions[]> =>{\n  let response = await fetch(GET_APPTYPES, { \n      headers: {\n        'Content-Type': 'application/json'\n      }      \n    });\n    let res:SelectOptions[] = await response.json();     \n    return res;\n}\n\n\n\nexport const getNations = async ():Promise<SelectOptions[]> =>{\n  let response = await fetch(GET_NATIONALITIES, { \n      headers: {\n        'Content-Type': 'application/json'\n      }      \n    });\n    let res:SelectOptions[] = await response.json();     \n    return res;\n}\n\nexport const getUserTypes = async ():Promise<SelectOptions[]> =>{\n  let response = await fetch(GET_USERTYPES, { \n      headers: {\n        'Content-Type': 'application/json'\n      }      \n    });\n    let res:SelectOptions[] = await response.json();     \n    return res;\n}","C:\\MOAProjects\\webRR\\src\\types\\registerRequest.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\userInfo.ts",["679"],"\nexport class UserInfo {\n    userId: number = 0;\n    mobileNumber?: string;\n    email?: string = \"\";\n    residencyByMoa: boolean = false;\n    isSapUser: boolean = false;\n    civilId: string = \"\";\n    civilIdSerialNumber?: string = \"\";\n    employeeNumber?: string;\n    employeeName: string = \"\";\n    employeeType?: string;\n    sector?: string;\n    department?: string;\n    section?: string;\n    nationalityId?: string ;\n    nationality: string = \"\";\n    birthDate?: Date;\n    hireDate?: Date;\n    jobTitle?: string;\n    organization?: string;\n    userTypeId: number = 0;\n    registrationStatusId: number = 0;\n    isAdmin:boolean=false;\n}\n\ninterface AuthenticateResult {\n    userInfo: UserInfo,\n    jwtToken: string\n}\n\nexport class AuthenticateResponse {\n    response:AuthenticateResult = {\n        userInfo: userInfo,\n        jwtToken:\"\"\n    }\n    status: number = 0;\n    message: string = \"\";\n    hasError: boolean = false;\n    isLoggedIn:boolean = false;\n}\n\n\nexport const userInfo = new UserInfo();\nexport const authenticateResponse = new AuthenticateResponse();","C:\\MOAProjects\\webRR\\src\\Services\\register.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\utils\\localStorageHelper.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\utils\\assignType.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\FullPageLoader.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\Layout.tsx",["680","681","682","683"],"import React, { FC } from 'react'\nimport SideMenu from \"./SideMenu\";\nimport AuthHeader from \"./AuthHeader\";\nimport Header from './Header';\nimport FullPageLoader from './FullPageLoader';\nimport { getLocalStorage } from '../../Services/utils/localStorageHelper';\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootState } from \"../../State/rootReducer\";\nimport { authenticateResponse } from '../../types/userInfo';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../../assets/js/all';\n\n\nconst Layout: FC = ({ children }) => {\n    const LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\n    const userData = useSelector<RootState,RootState[\"login\"]>(state => state.login);\n\n    const {IsLoading} = LookUpState;\n\n\n    const userAuth = getLocalStorage(\"user\", authenticateResponse);\n\n    return (\n        <>\n         <Header />\n            <div id=\"layoutSidenav\">\n                <SideMenu />\n                <div id=\"layoutSidenav_content\">              \n                    {userData.isLoggedIn && \n                    <AuthHeader loggedIn={userAuth.isLoggedIn} \n                    fullName={ userData?.userInfo?.employeeName!=undefined?userData?.userInfo?.employeeName:\"\"}\n                    civilId = { userData?.userInfo?.civilId!=undefined?userData?.userInfo?.civilId:\"\"} />}\n                    {children}\n                </div>\n            </div>\n            { IsLoading && <FullPageLoader />}\n            <ToastContainer position=\"top-left\" rtl={true}/>\n        </>\n    )\n}\n\nexport default Layout;\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\ModalInfo.tsx",[],"C:\\MOAProjects\\webRR\\src\\auth\\auth.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\login.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\Urls.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\UIRelated.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\lookUpTypes.ts",[],"C:\\MOAProjects\\webRR\\src\\assets\\js\\all.js",[],["684","685"],"C:\\MOAProjects\\webRR\\src\\UI\\components\\SideMenu.tsx",["686"],"import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\n\n\nconst SideMenu = () => {\n  return (\n    <>\n      <div id=\"layoutSidenav_nav\">\n        <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n          <div className=\"sb-sidenav-menu\">\n            {/*#######################################*/}\n            <div className=\"nav\">\n              {/*############### Section title ########################*/}\n              <div className=\"sb-sidenav-menu-heading-title text-center\">نظام تجديد اﻹقامات-وزارة الاوقاف</div>\n              {/*######################################################*/}\n              {/*#######################################*/} \n              \n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/newApp\">\n                <span className=\"sb-nav-link-icon\">\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\n                </span>\n                <span>معاملة جديدة</span>\n              </NavLink>\n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/managerequests\">\n                <span className=\"sb-nav-link-icon\">\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\n                </span>\n                <span>متابعة المعاملات</span>\n              </NavLink>\n              <NavLink  activeClassName=\"active\" className=\"nav-link\" to=\"/profile\">\n                <span className=\"sb-nav-link-icon\">\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\n                </span>\n                <span>تعديل بياناتى </span>\n              </NavLink>\n              <NavLink  activeClassName=\"active\" className=\"nav-link\" to=\"/changePassword\">\n                <span className=\"sb-nav-link-icon\">\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\n                </span>\n                <span>تغير كلمة المرور</span>\n              </NavLink>\n              \n              \n             \n              {/* ################## End collapse ############################## */}\n              {/*#######################################*/}\n            </div>\n            {/*#######################################*/}\n          </div>\n          <div className=\"sb-sidenav-footer text-center\">\n            <img   src={process.env.PUBLIC_URL + 'img/itc-text-logo-white.png'}  alt=\"\" />\n           \n          </div>\n        </nav>\n      </div>\n\n\n    </>\n  );\n}\n\nexport default SideMenu;\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\Header.tsx",["687","688","689","690"],"import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { authenticateResponse } from '../../types/userInfo';\nimport { getLocalStorage } from '../../Services/utils/localStorageHelper';\nimport { useDispatch } from 'react-redux';\nimport {getllogout} from \"../../State/login\";\nimport {ClearRequest} from \"../../State/newApp\";\nimport {RequestClear as RequestClearPersonalInfo} from \"../../State/personalInfo\";\nimport {RequestClear as RequestClearPassportInfo} from \"../../State/passportInfo\";\nimport {RequestClear as RequestClearattachmentDocuments} from \"../../State/attachmentDocuments\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Header = () => {\n\n  const userAuth = getLocalStorage(\"user\", authenticateResponse);\n  let dispatch = useDispatch();\n  const history = useHistory();\n\n  const logout = () => {\n    localStorage.removeItem(\"user\");\n\n    dispatch(getllogout());\n    dispatch(ClearRequest());\n    dispatch(RequestClearPersonalInfo());\n    dispatch(RequestClearPassportInfo());\n    dispatch(RequestClearattachmentDocuments());\n  }\n\n\n  return (\n    <>\n      <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\n        <img className=\"navbar-brand d-none d-md-block\" src={process.env.PUBLIC_URL + 'img/brand.png'} alt=\"\" />\n\n        <p className=\"navbar-brand d-block d-sm-none\">وزارة الاوقاف والشئون اﻹسلامية</p>\n        <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\"\n        > <i className=\"fas fa-bars\" />\n        </button>\n        {/* profle*/}\n        {/*#######################################*/}\n        <div className=\"d-none d-md-inline-block\">\n          <ul className=\"navbar-nav ml-auto ml-md-0\">\n            {userAuth.isLoggedIn ?\n              <li className=\"nav-item dropdown\"> <a className=\"top-nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\" />&nbsp;&nbsp; ملف المستخدم\n              &nbsp;&nbsp;</a>\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\n                  {/* <button className=\"dropdown-item sb-nav-link-icon\">\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; الملف الشخصي\n                  </button> */}\n                  <Link to=\"/profile\" className=\"dropdown-item sb-nav-link-icon\" onClick={()=>history.push(\"/profile\")} >\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;  الملف الشخصي \n                  </Link>\n                  <Link to=\"/login\" className=\"dropdown-item sb-nav-link-icon\" onClick={logout} >\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; تسجيل الخروج\n                  </Link>\n                  <div className=\"dropdown-divider \" />\n                </div>\n              </li> : <li className=\"nav-item\"><Link to=\"/login\" className=\"top-nav-link\">تسجيل الدخول</Link></li>}\n          </ul>\n        </div>\n        <div className=\"d-none d-md-inline-block\" />\n        {/*#######################################*/}\n      </nav>\n\n    </>\n  );\n}\n\nexport default Header;\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\AuthHeader.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\reducer.ts",["691"],"import * as Types from './types';\n\n\n  const initialState: Types.IStateApp = {IState: {\n   applicationDate:undefined,\n   applicationStatusId:undefined,\n   applicationNumber:undefined,\n   applicationTypeId:undefined,\n   isActive:undefined,\n   remark:undefined,\n   stepNo:undefined,\n   userId:undefined\n  },\n  isloading:false\n}\n\n\n  export function newAppReducer( state:Types.IStateApp = initialState,\n    action: Types.NewAppActionsTypes):Types.IStateApp{\n    switch (action.type) {\n\n\n      case Types.Clear:\n        localStorage.setItem(\"newApp\",JSON.stringify({...initialState}));\n\n        return {\n          ...initialState\n        }\n      case Types.Loading:\n        localStorage.setItem(\"newApp\", JSON.stringify({ ...state,isloading:action.payload }));\n\n        return {\n          ...state,\n         isloading:action.payload\n        }\n      case Types.CreateSuccess:\n        localStorage.setItem(\"newApp\", JSON.stringify({ ...state,IState:action.payload ,isloading:false }));\n      return {\n          ...state,\n         IState:  action.payload,\n         isloading:false\n        }\n      case Types.IncompleteFetchSuccess:\n        localStorage.setItem(\"newApp\", JSON.stringify({ ...state,IState:action.payload ,isloading:false }));\n\n        return {\n          ...state,\n         IState:  action.payload,\n         isloading:false\n        }\n      case Types.UpdateSuccess:\n        localStorage.setItem(\"newApp\", JSON.stringify({ ...state,IState:action.payload ,isloading:false }));\n        return {\n          ...state,\n         IState:  action.payload,\n         isloading:false\n        }\n      default:\n         let localStorageData:any = localStorage.getItem('newApp');\n            if (localStorageData) {\n                localStorageData = JSON.parse(localStorageData);\n                return {\n                    ...state,\n                    IState:localStorageData.IState,\n                    isloading:localStorageData.isloading,\n                }\n            }\n            return state;\n        return state\n    }\n\n  }\n\n  export default newAppReducer;","C:\\MOAProjects\\webRR\\src\\State\\newApp\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\newApp.ts",["692","693","694"],"import {NEWAPP_CREATE,NEWAPP_GETINCOMPLETE,NEWAPP_UPDATE } from \"./Urls\";\nimport {IState} from \"../State/newApp\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from '../State/rootReducer' ;\n\nexport const createNewApp = async (data:IState): Promise<IState> => {\n  let res: IState={} ;\n    try {\n      let response = await fetch(NEWAPP_CREATE, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n         ...data\n        })\n      });\n      if (!response.ok) {\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\n      }\n      let temp:IState = await response.json();\n       res =\n      {\n        applicationDate: temp.applicationDate,\n        applicationNumber: temp.applicationNumber,\n        applicationStatusId: temp.applicationStatusId,\n        applicationTypeId: temp.applicationTypeId,\n        isActive: temp.isActive,\n        remark: temp.remark,\n        stepNo: temp.stepNo,\n        userId: temp.userId\n      }\n\n      return res;\n  \n    } catch (e) {\n      console.log(\"NET error\");\n      return data\n    //   return { ...authenticateResponse, status: 500, message: e, hasError: true }\n    }\n  }\n\n\n\n  export const fetchIncompleteNewApp = async (userId:number): Promise<IState> => {\n\n    \n    let res :IState ={};\n    try {\n      let url = `${NEWAPP_GETINCOMPLETE}${userId}`;\n      let response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n\n      });\n      \n      console.log(\"response\",response);\n      if (!response.ok) {\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\n      }\n      let temp:IState = await response.json();\n       res = \n              {\n               applicationDate:temp.applicationDate,\n               applicationNumber : temp.applicationNumber,\n               applicationStatusId:temp.applicationStatusId,\n               applicationTypeId:temp.applicationTypeId,\n               isActive:temp.isActive,\n               remark:temp.remark,\n               stepNo:temp.stepNo,\n               userId:temp.userId\n            }\n      return res;\n  \n    } catch (e) {\n      console.log(\"NET error incomp\",e);\n      return res\n   \n    }\n  }  \n\n  export const getAppRequest = async (data:number): Promise<IState> => {\n\n    \n    let res :IState ={};\n    try {\n      let url = `${NEWAPP_UPDATE}${data}`;\n      let response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n\n      });\n      \n      if (!response.ok) {\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\n      }\n      let temp:IState = await response.json();\n       res = \n              {\n               applicationDate:temp.applicationDate,\n               applicationNumber : temp.applicationNumber,\n               applicationStatusId:temp.applicationStatusId,\n               applicationTypeId:temp.applicationTypeId,\n               isActive:temp.isActive,\n               remark:temp.remark,\n               stepNo:temp.stepNo,\n               userId:temp.userId\n            }\n      return res;\n  \n    } catch (e) {\n      console.log(\"NET error incomp\",e);\n      return res\n   \n    }\n  }  \n\n  export const updateNewApp = async (data:IState): Promise<IState> => {\n\n    console.log(\"UpdatNewApp in service userId\",data);\n    \n    let res :IState ={};\n    try {\n      let url = `${NEWAPP_UPDATE}${data.applicationNumber}`;\n      let response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...data\n         })\n\n      });\n      \n      if (!response.ok) {\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\n      }\n      let temp:IState = await response.json();\n       res = \n              {\n               applicationDate:temp.applicationDate,\n               applicationNumber : temp.applicationNumber,\n               applicationStatusId:temp.applicationStatusId,\n               applicationTypeId:temp.applicationTypeId,\n               isActive:temp.isActive,\n               remark:temp.remark,\n               stepNo:temp.stepNo,\n               userId:temp.userId\n            }\n    console.log(\"in UpdateNewApp service\",res,temp)\n      return res;\n  \n    } catch (e) {\n      console.log(\"NET error UpdateNewApp\",e);\n      return res\n   \n    }\n  }  \n\n  export const updateNewAppStatus = async (data:any): Promise<any> => {\n\n    \n    let res :IState ={};\n    try {\n      let url = `${NEWAPP_UPDATE}${data.userId}/${data.applicationNumber}/${data.statusId}?Remark=N'${data.remark}'`;\n      let response = await fetch(url, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          ...data\n         })\n\n      });\n      \n      if (!response.ok) {\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\n      }\n      let temp:any = await response.json();\n     \n    console.log(\"in UpdateNewApp service\",res,temp)\n      return temp;\n  \n    } catch (e) {\n      console.log(\"NET error UpdateNewApp\",e);\n      return res\n   \n    }\n  } \n\n\n","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\personalInfo.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\passportInfo.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\Enums.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\FileAttachments.tsx",["695","696","697","698","699","700","701","702","703","704","705","706","707"],"import React,{useEffect,useState} from 'react'\nimport Layout from \"../components/Layout\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { IState,IFileAttachment } from \"../../State/attachmentDocuments\";\nimport { RootState } from '../../State/rootReducer';\nimport { useHistory } from \"react-router-dom\";\nimport { Steps } from \"../../types/Enums\";\nimport { getFetchIncompleteRequest,getUpdateRequest } from \"../../State/newApp\";\nimport {getCreateRequest,getFetchRequest as fetchAttachment,getUpdateRequest as updateAttachment} from \"../../State/attachmentDocuments\";\n\n\ntype TempFormData = {\n    ApprovedLetterForResidencyRenewal: FileList;\n    SalaryCertification: FileList;\n    CivilIdCopy: FileList;\n    PassportCopy: FileList;\n    OtherRelatedDocuments: FileList;\n}\n\nfunction FileAttachments() {\n    const newAppState = useSelector<RootState, RootState[\"newApp\"]>(state => state.newApp);\n    const loginData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n    const stateData = useSelector<RootState,RootState[\"attachmentInfo\"]>(state => state.attachmentInfo);\n    const { register, handleSubmit, watch, errors, setValue, getValues, control } = useForm<IState>();\n    const history = useHistory();\n    const {userInfo} = loginData;\n    const [removeletter, setRemoveletter] = useState(true);\n    const [removeSalary, setremoveSalary] = useState(true);\n    const [removeCivilId, setremoveCivilId] = useState(true);\n    const [removePassport, setremovePassport] = useState(true);\n    const [removeOtherDocs, setRemoveOtherDocs] = useState(true);\n    const [Direction, setDirection] = useState<string>(\"\");\n\n    let dispatch = useDispatch();\n\n    useEffect(() => {\n        if (newAppState.IState.applicationNumber === undefined) {\n           dispatch(getFetchIncompleteRequest(userInfo?.userId as number));\n        }\n      }, []);\n\n      useEffect(() => {\n        console.log(\"in useeffect/newAppState.stepNo out\");\n        if (newAppState.IState.stepNo as number  >= Steps.Attachments) {\n            dispatch(fetchAttachment(newAppState.IState.applicationNumber as number));\n            console.log(\"in useeffect/newAppState.stepNo\");\n       }\n      }, [newAppState.IState.stepNo]);\n\n      useEffect(() => {\n          console.log(\"in use Effec t\");\n       if (stateData.approvedLetterForResidencyRenewal)\n       {console.log(\"approvedLetterForResidencyRenewal\");setRemoveletter(false);} \n       if (stateData.salaryCertification) setremoveSalary(false);\n       if (stateData.civilIdCopy) setremoveCivilId(false);\n       if (stateData.passportCopy) setremovePassport(false);\n       if (stateData.otherRelatedDocuments) setRemoveOtherDocs(false);\n\n      }, [stateData]);\n\n    const onSubmit = async (data: TempFormData) => {\n\n        const postData: IFileAttachment = {};\n        postData.ApplicationNumber = newAppState.IState.applicationNumber;\n        postData.UserId = userInfo?.userId;\n\n        if(stateData.id ===undefined ||stateData.id===0)\n        {\n          postData.CreatedDate = new Date();\n          postData.ApprovedLetterForResidencyRenewal = data.ApprovedLetterForResidencyRenewal[0];\n          postData.SalaryCertification = data.SalaryCertification[0];\n          postData.CivilIdCopy = data.CivilIdCopy[0];\n          postData.PassportCopy = data.PassportCopy[0];\n          postData.OtherRelatedDocuments = data.OtherRelatedDocuments[0];\n          console.log(\"postData\", postData);\n          dispatch(getCreateRequest(postData));\n          newAppState.IState.stepNo =Steps.Attachments;\n          dispatch(getUpdateRequest(newAppState.IState));\n         \n        }\n       else\n       {\n        postData.id = stateData.id;\n        if (data.ApprovedLetterForResidencyRenewal.length>0)\n         postData.ApprovedLetterForResidencyRenewal = data.ApprovedLetterForResidencyRenewal[0];\n         if (data.SalaryCertification.length>0)\n         postData.SalaryCertification = data.SalaryCertification[0];\n         if (data.CivilIdCopy.length>0)\n         postData.CivilIdCopy = data.CivilIdCopy[0];\n         if (data.PassportCopy.length>0)\n         postData.PassportCopy = data.PassportCopy[0];\n         if (data.OtherRelatedDocuments.length>0)\n         postData.OtherRelatedDocuments = data.OtherRelatedDocuments[0];\n         console.log(\"postData\",postData);\n         dispatch(updateAttachment(postData));\n        \n       }\n       if(Direction==\"fwd\")\n       {\n       history.push(\"/Agreament\");\n\n       }\n       else if(Direction==\"bwd\")\n       {\n       history.push(\"/passportinfo\");\n       }\n    }\n    return (\n\n            <main className=\"login-bg\">\n                <div className=\"container\" style={{ marginBottom: '80px' }}>\n                    {/* Outer Row */}\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-xl-12 col-lg-12 col-md-12\">\n                            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n                                <div className=\"card-header bg-dark\">\n                                    <div className=\"text-center\">\n                                        <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>معاملة تجديد اقامة - المرفقات\n                                         </h1>\n                                    </div>\n                                </div>\n                                <div className=\"card-body p-0 \">\n                                    {/* Nested Row within Card Body */}\n                                    <div className=\"row\">\n                                        <div className=\"col-lg-12\">\n                                            <div className=\"p-5\">\n                                                <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                                                    {/* ################### form- row-001 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\n                                                        <div className=\"col-sm-3\">\n                                                            <input type=\"text\" className=\"form-control form-control-user\" />\n                                                        </div>\n                                                    </div>\n                                                    {/* ################### form- row-002 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-4 col-form-label\">كتاب الادارة بالموافقة عل المعاملة</label>\n                                                    \n                                                        <div className=\"col-sm-8\">\n                                                            <input type=\"file\" className=\"form-control form-control-user\" hidden={!removeletter}\n                                                                name=\"ApprovedLetterForResidencyRenewal\" ref={register} />\n                                                            {(stateData.approvedLetterForResidencyRenewal && !removeletter) &&\n                                                                <>\n                                                                    <a href={stateData.approvedLetterForResidencyRenewal} target=\"blank\" >\n                                                                        Uploaded Approval Letter</a>\n                                                                    <button onClick={() => setRemoveletter(true)}>Edit</button>\n                                                                </>\n                                                            }\n                                                        </div>\n                                                     \n                                                       \n                                                    </div>\n                                                    {/* ################### form- row-003 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-4 col-form-label\">شهادة الراتب</label>\n                                                        <div className=\"col-sm-8\">\n                                                            <input type=\"file\" className=\"form-control form-control-user\" hidden={!removeSalary}\n                                                                name=\"SalaryCertification\" ref={register} />\n                                                                  {(stateData.salaryCertification && !removeSalary)&&\n                                                                  <>\n                                                                <a href={stateData.salaryCertification} target=\"blank\">\n                                                                    Uploaded Salary Certificate</a>\n                                                                    <button onClick={() => setremoveSalary(true)}>Edit</button>\n                                                                    </>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    {/* ################### form- row-004 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-4 col-form-label\">صورة البطاقة المدنية</label>\n                                                        <div className=\"col-sm-8\">\n                                                            <input type=\"file\" className=\"form-control form-control-user\" hidden={!removeCivilId}\n                                                                name=\"CivilIdCopy\" ref={register} />\n                                                                        {(stateData.civilIdCopy &&!removeCivilId)&&\n                                                                        <>\n                                                                <a href={stateData.civilIdCopy} target=\"blank\">\n                                                                    Uploaded civilId Copy </a>\n                                                                    <button onClick={() => setremoveCivilId(true)}>Edit</button>\n                                                                    </>\n                                                                    \n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    {/* ################### form- row-005 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-4 col-form-label\">صورة الجواز</label>\n                                                        <div className=\"col-sm-8\">\n                                                            <input type=\"file\" className=\"form-control form-control-user\" hidden={!removePassport}\n                                                                name=\"PassportCopy\" ref={register} />\n                                                              \n                                                            {(stateData.passportCopy && !removePassport)&&\n                                                            <>\n                                                                <a href={stateData.passportCopy} target=\"blank\">\n                                                                    Uploaded passport Copy  </a>\n                                                                          <button onClick={() => setremovePassport(true)}>Edit</button>\n                                                                      </>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    {/* ################### form- row-006 #################*/}\n                                                    <div className=\"form-group row\">\n                                                        <label className=\"col-sm-4 col-form-label\">مستندات اخرى</label>\n                                                        <div className=\"col-sm-8\">\n                                                            <input type=\"file\" className=\"form-control form-control-user\"  hidden={!removeOtherDocs}\n                                                                name=\"OtherRelatedDocuments\" ref={register} />\n                                                                   {(stateData.otherRelatedDocuments && !removeOtherDocs) &&\n                                                                   <>\n                                                                <a href={stateData.otherRelatedDocuments} target=\"blank\">\n                                                                    Uploaded otherRelatedDocuments   </a>\n                                                                    <button onClick={() => setRemoveOtherDocs(true)}>Edit</button>\n                                                                </>\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                    {/* ################# submit btn ##################### */}\n                                                    <div  className=\"row justify-content-between\"> \n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"bwd\");  }} style={{ fontSize: '22px' }}>\n                          \n                          <a   className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\n                            السابق\n                            </a>\n                            </button>\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"fwd\");  }} style={{ fontSize: '22px' }}>\n                            <a  className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>التالي\n                          </a>\n                            </button>\n                          </div>\n                                                    {/* ################# end submit btn ##################### */}\n                                                </form>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div></main>\n\n    )\n}\n\nexport default FileAttachments\n","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\reducer.ts",["708"],"import * as Types from './types';\n\n\n  const initialState: Types.IState = {\n    id:undefined, \n    approvedLetterForResidencyRenewal:undefined,\n    salaryCertification:undefined,\n    civilIdCopy:undefined,\n    passportCopy:undefined,\n    otherRelatedDocuments:undefined,\n    applicationNumber:undefined,\n    userId:undefined,\n    createdDate:undefined,\n    updatedDate:undefined,\n  }\n\n\n  export function attachmentInfoReducer( state:Types.IState = initialState,\n    action: Types.ActionsTypes):Types.IState{\n      switch (action.type) {\n        case Types.RequestClear:\n      localStorage.setItem(\"attachmentInfo\",JSON.stringify({...initialState}));\n\n      return {\n        ...initialState\n      }\n\n        case Types.CreateSuccess:\n      localStorage.setItem(\"attachmentInfo\", JSON.stringify({ ...action.payload }));\n          \n          return {\n            ...action.payload,\n          }\n        case Types.FetchSuccess:\n      localStorage.setItem(\"attachmentInfo\", JSON.stringify({ ...action.payload }));\n\n          return {\n            ...action.payload,\n          }\n        case Types.UpdateSuccess:\n      localStorage.setItem(\"attachmentInfo\", JSON.stringify({ ...action.payload }));\n\n          return {\n            ...action.payload,\n          }\n        default:\n          let localStorageData:any = localStorage.getItem('attachmentInfo');\n          if (localStorageData) {\n              localStorageData = JSON.parse(localStorageData);\n              return {\n                  ...localStorageData\n              }\n          }\n          return state;\n          return state\n      }\n\n  }\n\n  export default attachmentInfoReducer;","C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\attachmentDocuments\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\fileAttachment.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\ManageRequests.tsx",["709","710","711","712","713","714","715","716","717"],"import * as React  from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from \"./../../State/rootReducer\"\nimport {TableBootStrap,columnsBootStrap} from \"../components/Datatables\"\nimport Layout from \"../components/Layout\";\nimport NoData from \"../views/NoData\";\nimport { IRequests, IRequestsState } from '../../State/ManageRequests/types';\nimport * as actions from \"./../../State/ManageRequests/actions\"\nexport default function ManageRequests () {\n\n     const RequestsState:IRequestsState = useSelector<RootState,RootState[\"manageRequest\"]>(state => state.manageRequest);\n     const {userInfo} = useSelector<RootState,RootState[\"login\"]>(state => state.login) ;\n     const {IRequests} = RequestsState;\n     const {SelectedRequest}=RequestsState;\n    let dispatch = useDispatch();\n    //Table boot strap input {columns,handel pop up function its (ref) function}\ntype handleRowFunctions = React.ElementRef<typeof TableBootStrap>;\nconst handleRowFunctionsref = React.useRef<handleRowFunctions>(null);\nlet columnsBootStrap_: columnsBootStrap={columns:[],data:null};\n  columnsBootStrap_.columns=[\n    {\n      text: \"رقم المعاملة\",\n      dataField: \"applicationNumber\"\n    },\n    {\n        text: \"رقم الموظف\",\n        dataField: \"userId\"\n    },\n    {\n        text: \"حالة الطلب\",\n        dataField: \"applicationStatusName\"\n    },\n    {\n        text: \"نوع الطلب\",\n        dataField: \"applicationTypeName\"\n    },\n    {\n        text: \"تاريخ الطلب\",\n        dataField: \"applicationDate\",\n        formatter:(row:any,cell:any)=> <span> {new Date(cell.applicationDate).toLocaleDateString('ar-EG-u-nu-latn',{weekday: 'long', year: 'numeric', month: 'short', day: 'numeric'})}   </span>\n    },\n    {\n        text: \"المرحلة الحالية\",\n        dataField: \"stepName\"\n    },\n    {\n        text: \"عرض\",\n        formatter: (row:any,cell:any) => <button  className=\"btn btn-primary btn-sm  rounded-circle\"   onClick={()=>handleRowFunctionsref.current?.handlePopUp(cell)}><i className=\"fa fa-eye\"aria-hidden=\"true\"></i></button>\n    }\n    // ,\n    // {\n    //     text: \"حذف\",\n    //     formatter:(row:any,cell:any) => <button className=\"btn btn-danger btn-sm  rounded-circle\" disabled={cell.isActive} onClick={()=>handleRowFunctionsref.current?.deleteRow(cell)} ><i className=\"fa fa-trash\"aria-hidden=\"true\"/></button>\n    // }\n    ,\n    {\n        text: \"تعديل\",\n        formatter:(row:any,cell:any) => <button className=\"btn btn-warning btn-sm  rounded-circle\" disabled={(cell.applicationStatusId!=6 && cell.applicationStatusId!=3)}  onClick={()=>handleRowFunctionsref.current?.EditRow(cell)} ><i className=\"fas fa-edit\"aria-hidden=\"true\"/></button>\n    }\n\n  ];\n  columnsBootStrap_.data=IRequests;\n  React.useEffect(() => {\n    console.log(\"userId\",userInfo?.userId);\n      //dispatch(actions.CreateRequest(userInfo?.userId));\n      dispatch(actions.CreateRequest(userInfo?.userId));\n      console.log(IRequests);\n   }, []);\n  return (\n    <div style={{marginBottom: '50%'}}>\n    {userInfo?.userId != 0 && <TableBootStrap   ref={handleRowFunctionsref}  data={columnsBootStrap_.data} columns={columnsBootStrap_.columns}  />}\n    {(userInfo?.userId == 0 || IRequests.length==0) && <NoData Message=\"لا يوجد معاملات سابقة  \"/>}\n    {/* {( IRequests.length !=0) && <TableBootStrap   ref={handleRowFunctionsref}  data={columnsBootStrap_.data} columns={columnsBootStrap_.columns}  />} */}\n    </div>\n  );\n}\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Agreament.tsx",["718","719","720","721","722","723"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,useDispatch} from \"react-redux\";\nimport  {RootState} from \"../../State/rootReducer\"\nimport auth from \"../../auth/auth\";\nimport { Steps ,StatusType} from \"../../types/Enums\";\nimport {  getUpdateRequest} from \"../../State/newApp/action\";\nimport {ClearRequest} from \"../../State/newApp\"\nimport {RequestClear as RequestClearPersonalInfo} from \"../../State/personalInfo\"\nimport {RequestClear as RequestClearPassportInfo} from \"../../State/passportInfo\"\nimport {RequestClear as RequestClearattachmentDocuments} from \"../../State/attachmentDocuments\"\n\n\n\nconst Agreament = () => {\n\n\tconst history = useHistory();\n    const [Enabled,setEnabled]=useState(false);\n\tconst {IState} =useSelector<RootState,RootState[\"newApp\"]>(state=>state.newApp);\n    const dispatch=useDispatch();\n    const [Direction, setDirection] = useState<string>(\"\");\n\n    const onSubmit =(e:React.SyntheticEvent,dir:string)=>{\n        e.preventDefault();\n        \n        if(dir==\"fwd\")\n        {\n          IState.stepNo =Steps.RequestSent;\n        IState.applicationStatusId=StatusType.Pending;\n        console.log(IState);\n        dispatch(getUpdateRequest(IState));\n        dispatch(ClearRequest());\n        dispatch(RequestClearPersonalInfo());\n        dispatch(RequestClearPassportInfo());\n        dispatch(RequestClearattachmentDocuments());\n        history.push(\"/result\");\n        }\n        else if(dir==\"bwd\")\n        {\n        history.push(\"/fileAttachements\");\n        }\n    }\n\treturn (\n\t\t<>\n\t\t\t<main className=\"login-bg\">\n  <div className=\"container\" style={{marginBottom: 80}}>\n    {/* Outer Row */}\n    <div className=\"row justify-content-center\">\n      <div className=\"col-xl-12 col-lg-12 col-md-12\">\n        <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n          <div className=\"card-header bg-dark\">\n            <div className=\"text-center\">\n              <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: 28}}>معاملة تجديد اقامة - إقرار\n                السداد</h1>\n            </div>\n          </div>\n          <div className=\"card-body p-0 \">\n            {/* Nested Row within Card Body */}\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"p-5\">\n                  <form className=\"user\">\n                    {/* ################### form- row-001 #################*/}\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-2\">\n                        <div className=\"custom-control custom-checkbox  mt-1\">\n                          <input type=\"checkbox\" onClick={()=> setEnabled(!Enabled)} defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" />\n                        </div>\n                      </div>\n                      <label  className=\"col-sm-10 col-form-label text-justfiy\">اتعهد بسداد كامل الرسوم المستحقة لطلبي للجهات المعنية بمواعيدها ، وذلك\n                        دون أدنى مسوؤلية على وزارة الأوقاف ، وفي حال عدم التزامي بالسداد بالتاريخ\n                        المحدد وفق اعلامي من وزارة الأوقاف، فإني افوض الوزارة باتخاذ كافة الإجراءات\n                        اللازمة تجاهي ، واتحمل ما يترتب علي من التزامات، وهذا إقرار مني بذلك.</label>\n                    </div>\n                    {/* ################# submit btn ##################### */}\n                    <div className=\"row justify-content-center\">\n                         <button disabled={Enabled} onClick={(e)=> onSubmit(e,\"fwd\")}  className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: 22}}>\n                        الموافقة\n                      </button>\n                    </div>\n                    <div  className=\"row justify-content-between\"> \n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \"\n                           onClick={(e)=>  onSubmit(e,\"bwd\")} style={{ fontSize: '22px' }}>\n                          \n                          <a   className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\n                            السابق\n                            </a>\n                            </button>\n\n                           \n                          </div>\n                    {/* ################# end submit btn ##################### */}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </main>\n\n\t\t</>\n\t);\n};\n\nexport default  Agreament;\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Result.tsx",["724"],"import * as React from 'react';\nimport { useHistory } from \"react-router-dom\";\ninterface IAppProps {\n}\n\n\n\n\nconst Result: React.FunctionComponent<IAppProps> = (props) => {\n\nconst history= useHistory();\n  const onSubmit=(e:React.SyntheticEvent)=>{\n    e.preventDefault();\n    history.push(\"/newapp\");\n  }\n\nreturn <>\n    \t<main className=\"login-bg\">\n  <div className=\"container\" style={{marginBottom: 80}}>\n    {/* Outer Row */}\n    <div className=\"row justify-content-center\">\n      <div className=\"col-xl-12 col-lg-12 col-md-12\">\n        <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n          <div className=\"card-header bg-dark\">\n            <div className=\"text-center\">\n              <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: 28,textAlign:'center'}}></h1>\n            </div>\n          </div>\n          <div className=\"card-body p-0 \">\n            {/* Nested Row within Card Body */}\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"p-5\">\n                  <form className=\"user\">\n                    {/* ################### form- row-001 #################*/}\n                    <div className=\"form-group row\">\n                      <div className=\"col-sm-2\">\n                       \n                      </div>\n                      <label className=\"col-sm-10 col-form-label text-justfiy\" style={{textAlign: 'center', marginRight: '-75px'}}>تم حفظ المعاملة بنجاح</label>\n\n                    </div>\n                    {/* ################# submit btn ##################### */}\n                    <div className=\"row justify-content-center\">\n                         <button  onClick={(e)=>onSubmit(e)}  className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: 22}}>\n                        العودة للصفحة الرئيسية\n                      </button>\n                    </div>\n                    {/* ################# end submit btn ##################### */}\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  </main>\n    \n    </>;\n};\n\nexport default Result;\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\PersonalInfo.tsx",["725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743"],"import React, { useEffect, useState } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { IState } from \"../../../State/personalInfo\";\nimport { SelectOptions } from \"../../../types/UIRelated\"\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../State/rootReducer\";\nimport { assignToType } from \"../../../Services/utils/assignType\";\nimport { getCreateRequest,getFetchRequest,getUpdateRequest as personalInfoUpdate } from \"../../../State/personalInfo\";\nimport { getFetchIncompleteRequest,getUpdateRequest } from \"../../../State/newApp\";\nimport {getFetchRequest as getFetchRequestPassport} from \"../../../State/passportInfo\"\nimport { useHistory } from \"react-router-dom\";\nimport {Steps} from \"../../../types/Enums\"\nimport {getUserApplicationsByApplicationNumber,loadingRequest} from \"../../../State/newApp\"\n\n\nexport interface IFormData extends IState {\n  selectedDept?: SelectOptions,\n  selectedJobTitle?: SelectOptions\n}\n\nclass TempClass implements IState {\n  id: number | undefined;\n  employeeNumber: number | undefined;\n  employeeNameArabic: string | undefined;\n  employeeNameEnglish: string | undefined;\n  birthDate: Date | undefined;\n  mobileNumber: string | undefined;\n  department: string | undefined;\n  jobTitle?: string | undefined;\n  hireDate?: Date | undefined;\n  applicationNumber?: number | undefined;\n  userId?: number | undefined;\n  createdDate?: Date | undefined;\n  updatedDate?: Date | undefined;\n}\n\nconst PersonalInfo = () => {\n  const history = useHistory();\n  const newAppState = useSelector<RootState, RootState[\"newApp\"]>(state => state.newApp);\n  const loginData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const stateData = useSelector<RootState, RootState[\"personalInfo\"]>(state => state.personalInfo);\n  const { userInfo } = loginData;\n  const [IsDisabled, setIsDisabled] = useState<boolean>(true);\n  const [Direction, setDirection] = useState<string>(\"\");\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors,setValue, getValues,control } = useForm<IFormData>({\n    defaultValues:{\n      userId : userInfo?.userId,\n      birthDate : userInfo?.birthDate?new Date(userInfo?.birthDate as Date):undefined,\n      employeeNumber:userInfo?.employeeNumber?Number(userInfo?.employeeNumber):undefined,\n      employeeNameArabic : userInfo?.employeeName,\n      mobileNumber : userInfo?.mobileNumber,\n      createdDate:  undefined,\n      updatedDate: undefined,\n      hireDate: userInfo?.hireDate?new Date(userInfo?.hireDate as Date):undefined\n    }\n  });\n\n  //TODO pick values correctly\n  const jobTitleOptions: SelectOptions[] =\n    [\n      { label: \"طباع\", value: \"1\" },\n      { label: \"مبرمج\", value: \"2\" }\n    ]\n\n  const deptOptions: SelectOptions[] =\n    [\n      { label: \"نظم المعلومات\", value: \"1\" },\n      { label: \"الشئون الادارية\", value: \"2\" }\n    ]\n\n  useEffect(() => {\n\n    setValue(\"employeeNameArabic\", stateData.employeeNameArabic);\n    setValue(\"employeeNameEnglish\", stateData.employeeNameEnglish);\n    setValue(\"mobileNumber\", stateData.mobileNumber);\n    setValue(\"employeeNumber\", stateData.employeeNumber);\n    setValue(\"selectedJobTitle\", jobTitleOptions.find(j => j.value === stateData.jobTitle)?.label);\n    setValue(\"selectedDept\", deptOptions.find(j => j.value === stateData.department)?.label);\n    \n  }, [stateData]);\n\n  const onSubmit = async (data: IFormData) => {\n    if(Direction==\"fwd\")\n    {\n      dispatch(getFetchRequestPassport(newAppState.IState?.applicationNumber as number));\n      history.push(\"/admin/passportInfo\");\n    }\n    else if(Direction==\"bwd\")\n    {\n      dispatch(loadingRequest(true));\n      dispatch(getUserApplicationsByApplicationNumber(newAppState.IState?.applicationNumber as number));\n      history.push(\"/admin/newApp\");\n    }\n    \n  }\n \n  return (\n      <main className=\"login-bg\">\n        <div className=\"container\" style={{ marginBottom: '80px' }}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}> البيانات\n                      الشخصية</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                          {/* ################### form- row-001 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"number\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"employeeNumber\" defaultValue={userInfo?.employeeNumber} ref={register} />\n                            </div>\n                          </div>\n                          {/* ################### form- row-002 #################*/}\n                          <div className=\"form-group row\">\n                            <label htmlFor=\"employeeNameArabic\" className=\"col-sm-3 col-form-label\">اسم الموظف-عربي</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"employeeNameArabic\"  ref={register} />\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">رقم الهاتف</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"mobileNumber\" ref={register} />\n                            </div>\n                          </div>\n                          {/* ################### form- row-003 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-انجليزي</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"employeeNameEnglish\" ref={register} />\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">تاريخ الميلاد</label>\n                            <div className=\"col-sm-3\">\n                              {/* <input type=\"date\" className=\"form-control form-control-user\" /> */}\n                              <Controller\n                                control={control}\n                                name=\"birthDate\"\n                                render={({ onChange, onBlur, value }) => (\n                                  <ReactDatePicker\n                                    onChange={onChange}\n                                    onBlur={onBlur}\n                                    selected={value}\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    placeholderText=\"dd/MM/yyyy \"\n                                    className=\"form-control form-control-user\"\ndisabled                                    \n                                  />\n                                )}\n                              />\n\n                            </div>\n                          </div>\n                          {/* ################### form- row-004 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">الادارة/القسم</label>\n                            <div className=\"col-sm-3\">\n                             <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"selectedDept\" ref={register} />\n                            </div>\n                            <label className=\"col-sm-3 col-form-label\">المسمى الوظيفي</label>\n                            <div className=\"col-sm-3\">\n                               <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"\n                                name=\"selectedJobTitle\" ref={register} />\n                            </div>\n                          </div>\n                          {/* ################### form- row-005 #################*/}\n                          <div className=\"form-group row\">\n                            <label className=\"col-sm-3 col-form-label\">تاريخ التعيين</label>\n                            <div className=\"col-sm-3\">\n                              <Controller\n                                control={control}\n                                name=\"hireDate\"\n                                render={({ onChange, onBlur, value }) => (\n                                  <ReactDatePicker\n                                    onChange={onChange}\n                                    onBlur={onBlur}\n                                    selected={value}\n                                    dateFormat=\"dd/MM/yyyy\"\n                                    placeholderText=\"dd/MM/yyyy \"\n                                    className=\"form-control form-control-user\"\n                                    disabled\n                                  />\n                                )}\n                              />\n                            </div>\n                          </div>\n                          {/* ################### form- row-006 #################*/}\n                          {/* ################# submit btn ##################### */}\n                          <div  className=\"row justify-content-between\"> \n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"bwd\");  }} style={{ fontSize: '22px' }}>\n                          \n                          <a   className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\n                            السابق\n                            </a>\n                            </button>\n\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" onClick={()=> {setDirection(\"fwd\");  }} style={{ fontSize: '22px' }}>\n                            <a  className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>التالي\n                          </a>\n                            </button>\n                          </div>\n                          {/* ################# end submit btn ##################### */}\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div></main>\n  );\n}\nexport default PersonalInfo;","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\NewApp.tsx",["744","745","746","747","748","749","750","751"],"import React, {useEffect,useState} from 'react';\nimport Layout from \"../../components/Layout\";\nimport Select from 'react-select';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from '../../../State/rootReducer';\nimport {getAppTypesRequest} from \"../../../State/lookUps\";\nimport {SelectOptions} from '../../../types/UIRelated';\nimport { useHistory } from \"react-router-dom\";\nimport {getFetchIncompleteRequest} from \"../../../State/newApp\";\nimport {getFetchRequest} from \"../../../State/personalInfo\";\nimport {Steps} from \"../../../types/Enums\"\nimport {INewAppState} from '../../../types/newApp'\n\n\n\n\n\nconst NewApp: React.FunctionComponent<INewAppState> =() => {\n\tconst LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\n  const newAppState = useSelector<RootState,RootState[\"newApp\"]>(state => state.newApp);\n  const userData = useSelector<RootState,RootState[\"login\"]>(state => state.login);\n  const [appType, setappType] = useState<SelectOptions|undefined>({label:\"\",value:\"\"});\n  const [IsDisabled, setIsDisabled] = useState<boolean>(true);\n  const history = useHistory();\n  const {AppTypes} = LookUpState;\n  let dispatch = useDispatch();\n  const [Direction, setDirection] = useState<string>(\"\");\n\n\n  useEffect(() => {\n    const GetDropdownValues = async () => {\n      if (AppTypes === undefined) {\n        dispatch(getAppTypesRequest());\n      }\n    };\n    GetDropdownValues();\n  }, []);\n\n  useEffect(() => {\n   let selectedObj = AppTypes?.find(a=>a.value===newAppState.IState.applicationTypeId?.toString());\n     setappType(selectedObj);\n    return () => {\n    }\n  }, [newAppState.IState.applicationTypeId,AppTypes]);\n\n  \n\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\n\t\t e.preventDefault();\n    \n    if(Direction==\"fwd\")\n    {\n      dispatch(getFetchRequest(newAppState.IState?.applicationNumber as number));\n      history.push(\"/admin/personalInfo\");\n    }\n    else if(Direction==\"bwd\")\n    {\n      history.push(\"/admin/inwardApplication\");\n    }\n\t}\n\n  \n    return (\n                  <main className=\"login-bg\">\n        <div className=\"container\" style={{marginBottom: '80px'}}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>نوع المعاملة</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit}>\n                          <div className=\"form-group\">\n                            <input type=\"email\" disabled={IsDisabled} className=\"form-control form-control-user\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل رقم الموظف \" />\n                          </div>\n                          <div className=\"form-group\">\n                           \n                            <Select \n                             name=\"AppType\" \n                             placeholder=\" Choose App Type \"\n                             options={AppTypes}\n                             value= {appType}\n                             isDisabled={IsDisabled}\n                              />\n                          </div>\n                       \n                          <div className=\"row justify-content-between\">\n                             <button onClick={()=> {setDirection(\"bwd\");  }} type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\n                              قائمة المعاملات\n                            </button>\n                            <button onClick={()=> {setDirection(\"fwd\");  }} type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\n                              التالي\n                            </button >\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div></main>\n   \n            \n        \n    )\n}\n\nexport default NewApp\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\InwardApplication.tsx",["752","753","754","755","756","757","758"],"import * as React  from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {RootState} from \"../../../State/rootReducer\"\nimport {TableBootStrap,columnsBootStrap} from \"../../components/Datatables\"\nimport Layout from \"../../components/Layout\";\nimport NoData from \"../../views/NoData\";\nimport { IRequests, IRequestsState } from '../../../State/ManageRequests/types';\nimport * as actions from \"./../../../State/ManageRequests/actions\"\nexport default function InwardApplication () {\n\n     const RequestsState:IRequestsState = useSelector<RootState,RootState[\"manageRequest\"]>(state => state.manageRequest);\n     const {userInfo} = useSelector<RootState,RootState[\"login\"]>(state => state.login) ;\n     const {IRequests} = RequestsState;\n     const {SelectedRequest}=RequestsState;\n    let dispatch = useDispatch();\n    //Table boot strap input {columns,handel pop up function its (ref) function}\ntype handleRowFunctions = React.ElementRef<typeof TableBootStrap>;\nconst handleRowFunctionsref = React.useRef<handleRowFunctions>(null);\nlet columnsBootStrap_: columnsBootStrap={columns:[],data:null};\n  columnsBootStrap_.columns=[\n    {\n      text: \"رقم المعاملة\",\n      dataField: \"applicationNumber\"\n    },\n    {\n        text: \"رقم الموظف\",\n        dataField: \"civilId\"\n    },\n    {\n        text: \"رقم الموظف\",\n        dataField: \"UserName\"\n    },\n    {\n        text: \"حالة الطلب\",\n        dataField: \"applicationStatusName\"\n    },\n    {\n        text: \"نوع الطلب\",\n        dataField: \"applicationTypeName\"\n    },\n    {\n        text: \"تاريخ الطلب\",\n        dataField: \"applicationDate\",\n        formatter:(row:any,cell:any)=> <span> {new Date(cell.applicationDate).toLocaleDateString('ar-EG-u-nu-latn',{weekday: 'long', year: 'numeric', month: 'short', day: 'numeric'})}   </span>\n    },\n    {\n        text: \"طباعه\",\n        formatter: (row:any,cell:any) => <button  className=\"btn btn-primary btn-sm  rounded-circle\"   onClick={()=>handleRowFunctionsref.current?.handlePopUp(cell)}><i className=\"fa fa-eye\"aria-hidden=\"true\"></i></button>\n    }\n    ,\n    {\n        text: \"عرض\",\n        formatter:(row:any,cell:any) => <button className=\"btn btn-warning btn-sm  rounded-circle\" disabled={!cell.isActive}  onClick={()=>handleRowFunctionsref.current?.EditRowAdmin(cell)} ><i className=\"fas fa-edit\"aria-hidden=\"true\"/></button>\n    },\n    {\n        text: \"اعتماد\",\n        formatter:(row:any,cell:any) => <button className=\"btn btn-warning btn-sm  rounded-circle\" disabled={cell.isActive}  onClick={()=>handleRowFunctionsref.current?.EditRow(cell)} ><i className=\"fas fa-edit\"aria-hidden=\"true\"/></button>\n    },\n    {\n        text: \"رفض\",\n        formatter:(row:any,cell:any) => <button className=\"btn btn-warning btn-sm  rounded-circle\" disabled={cell.isActive}  onClick={()=>handleRowFunctionsref.current?.EditRow(cell)} ><i className=\"fas fa-times-square\" aria-hidden=\"true\"></i></button>\n    }\n    ,\n    {\n        text: \"اعاده\",\n        formatter:(row:any,cell:any) => <button className=\"btn btn-warning btn-sm  rounded-circle\" disabled={cell.isActive}  onClick={()=>handleRowFunctionsref.current?.EditRow(cell)} ><i className=\"fas fa-edit\"aria-hidden=\"true\"/></button>\n    }\n\n\n  ];\n  columnsBootStrap_.data=IRequests;\n  React.useEffect(() => {\n    console.log(\"userId\",userInfo?.userId);\n      //dispatch(actions.CreateRequest(userInfo?.userId));\n      dispatch(actions.CreateRequestAdmin());\n      console.log(IRequests);\n   }, []);\n  return (\n    <div>\n    {userInfo?.userId != 0 && <TableBootStrap   ref={handleRowFunctionsref}  data={columnsBootStrap_.data} columns={columnsBootStrap_.columns}  />}\n    {(userInfo?.userId == 0 || IRequests.length==0) && <NoData Message=\"لا يوجد معاملات سابقة  \"/>}\n    {/* {( IRequests.length !=0) && <TableBootStrap   ref={handleRowFunctionsref}  data={columnsBootStrap_.data} columns={columnsBootStrap_.columns}  />} */}\n    </div>\n  );\n}\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\PassportInfo.tsx",["759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"import React,{useState,useEffect} from 'react'\nimport Layout from \"../../components/Layout\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Select from 'react-select';\nimport { useForm, Controller } from \"react-hook-form\";\nimport {IState} from \"../../../State/passportInfo\";\nimport {SelectOptions} from \"../../../types/UIRelated\"\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootState } from \"../../../State/rootReducer\";\nimport { assignToType} from \"../../../Services/utils/assignType\";\nimport {getCreateRequest,getFetchRequest,getUpdateRequest as updatePassportInfo} from \"../../../State/passportInfo\";\nimport {getNationalitiesRequest} from \"../../../State/lookUps\";\nimport { getFetchIncompleteRequest,getUpdateRequest } from \"../../../State/newApp\";\nimport {Steps} from \"../../../types/Enums\"\nimport { useHistory } from \"react-router-dom\";\nimport {getFetchRequest as getFetchRequestPersonalInfo} from \"../../../State/personalInfo\";\n\n\nexport interface IFormData extends IState {\n  selectedNationality?:SelectOptions,\n  selectedIssueCountry?:SelectOptions\n  }\n\n\nclass TempClass implements IState{\n  id?:number ;\n  civilID?:number;  \n  nationalityId?:string;\n  passportNumber?:number;\n  issueCountry?:string;\n  issueDate?:Date;\n  expiryDate?:Date;\n  address?:string; \n  residencyExpiryDate?:Date; \n  applicationNumber?:number;    \n  userId?:number;    \n  createdDate?:Date; \n  updatedDate?:Date;\n\n}\nconst PassportInfo = () => {\n\n\n  const history = useHistory();\n  const LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\n  const newAppState = useSelector<RootState, RootState[\"newApp\"]>(state => state.newApp);\n  const loginData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const stateData = useSelector<RootState,RootState[\"passportInfo\"]>(state => state.passportInfo);\n  const {Nationalities} = LookUpState;\n  const { userInfo } = loginData;\n  const [IsDisabled, setIsDisabled] = useState<boolean>(true);\n  const [Direction, setDirection] = useState<string>(\"\");\n\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch, errors,setValue, getValues,control } = useForm<IFormData>({\n    defaultValues:{\n      userId : userInfo?.userId,\n      civilID: userInfo?.civilId?Number(userInfo?.civilId):undefined,\n     \n    }\n  });\n  useEffect(() => {\n    const GetDropdownValues = async () => {\n      if (Nationalities === undefined) {\n        dispatch(getNationalitiesRequest());\n      }\n    };\n    GetDropdownValues();\n\n  }, []);\n\n  useEffect(() => {\n    if (newAppState.IState.applicationNumber === undefined) {\n       dispatch(getFetchIncompleteRequest(userInfo?.userId as number));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newAppState.IState.stepNo as number  >= Steps.PassportInfo) {\n       dispatch(getFetchRequest(newAppState.IState.applicationNumber as number));\n   }\n  }, [newAppState.IState.stepNo]);\n\n\n  useEffect(() => {\n\n    setValue(\"passportNumber\", stateData.passportNumber);\n    setValue(\"issueDate\",new Date(stateData.issueDate as Date) );\n    setValue(\"expiryDate\", new Date(stateData.expiryDate as Date));\n    setValue(\"residencyExpiryDate\", new Date(stateData.residencyExpiryDate as Date));\n     setValue(\"address\", stateData.address);\n    \n    if(Nationalities!==undefined ) \n    {\n      setValue(\"selectedNationality\", (Nationalities as SelectOptions[]).find(j => j.value === stateData.nationalityId)?.label);\n      setValue(\"selectedIssueCountry\", (Nationalities as SelectOptions[]).find(j => j.value === stateData.issueCountry)?.label);\n    \n    }\n    \n    \n  }, [stateData,Nationalities]);\n\n  const onSubmit = async (data:IFormData) => {\n  \n  if(Direction==\"fwd\")\n  {\n    // dispatch(getFetchRequestPassport(newAppState.IState?.applicationNumber as number));\n    // history.push(\"/admin/passportInfo\");\n  }\n  else if(Direction==\"bwd\")\n  {\n    dispatch(getFetchRequestPersonalInfo(newAppState.IState?.applicationNumber as number));\n    history.push(\"/admin/personalInfo\");\n  }\n  }\n    return (\n        <main className=\"login-bg\">\n        <div className=\"container\" style={{marginBottom: '80px'}}>\n          {/* Outer Row */}\n          <div className=\"row justify-content-center\">\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n                <div className=\"card-header bg-dark\">\n                  <div className=\"text-center\">\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}> بيانات\n                      الجواز والاقامة</h1>\n                  </div>\n                </div>\n                <div className=\"card-body p-0 \">\n                  {/* Nested Row within Card Body */}\n                  <div className=\"row\">\n                    <div className=\"col-lg-12\">\n                      <div className=\"p-5\">\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)} >\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">الرقم المتسلسل</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\" />\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">الجنسية</label>\n                            <div className=\"col-sm-3\"  >\n                               \n                              <input type=\"text\" name=\"selectedNationality\" disabled={IsDisabled} ref={register}  className=\"form-control form-control-user\" />\n\n                            </div>\n                          </div>\n                          {/* ################### form- row-003 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">رقم الجواز</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\" disabled={IsDisabled} className=\"form-control form-control-user\"  \n                              name=\"passportNumber\" ref={register} />\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">مكان الاصدار</label>\n                            <div className=\"col-sm-3\" >\n                            <input type=\"text\" name=\"selectedIssueCountry\" disabled={IsDisabled} ref={register}  className=\"form-control form-control-user\" />\n                            </div>\n                          </div>\n                          {/* ################### form- row-004 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الاصدار</label>\n                            <div className=\"col-sm-3\">\n                            <Controller\n                                  control={control}\n                                  name=\"issueDate\"\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      onBlur={onBlur}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      className=\"form-control form-control-user\"\n                                      disabled                                   \n                                       />\n                                  )}\n                                />\n\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الانتهاء</label>\n                            <div className=\"col-sm-3\" >\n                            <Controller\n                                  control={control}\n                                  name=\"expiryDate\"\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      onBlur={onBlur}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      disabled\n                                      className=\"form-control form-control-user\"\n                                    />\n                                  )}\n                                />\n                            </div>\n                           \n                          </div>\n                          {/* ################### form- row-005 #################*/}\n                          <div className=\"form-group row\">\n                            <label  className=\"col-sm-3 col-form-label\">عنوان السكن</label>\n                            <div className=\"col-sm-3\">\n                              <input type=\"text\"  disabled={IsDisabled}  className=\"form-control form-control-user\"  \n                              name=\"address\" ref={register} />\n                            </div>\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ انتهاء الاقامة</label>\n                            <div className=\"col-sm-3\">\n                            <Controller\n                                  control={control}\n                                  name=\"residencyExpiryDate\"\n                                  render={({ onChange, onBlur, value }) => (\n                                    <ReactDatePicker\n                                      onChange={onChange}\n                                      onBlur={onBlur}\n                                      selected={value}\n                                      dateFormat=\"dd/MM/yyyy\"\n                                      placeholderText=\"dd/MM/yyyy \"   \n                                      className=\"form-control form-control-user\"\n                                      disabled\n                                      />\n                                  )}\n                                />\n                            </div>\n                          </div>\n                          {/* ################### form- row-006 #################*/}\n                          {/* ################# submit btn ##################### */}\n                          <div className=\"row justify-content-between\">\n                             <button onClick={()=> {setDirection(\"bwd\");  }} type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\n                              السابق\n                            </button>\n                            <button onClick={()=> {setDirection(\"fwd\");  }} type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\n                              التالي\n                            </button >\n                          </div>\n                          {/* ################# end submit btn ##################### */}\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div></main>\n       \n    )\n}\n\nexport default PassportInfo;\n","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\actions.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NoData.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\Datatables.tsx",["776","777","778","779","780","781","782"],"import React, { useEffect, useState, useRef, forwardRef, useImperativeHandle } from 'react';\nimport MockUpData from \"../../MockUp/useraplications.json\";\nimport DataTable from 'react-data-table-component';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport {useDispatch} from \"react-redux\";\nimport PrintProvider, { Print, NoPrint } from 'react-easy-print';\nimport {getUserApplicationsByApplicationNumber,loadingRequest} from \"../../State/newApp\"\nimport { useHistory } from \"react-router-dom\";\nimport {ClearRequest} from \"../../State/newApp\"\nimport {RequestClear as RequestClearPersonalInfo} from \"../../State/personalInfo\"\nimport {RequestClear as RequestClearPassportInfo} from \"../../State/passportInfo\"\nimport {RequestClear as RequestClearattachmentDocuments} from \"../../State/attachmentDocuments\"\n\nexport interface TableBootStrapTablecolumn {\n\n  text?: string,\n  dataField?: string,\n  formatter?: any\n}\nexport interface columnsBootStrap {\n  columns: TableBootStrapTablecolumn[],\n  data:any\n\n}\nexport type handleRowFunctions = {\n  handlePopUp: (row: any) => void,\n  EditRow: (row: any) => void,\n  EditRowAdmin:(row:any) => void,\n  SubmitRow:(row:any)=>void,\n  RejectRow:(row:any)=>void,\n  ReturnRow:(row:any)=>void\n\n}\nexport const TableBootStrap = forwardRef<handleRowFunctions, columnsBootStrap>(({columns,data}, ref) => {\n  const [show, setShow] = useState(true);\n  const [SelectedObject, setSelectedObject] = useState<any>(null);\n   data = React.useMemo<any>(() => data, [])\n   const dispatch =useDispatch();\n  const history = useHistory();\n\n  //const dataapi= React.useMemo<any>(() => data1, [])\n  console.log(data);\n  //console.log(dataapi);\n  useImperativeHandle(ref, () => ({\n    handlePopUp(row: any) {\n      console.log(\"handlePopUp\", row);\n      setShow(true);\n      setSelectedObject(row);\n    },\n    EditRow(row: any) {\n      dispatch(ClearRequest());\n      dispatch(RequestClearPersonalInfo());\n      dispatch(RequestClearPassportInfo());\n      dispatch(RequestClearattachmentDocuments());\n      dispatch(loadingRequest(true));\n      dispatch(getUserApplicationsByApplicationNumber(row.applicationNumber));\n      history.push(\"/newapp\");\n    },\n    EditRowAdmin(row: any) {\n\n      dispatch(loadingRequest(true));\n      dispatch(getUserApplicationsByApplicationNumber(row.applicationNumber));\n      history.push(\"/admin/newApp\");\n    },\n    SubmitRow(row: any) {\n\n     \n      history.push(\"/admin/newApp\");\n    },\n    RejectRow(row: any) {\n\n      dispatch(loadingRequest(true));\n      dispatch(getUserApplicationsByApplicationNumber(row.applicationNumber));\n      history.push(\"/admin/newApp\");\n    },\n    ReturnRow(row: any) {\n\n      dispatch(loadingRequest(true));\n      dispatch(getUserApplicationsByApplicationNumber(row.applicationNumber));\n      history.push(\"/admin/newApp\");\n    }\n\n  }));\n  const PopUp = (row: any) => {\n    //console.log(\"popup\", row);\n    const handelClose = () => {\n      setShow(false);\n      setSelectedObject(null);\n    }\n\n    const printContent = () => {\n      window.print();\n    };\n    return (\n\n      <Modal\n        show={show}\n        onHide={() => handelClose()}\n        dialogClassName=\"modal-90w\"\n      >\n        <Modal.Header closeButton className=\"headertablecells\">\n          <Modal.Title  >\n            <NoPrint>   عرض الطلب</NoPrint>\n            <Print printOnly name=\"date\">\n              <> تاريخ الطباعة {new Date().toLocaleDateString('ar-EG-u-nu-latn', { weekday: 'long', year: 'numeric', month: 'short', day: 'numeric' })}</>\n            </Print>\n          </Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <Print name=\"ss\">\n\n            <div className=\"p-5\">\n              <div className=\"user\">\n                {/* ################### form- row-001 #################*/}\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">رقم المعاملة</label>\n                  <div className=\"col-sm-6\">\n                    <span>{row.row.applicationNumber}</span>\n                  </div>\n                </div>\n                {/* ################### form- row-002 #################*/}\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">نوع المعاملة</label>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <span>{row.row.applicationTypeName}</span>\n                    </div>\n                  </div>\n                </div>\n                {/* ################### form- row-003 #################*/}\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">تاريخ المعاملة</label>\n                  <div className=\"col-sm-6\">\n                    <span>{new Date(row.row.applicationDate).toLocaleDateString('ar-EG-u-nu-latn', { weekday: 'long', year: 'numeric', month: 'short', day: 'numeric' })}</span>\n                  </div>\n                </div>\n                {/* ################### form- row-004 #################*/}\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">حالة المعاملة</label>\n                  <div className=\"col-sm-6\">\n                    <span>{row.row.applicationStatusName}</span>\n                  </div>\n                </div>\n                {/* ################### form- row-005 #################*/}\n                <div className=\"form-group row\">\n                  <label className=\"col-sm-3 col-form-label\">ملاحظات</label>\n                  <div className=\"col-sm-6\">\n                    <span>{row.row.remark}</span>\n                  </div>\n                </div>\n                {!row.row.isActive &&\n                  <div className=\"row justify-content-center\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-user shorooq\">تعديل الطلب</button>\n                  </div>\n                }\n              </div>\n            </div>\n            <NoPrint>\n              <button className=\"btn btn-primary btn-sm  \" onClick={printContent} id=\"print\">طباعة</button>\n            </NoPrint>\n          </Print>\n\n        </Modal.Body>\n\n      </Modal>\n\n    );\n  }\n  const sizePerPageOptionRenderer = ({\n    text,\n    page,\n    onSizePerPageChange\n  }: any) => (\n    <li\n      key={text}\n      role=\"presentation\"\n      className=\"dropdown-item\"\n    >\n      <a\n        href=\"#\"\n        tabIndex={-1}\n        role=\"menuitem\"\n        data-page={page}\n        onMouseDown={(e) => {\n          e.preventDefault();\n          onSizePerPageChange(page);\n        }}\n        style={{ color: 'red' }}\n      >\n        {text}\n      </a>\n    </li>\n  );\n  const options = {\n    sizePerPageOptionRenderer\n  };\n  // Render the UI for your table\n  return (<>\n\n    <main className=\"login-bg\">\n      <div className=\"container-fluid\" style={{ marginBottom: 10 }}>\n        <div className=\"row justify-content-center\">\n          <div className=\"col-xl-12 col-lg-12 col-md-12\">\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__fadeIn \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n              <div className=\"card-header bg-dark\">\n                <div className=\"text-center\">\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: 28 }}> متابعة الطلب</h1>\n                </div>\n              </div>\n              <div className=\"card-body p-5 \">\n                <div className=\"table-responsive\">\n                  <BootstrapTable\n                    classes=\"table table-striped  table-bordered naskh\"\n                    headerClasses=\"headertablecells\"\n                    rowClasses=\"rowtablecells\"\n                    keyField=\"id\"\n                    data={data}\n                    columns={columns as any}\n                    pagination={paginationFactory(options)} />\n                </div>\n                {console.log(SelectedObject)}\n                {SelectedObject != null ? <PopUp row={SelectedObject} ></PopUp> : null}\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n\n\n  </>\n  )\n}\n);\nexport interface TableReactTablecolumn {\n\n  name: string,\n  selector?: string,\n  sortable?: boolean,\n  cell?: any\n}\nexport interface columns {\n  columns: TableReactTablecolumn[]\n}\n\nexport function TableReactTable(columns: columns) {\n  const [show, setShow] = useState(true);\n  const [SelectedObject, setSelectedObject] = useState(null);\n  const data = React.useMemo<any>(() => MockUpData, [])\n  function handlePopUp(row: any) {\n    console.log(\"handlePopUp\", row);\n    setShow(true);\n    setSelectedObject(row);\n  }\n  const PopUp = (row: any) => {\n    console.log(\"popup\", row);\n    const handelClose = () => {\n      setShow(false);\n      setSelectedObject(null);\n    }\n    return (\n      <Modal\n        show={show}\n        onHide={() => handelClose()}\n        dialogClassName=\"modal-90w\"\n        aria-labelledby=\"example-custom-modal-styling-title\"\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"example-custom-modal-styling-title\">\n            Custom Modal Styling\n                </Modal.Title>\n\n        </Modal.Header>\n        <Modal.Body>\n\n        </Modal.Body>\n      </Modal>\n    );\n  }\n  // Render the UI for your table\n  return (<>\n    <DataTable title=\"\"\n      columns={columns.columns}\n      data={data}\n      noHeader\n      defaultSortField=\"applicationNumber\"\n      defaultSortAsc={false}\n      pagination\n      direction=\"rtl\"\n      highlightOnHover\n      className=\"datatable\"\n    ></DataTable>\n    {console.log(SelectedObject)}\n    {SelectedObject != null ? <PopUp row={SelectedObject} ></PopUp> : null}\n  </>\n  )\n}\n\n","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\index.ts",["783"],"import  ManageRequestsReducer from \"./reducer\"\n\nimport {CreateRequest,RequestError,RequestSuccess,SelectedRequest} from \"./actions\";\n\nimport {IRequestsState} from \"./types\";\n\nimport ManageRequests from \"./sagas\"\n\nexport default ManageRequestsReducer;\nexport {ManageRequests};\n\nexport {\n    CreateRequest,\n    RequestSuccess,\n     SelectedRequest\n};\n\nexport type {IRequestsState};","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\sagas.ts",["784","785","786","787","788"],"import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\nimport * as ManageRequestsTypes from \"./types\";\nimport * as ManageRequestsActions from \"./actions\";\nimport * as ManageRequestsActionsTypes from \"./types\";\nimport * as api from \"./api\";\nimport { createNewApp } from \"../../Services/newApp\";\nfunction* ManageRequest({type,payload}:ManageRequestsTypes.ManageRequestsCREATE) {\n    try {\n      let res: ManageRequestsTypes.IRequests[] = yield call(api.GetUserApplicationsByUserId, payload);\n      //console.log(\"saga\",res)\n     yield put(ManageRequestsActions.RequestSuccess(res));\n    }\n     catch (error) \n     {\n\n    }\n  }\n  \n  function* watchOnManageRequest() {\n    yield takeEvery(ManageRequestsActionsTypes.CreateRequest, ManageRequest);\n  }\n  \n  function* ManageRequestAdmin({type}:ManageRequestsTypes.ManageRequestsCREATEAdmin) {\n    try {\n      let res: ManageRequestsTypes.IRequests[] = yield call(api.GetUserApplicationsAdmin);\n     yield put(ManageRequestsActions.RequestSuccess(res));\n    }\n     catch (error) \n     {\n\n    }\n  }\n  \n  function* watchOnManageRequestAdmin() {\n    yield takeEvery(ManageRequestsActionsTypes.CreateRequestAdmin, ManageRequest);\n  }\n  \n\n  function* SelectedRequest({type,payload}:ManageRequestsTypes.ManageSelectedRequest) {\n    try {\n      yield put(ManageRequestsActions.SelectedRequest(payload));\n    } catch (error) {\n  \n\n    }\n  }\n  \n  \n  function* watchOnSelectedRequest() {\n    yield takeEvery(ManageRequestsActionsTypes.SelectedRequest, SelectedRequest);\n  }\n  \n\n\n  function* DeleteRequest({type,payload}:ManageRequestsTypes.ManageSelectedRequest) {\n    try {\n      let res: ManageRequestsTypes.IRequests[] = yield call(api.GetUserApplicationsByUserId, payload);\n      yield put(ManageRequestsActions.RequestSuccess(res));\n    } catch (error) {\n  \n    }\n  }\n  \n  \n  function* watchOnDeleteRequest() {\n    yield takeEvery(ManageRequestsActionsTypes.DeleteRequest, DeleteRequest);\n  }\n  \n\n\n  export default function* ManageRequests() {\n    yield all([fork(watchOnManageRequest)]);\n  }","C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\api.ts",["789"],"import axios from 'axios';\n\nconst BaseUrl = 'https://localhost:44367/api';\nconst AuthUrl = 'http://localhost:25004/jwt';\n\n//https://localhost:44367/api/UserApplications/UserId/5\naxios.interceptors.request.use(function (config) {\n    let localStorageData :any= localStorage.getItem('user');\n    if (localStorageData) {\n        localStorageData = JSON.parse(localStorageData);\n        let token = 'Bearer ' + localStorageData.response.jwtToken ;\n        config.headers.Authorization = token;\n    }\n    //console.log(config);\n    return config;\n},(error) => {\n    // trigger 'loading=false' event here\n    return Promise.reject(error);\n  });\n\n\naxios.interceptors.response.use(function (response) {\n    \n    return response.data;\n}, function (error) {\n    if (error.response.status === 401) {\n        localStorage.removeItem('data');\n        window.location.href = '/login';\n    } else {       \n        return Promise.reject(error.response);\n    }\n});\n\nexport const GetUserApplicationsByUserId = (input:any) => {\n    //console.log(\"GetUserApplicationsByUserId api call ->\", input);\n    return axios.get<any>(`https://localhost:44367/api/UserApplications/UserId/`+input);\n}\n\n\n\nexport const GetUserApplicationsAdmin = () => {\n    //console.log(\"GetUserApplicationsByUserId api call ->\", input);\n    return axios.get<any>(`https://localhost:44367/api/UserApplications/admin`);\n}\nexport const DeleteUserApplicationById = (id:any) => {\n    //console.log(\"deletePost api call ->\", id);\n    return axios.delete(`${BaseUrl}/posts/${id}`, id);\n}\n\n\n\n\n\n\n\n\nexport const createPost = (data:any) => {\n    //console.log(\"createPost api call ->\", data);\n    return axios.post(`${BaseUrl}/posts`, data);\n}\n\nexport const editPost = (data:any) => {\n    //console.log(\"editPost api call ->\", data);\n    return axios.put(`${BaseUrl}/posts`, data);\n}\n\nexport const deletePost = (id:any) => {\n    //console.log(\"deletePost api call ->\", id);\n    return axios.delete(`${BaseUrl}/posts/${id}`, id);\n}\n",["790","791"],"C:\\MOAProjects\\webRR\\src\\State\\ManageRequests\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Profile.tsx",["792","793","794","795","796","797","798"],"import React,{useState,useEffect} from 'react'\nimport { useForm} from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport {IUserProfile} from \"../../types\";\nimport {changeProfile} from \"../../State/login\";\nimport {updateProfile} from \"../../Services/userProfile\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootState } from \"../../State/rootReducer\";\nimport { assignToType } from \"../../Services/utils/assignType\";\n\nclass TempCLass implements IUserProfile{\n  userId?:number;  \n  mobileNumber?:string;\n  employeeNumber?:string;\n  email?:string;\n  civilIdSerialNumber?:string;\n}\n\nconst Profile = () => {\n  const history = useHistory(); \n  const {userInfo} = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const [isSapUser, setIsSapUser] = useState(userInfo?.isSapUser);\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch,setValue ,errors,control } = useForm<IUserProfile>({\n    defaultValues:{\n      email: userInfo?.email,\n      mobileNumber:userInfo?.mobileNumber,\n      employeeNumber:userInfo?.employeeNumber,\n      civilIdSerialNumber:userInfo?.civilIdSerialNumber\n    }\n  });\n\n\n\n\n  const onSubmit = async (data:IUserProfile) => {\n    data.userId = userInfo?.userId;\n    let res = await updateProfile(data);\n    let temp = new TempCLass();\n    temp = assignToType(res, temp);\n    if (temp.userId !==undefined)\n    dispatch(changeProfile(temp));\n\n  }\n\n  \n\n\n  return (\n\n\n      <main className=\"login-bg\">\n\n      <div className=\"container\" style={{marginBottom: '80px'}}>\n        {/* Outer Row */}\n        <div className=\"row justify-content-center\">\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\n              <div className=\"card-header bg-dark\">\n                <div className=\"text-center\">\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>Profile Info  </h1>\n                </div>\n              </div>\n              <div className=\"card-body p-0 \">\n                {/* Nested Row within Card Body */}\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"p-5\">\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                        {/* ################### form- row-001 #################*/}\n                        <div className=\"form-group row\">\n\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">الرقم المسلسل</label>\n                          <div className=\"col-sm-4\">\n                            <input type=\"text\" className=\"form-control form-control-user\" disabled={!isSapUser}\n                            name=\"civilIdSerialNumber\" ref={register}/>\n                          </div>\n\n                          <label htmlFor=\"employeeNumber\" className=\"col-sm-2 col-form-label\">رقم الموظف</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"employeeNumber\"  type=\"text\" className=\"form-control form-control-user\"\n                              ref={register}/>\n                          </div>\n                        </div>\n   \n                        {/* ################### form- row-002 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"mobileNumber\" className=\"col-sm-2 col-form-label\">رقم الهاتف</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"mobileNumber\" type=\"text\" className=\"form-control form-control-user\"\n                             ref={register} />\n                          </div>\n                          <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">البريد الالكتروني</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"email\" type=\"email\" className=\"form-control form-control-user\" \n                            disabled={isSapUser} ref={register} />\n                          </div>\n                        </div>\n                           \n                   \n                        <hr />\n                        {/* ################# submit btn ##################### */}\n                        <div className=\"row justify-content-center\"> \n                        <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{fontSize: '22px'}}>\n                            Save  \n                          </button>\n                        </div>\n                        {/* ################# end submit btn ##################### */}\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n\n</main>\n  \n  );\n}\n\nexport default Profile\n","C:\\MOAProjects\\webRR\\src\\Services\\userProfile.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\ChangePassword.tsx",["799","800","801"],"import React,{useState,useEffect,useRef} from 'react'\nimport { useForm} from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { RootState } from \"../../State/rootReducer\";\nimport {IChangePassword,IResponse} from \"../../types\";\nimport { updatePassword } from \"../../Services/changePassword\";\nimport {  toast } from 'react-toastify';\n\n\nconst ChangePassword = () => {\n  const history = useHistory(); \n  const {userInfo} = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const [isSapUser, setIsSapUser] = useState(userInfo?.isSapUser);\n  let dispatch = useDispatch();\n  const { register, handleSubmit, watch,errors } = useForm<IChangePassword>();\n  const password = useRef({});\n  password.current = watch(\"password\", \"\");\n\n\n  const onSubmit = async (data: IChangePassword) => {\n    data.userId = userInfo?.userId;\n    let result: IResponse = await updatePassword(data);\n    if (!result.hasError) {\n      toast.success(result.message);\n      history.push(\"./newApp\")\n    }\n    else {\n      toast.error(result.message);\n    }\n  }\n\n  useEffect(() => {\n    if (isSapUser === true) {\n      const options = {\n        onOpen:() =>{ history.push(\"/newApp\")\n      }\n    };\n    toast.warning(\"You cannot change your password from here, Change in ldap\",options);\n    }\n  }, [isSapUser])\n  return (\n\n    <main className=\"login-bg\">\n      <div className=\"container\" style={{ marginBottom: '80px' }}>\n        {/* Outer Row */}\n        <div className=\"row justify-content-center\">\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n              <div className=\"card-header bg-dark\">\n                <div className=\"text-center\">\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>ChangePassword </h1>\n                </div>\n              </div>\n              <div className=\"card-body p-0 \">\n                {/* Nested Row within Card Body */}\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"p-5\">\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\n                        {/* ################### form- row-001 #################*/}\n                        <div className=\"form-group row\">\n\n                          <label htmlFor=\"oldPassword\" className=\"col-sm-2 col-form-label\">Old Password </label>\n                          <div className=\"col-sm-4\">\n                            <input type=\"password\" className=\"form-control form-control-user\"\n                              name=\"oldPassword\" ref={register} />\n                          </div>\n\n                        </div>\n\n                        {/* ################### form- row-002 #################*/}\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">كلمة المرور</label>\n                          <div className=\"col-sm-4\">\n                            <input name=\"password\" type=\"password\" className=\"form-control form-control-user\"\n                              ref={register({\n                                required: \"You must specify a password\",\n                                minLength: {\n                                  value: 8,\n                                  message: \"Password must have at least 8 characters\"\n                                }\n                              })} />\n                            {errors.password && <span className=\"text-danger\">{errors.password.message}</span>}\n                          </div>\n                          <label htmlFor=\"password_repeat\" className=\"col-sm-2 col-form-label\">تأكيد كلمة المرور</label>\n                          <div className=\"col-sm-4\">\n                            <input type=\"password\" name=\"password_repeat\" className=\"form-control form-control-user\"\n                              ref={register({\n                                validate: value =>\n                                  value === password.current || \"The passwords do not match\"\n                              })} />\n                            {errors.password_repeat && <span className=\"text-danger\">{errors.password_repeat.message}</span>}\n\n                          </div>\n                        </div>\n\n\n                        <hr />\n                        {/* ################# submit btn ##################### */}\n                        <div className=\"row justify-content-center\">\n                          <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{ fontSize: '22px' }}>\n                            Save\n                          </button>\n                        </div>\n                        {/* ################# end submit btn ##################### */}\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </main>\n  \n  );\n}\n\nexport default ChangePassword;\n","C:\\MOAProjects\\webRR\\src\\Services\\changePassword.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\Toastr.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Admin\\AppTypesSettings.tsx",["802","803","804"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../State/rootReducer';\nimport { useHistory } from \"react-router-dom\";\nimport Switch from \"react-switch\";\nimport {getApplicationTypes,updateIsActive} from \"../../../Services/applicationTypes\";\nimport {ApplicationTypes as AppTypes} from \"../../../types/Enums\"\nimport {  toast } from 'react-toastify';\nimport { IResponse,IApplicationType } from '../../../types';\n\n\n\nconst AppTypesSettings = () => {\n\n  const userData = useSelector<RootState, RootState[\"login\"]>(state => state.login);\n  const history = useHistory();\n  let dispatch = useDispatch();\n\n  const [chkResidencyRenewal, setchkResidencyRenewal] = useState(false);\n  const [chkInformationTransfer, setchkInformationTransfer] = useState(false);\n  const [chkUpdateData, setchkUpdateData] = useState(false);\n  const [chkCancelResidency, setchkCancelResidency] = useState(false);\n  const [chkResidencyExtension, setchkResidencyExtension] = useState(false);\n\n\n\n  const onChange = async (checked: boolean, event: MouseEvent | React.SyntheticEvent<MouseEvent | KeyboardEvent, Event>, id: string) => {\n     switch (Number(id))\n     {\n       case AppTypes.ResidencyRenewal :\n         {\n          setchkResidencyRenewal(checked);\n          break;\n         }\n         case AppTypes.InformationTransfer :\n         {\n          setchkInformationTransfer(checked);\n          break;\n         }\n         case AppTypes.UpdateData :\n         {\n          setchkUpdateData(checked);\n          break;\n         }\n         case AppTypes.CancelResidency :\n         {\n          setchkCancelResidency(checked);\n          break;\n         }\n         case AppTypes.ResidencyExtension :\n         {\n          setchkResidencyExtension(checked);\n          break;\n         }\n     }\n     let res:IResponse<IApplicationType> = await updateIsActive(Number(id),checked); \n     if (res.hasError){\n       toast.error(res.message);\n     }\n     else{\n      toast.success(res.message);\n     }\n     \n  }\n\n\n  useEffect(() => {\n    const getIntialVal = async ()=>{\n      let res:IResponse<IApplicationType[]> = await getApplicationTypes();\n      if (!res.hasError){\n        res.response?.forEach((appType:IApplicationType)=>{\n         switch (appType.applicationTypeId){\n          \n            case AppTypes.ResidencyRenewal :\n              {\n               setchkResidencyRenewal(appType.isActive as boolean);\n               break;\n              }\n              case AppTypes.InformationTransfer :\n              {\n               setchkInformationTransfer(appType.isActive as boolean);\n               break;\n              }\n              case AppTypes.UpdateData :\n              {\n               setchkUpdateData(appType.isActive as boolean);\n               break;\n              }\n              case AppTypes.CancelResidency :\n              {\n               setchkCancelResidency(appType.isActive as boolean);\n               break;\n              }\n              case AppTypes.ResidencyExtension :\n              {\n               setchkResidencyExtension(appType.isActive as boolean);\n               break;\n              }\n         }\n        })\n      }\n      else {\n        toast.error(res.message);\n      }\n    }\n    getIntialVal();\n    \n  }, [])\n\n\n\n\n  return (\n    <main className=\"login-bg\">\n      <div className=\"container\" style={{ marginBottom: '80px' }}>\n        {/* Outer Row */}\n        <div className=\"row justify-content-center\">\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\n              <div className=\"card-header bg-dark\">\n                <div className=\"text-center\">\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>نوع المعاملة</h1>\n                </div>\n              </div>\n              <div className=\"card-body p-0 \">\n                {/* Nested Row within Card Body */}\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"p-5\">\n                      <form className=\"user\" >\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-4 col-form-label\">  طلب تجديد اقامة</label>\n                          <Switch\n                            className=\"col-sm-1\"\n                            onChange={onChange}\n                            checked={chkResidencyRenewal}\n                            id=\"1\"\n                          />\n                        </div>\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-4 col-form-label\">    طلب نقل معلومات </label>\n                          <Switch\n                            className=\"col-sm-1\"\n                            onChange={onChange}\n                            checked={chkInformationTransfer}\n                            id=\"2\"\n                          />\n                        </div>\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-4 col-form-label\"> طلب تحديث او تعديل بيانات </label>\n                          <Switch\n                           className=\"col-sm-1\"\n                            onChange={onChange}\n                            checked={chkUpdateData}\n                            id=\"3\"\n                          />\n                        </div>\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-4 col-form-label\">   تمديد إقامة </label>\n                          <Switch\n                            className=\"col-sm-1\"\n                            onChange={onChange}\n                            checked={chkCancelResidency}\n                            id=\"4\"\n                          />\n                        </div>\n                        <div className=\"form-group row\">\n                          <label htmlFor=\"employeeType\" className=\"col-sm-4 col-form-label\">   الغاء إقامة  </label>\n                          <Switch\n                            className=\"col-sm-1\"\n                            onChange={onChange}\n                            checked={chkResidencyExtension}\n                            id=\"5\"\n                          />\n                        </div>\n             \n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div></main>\n\n\n\n  )\n}\n\nexport default AppTypesSettings;\n","C:\\MOAProjects\\webRR\\src\\Services\\applicationTypes.ts",[],{"ruleId":"805","replacedBy":"806"},{"ruleId":"807","replacedBy":"808"},{"ruleId":"809","severity":1,"message":"810","line":30,"column":19,"nodeType":"811","messageId":"812","endLine":30,"endColumn":27},{"ruleId":"805","replacedBy":"806"},{"ruleId":"807","replacedBy":"808"},{"ruleId":"813","severity":1,"message":"814","line":6,"column":21,"nodeType":"811","messageId":"815","endLine":6,"endColumn":30},{"ruleId":"813","severity":1,"message":"816","line":3,"column":10,"nodeType":"811","messageId":"815","endLine":3,"endColumn":30},{"ruleId":"813","severity":1,"message":"817","line":3,"column":54,"nodeType":"811","messageId":"815","endLine":3,"endColumn":62},{"ruleId":"813","severity":1,"message":"818","line":3,"column":64,"nodeType":"811","messageId":"815","endLine":3,"endColumn":72},{"ruleId":"813","severity":1,"message":"819","line":5,"column":9,"nodeType":"811","messageId":"815","endLine":5,"endColumn":24},{"ruleId":"813","severity":1,"message":"820","line":4,"column":5,"nodeType":"811","messageId":"815","endLine":4,"endColumn":18},{"ruleId":"805","replacedBy":"821"},{"ruleId":"807","replacedBy":"822"},{"ruleId":"813","severity":1,"message":"823","line":3,"column":19,"nodeType":"811","messageId":"815","endLine":3,"endColumn":29},{"ruleId":"813","severity":1,"message":"824","line":13,"column":37,"nodeType":"811","messageId":"815","endLine":13,"endColumn":42},{"ruleId":"813","severity":1,"message":"825","line":13,"column":44,"nodeType":"811","messageId":"815","endLine":13,"endColumn":50},{"ruleId":"813","severity":1,"message":"826","line":13,"column":52,"nodeType":"811","messageId":"815","endLine":13,"endColumn":59},{"ruleId":"813","severity":1,"message":"827","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":27},{"ruleId":"813","severity":1,"message":"828","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":26},{"ruleId":"813","severity":1,"message":"829","line":1,"column":28,"nodeType":"811","messageId":"815","endLine":1,"endColumn":36},{"ruleId":"813","severity":1,"message":"827","line":1,"column":33,"nodeType":"811","messageId":"815","endLine":1,"endColumn":43},{"ruleId":"813","severity":1,"message":"830","line":2,"column":10,"nodeType":"811","messageId":"815","endLine":2,"endColumn":15},{"ruleId":"813","severity":1,"message":"831","line":3,"column":32,"nodeType":"811","messageId":"815","endLine":3,"endColumn":52},{"ruleId":"813","severity":1,"message":"817","line":3,"column":54,"nodeType":"811","messageId":"815","endLine":3,"endColumn":62},{"ruleId":"813","severity":1,"message":"818","line":3,"column":64,"nodeType":"811","messageId":"815","endLine":3,"endColumn":72},{"ruleId":"813","severity":1,"message":"832","line":25,"column":23,"nodeType":"811","messageId":"815","endLine":25,"endColumn":38},{"ruleId":"813","severity":1,"message":"833","line":26,"column":27,"nodeType":"811","messageId":"815","endLine":26,"endColumn":46},{"ruleId":"813","severity":1,"message":"834","line":21,"column":10,"nodeType":"811","messageId":"815","endLine":21,"endColumn":18},{"ruleId":"813","severity":1,"message":"835","line":21,"column":20,"nodeType":"811","messageId":"815","endLine":21,"endColumn":31},{"ruleId":"813","severity":1,"message":"827","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":27},{"ruleId":"813","severity":1,"message":"828","line":1,"column":29,"nodeType":"811","messageId":"815","endLine":1,"endColumn":38},{"ruleId":"813","severity":1,"message":"829","line":1,"column":40,"nodeType":"811","messageId":"815","endLine":1,"endColumn":48},{"ruleId":"836","severity":1,"message":"837","line":36,"column":50,"nodeType":"838","endLine":36,"endColumn":201},{"ruleId":"813","severity":1,"message":"839","line":2,"column":10,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"836","severity":1,"message":"837","line":17,"column":61,"nodeType":"838","endLine":17,"endColumn":94},{"ruleId":"836","severity":1,"message":"837","line":55,"column":33,"nodeType":"838","endLine":55,"endColumn":184},{"ruleId":"805","replacedBy":"840"},{"ruleId":"807","replacedBy":"841"},{"ruleId":"813","severity":1,"message":"842","line":3,"column":35,"nodeType":"811","messageId":"815","endLine":3,"endColumn":43},{"ruleId":"813","severity":1,"message":"843","line":4,"column":8,"nodeType":"811","messageId":"815","endLine":4,"endColumn":12},{"ruleId":"813","severity":1,"message":"844","line":10,"column":8,"nodeType":"811","messageId":"815","endLine":10,"endColumn":27},{"ruleId":"813","severity":1,"message":"845","line":11,"column":8,"nodeType":"811","messageId":"815","endLine":11,"endColumn":16},{"ruleId":"846","severity":1,"message":"847","line":38,"column":14,"nodeType":"848","endLine":40,"endColumn":7},{"ruleId":"846","severity":1,"message":"847","line":42,"column":70,"nodeType":"848","endLine":44,"endColumn":12},{"ruleId":"846","severity":1,"message":"847","line":54,"column":81,"nodeType":"848","endLine":58,"endColumn":7},{"ruleId":"813","severity":1,"message":"827","line":1,"column":33,"nodeType":"811","messageId":"815","endLine":1,"endColumn":43},{"ruleId":"813","severity":1,"message":"849","line":4,"column":8,"nodeType":"811","messageId":"815","endLine":4,"endColumn":22},{"ruleId":"813","severity":1,"message":"832","line":22,"column":23,"nodeType":"811","messageId":"815","endLine":22,"endColumn":38},{"ruleId":"813","severity":1,"message":"833","line":23,"column":27,"nodeType":"811","messageId":"815","endLine":23,"endColumn":46},{"ruleId":"813","severity":1,"message":"827","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":27},{"ruleId":"805","replacedBy":"850"},{"ruleId":"807","replacedBy":"851"},{"ruleId":"813","severity":1,"message":"834","line":21,"column":10,"nodeType":"811","messageId":"815","endLine":21,"endColumn":18},{"ruleId":"813","severity":1,"message":"835","line":21,"column":20,"nodeType":"811","messageId":"815","endLine":21,"endColumn":31},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"853","line":13,"column":10,"nodeType":"811","messageId":"815","endLine":13,"endColumn":35},{"ruleId":"813","severity":1,"message":"854","line":13,"column":36,"nodeType":"811","messageId":"815","endLine":13,"endColumn":52},{"ruleId":"813","severity":1,"message":"824","line":51,"column":35,"nodeType":"811","messageId":"815","endLine":51,"endColumn":40},{"ruleId":"813","severity":1,"message":"855","line":51,"column":59,"nodeType":"811","messageId":"815","endLine":51,"endColumn":68},{"ruleId":"856","severity":1,"message":"857","line":83,"column":6,"nodeType":"858","endLine":83,"endColumn":8,"suggestions":"859"},{"ruleId":"856","severity":1,"message":"860","line":89,"column":6,"nodeType":"858","endLine":89,"endColumn":33,"suggestions":"861"},{"ruleId":"856","severity":1,"message":"862","line":103,"column":6,"nodeType":"858","endLine":103,"endColumn":17,"suggestions":"863"},{"ruleId":"836","severity":1,"message":"864","line":273,"column":27,"nodeType":"838","endLine":273,"endColumn":108},{"ruleId":"836","severity":1,"message":"864","line":279,"column":29,"nodeType":"838","endLine":279,"endColumn":109},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"865","line":4,"column":8,"nodeType":"811","messageId":"815","endLine":4,"endColumn":18},{"ruleId":"813","severity":1,"message":"866","line":52,"column":10,"nodeType":"811","messageId":"815","endLine":52,"endColumn":19},{"ruleId":"813","severity":1,"message":"867","line":52,"column":21,"nodeType":"811","messageId":"815","endLine":52,"endColumn":33},{"ruleId":"813","severity":1,"message":"824","line":56,"column":35,"nodeType":"811","messageId":"815","endLine":56,"endColumn":40},{"ruleId":"813","severity":1,"message":"855","line":56,"column":59,"nodeType":"811","messageId":"815","endLine":56,"endColumn":68},{"ruleId":"856","severity":1,"message":"868","line":73,"column":6,"nodeType":"858","endLine":73,"endColumn":8,"suggestions":"869"},{"ruleId":"856","severity":1,"message":"870","line":79,"column":6,"nodeType":"858","endLine":79,"endColumn":8,"suggestions":"871"},{"ruleId":"856","severity":1,"message":"860","line":87,"column":6,"nodeType":"858","endLine":87,"endColumn":33,"suggestions":"872"},{"ruleId":"856","severity":1,"message":"873","line":106,"column":6,"nodeType":"858","endLine":106,"endColumn":31,"suggestions":"874"},{"ruleId":"875","severity":1,"message":"876","line":133,"column":16,"nodeType":"877","messageId":"878","endLine":133,"endColumn":18},{"ruleId":"875","severity":1,"message":"876","line":137,"column":21,"nodeType":"877","messageId":"878","endLine":137,"endColumn":23},{"ruleId":"836","severity":1,"message":"864","line":302,"column":27,"nodeType":"838","endLine":302,"endColumn":108},{"ruleId":"836","severity":1,"message":"864","line":308,"column":29,"nodeType":"838","endLine":308,"endColumn":109},{"ruleId":"813","severity":1,"message":"823","line":3,"column":19,"nodeType":"811","messageId":"815","endLine":3,"endColumn":29},{"ruleId":"813","severity":1,"message":"824","line":13,"column":37,"nodeType":"811","messageId":"815","endLine":13,"endColumn":42},{"ruleId":"813","severity":1,"message":"825","line":13,"column":44,"nodeType":"811","messageId":"815","endLine":13,"endColumn":50},{"ruleId":"813","severity":1,"message":"826","line":13,"column":52,"nodeType":"811","messageId":"815","endLine":13,"endColumn":59},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"879","line":9,"column":69,"nodeType":"811","messageId":"815","endLine":9,"endColumn":107},{"ruleId":"813","severity":1,"message":"880","line":24,"column":9,"nodeType":"811","messageId":"815","endLine":24,"endColumn":14},{"ruleId":"875","severity":1,"message":"876","line":29,"column":85,"nodeType":"877","messageId":"878","endLine":29,"endColumn":87},{"ruleId":"856","severity":1,"message":"881","line":42,"column":6,"nodeType":"858","endLine":42,"endColumn":8,"suggestions":"882"},{"ruleId":"875","severity":1,"message":"876","line":46,"column":48,"nodeType":"877","messageId":"878","endLine":46,"endColumn":50},{"ruleId":"875","severity":1,"message":"876","line":46,"column":109,"nodeType":"877","messageId":"878","endLine":46,"endColumn":111},{"ruleId":"875","severity":1,"message":"876","line":51,"column":49,"nodeType":"877","messageId":"878","endLine":51,"endColumn":51},{"ruleId":"875","severity":1,"message":"876","line":51,"column":110,"nodeType":"877","messageId":"878","endLine":51,"endColumn":112},{"ruleId":"875","severity":1,"message":"876","line":51,"column":155,"nodeType":"877","messageId":"878","endLine":51,"endColumn":157},{"ruleId":"856","severity":1,"message":"883","line":62,"column":6,"nodeType":"858","endLine":62,"endColumn":53,"suggestions":"884"},{"ruleId":"875","severity":1,"message":"876","line":128,"column":11,"nodeType":"877","messageId":"878","endLine":128,"endColumn":13},{"ruleId":"813","severity":1,"message":"885","line":3,"column":21,"nodeType":"811","messageId":"815","endLine":3,"endColumn":29},{"ruleId":"813","severity":1,"message":"886","line":3,"column":30,"nodeType":"811","messageId":"815","endLine":3,"endColumn":37},{"ruleId":"809","severity":1,"message":"810","line":34,"column":19,"nodeType":"811","messageId":"812","endLine":34,"endColumn":27},{"ruleId":"813","severity":1,"message":"887","line":7,"column":22,"nodeType":"811","messageId":"815","endLine":7,"endColumn":33},{"ruleId":"813","severity":1,"message":"888","line":10,"column":26,"nodeType":"811","messageId":"815","endLine":10,"endColumn":31},{"ruleId":"875","severity":1,"message":"889","line":32,"column":64,"nodeType":"877","messageId":"878","endLine":32,"endColumn":66},{"ruleId":"875","severity":1,"message":"889","line":33,"column":60,"nodeType":"877","messageId":"878","endLine":33,"endColumn":62},{"ruleId":"805","replacedBy":"840"},{"ruleId":"807","replacedBy":"841"},{"ruleId":"813","severity":1,"message":"839","line":2,"column":10,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"827","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":27},{"ruleId":"813","severity":1,"message":"828","line":1,"column":29,"nodeType":"811","messageId":"815","endLine":1,"endColumn":38},{"ruleId":"813","severity":1,"message":"829","line":1,"column":40,"nodeType":"811","messageId":"815","endLine":1,"endColumn":48},{"ruleId":"836","severity":1,"message":"837","line":45,"column":50,"nodeType":"838","endLine":45,"endColumn":201},{"ruleId":"890","severity":1,"message":"891","line":69,"column":9,"nodeType":"892","messageId":"893","endLine":69,"endColumn":21},{"ruleId":"813","severity":1,"message":"894","line":3,"column":10,"nodeType":"811","messageId":"815","endLine":3,"endColumn":21},{"ruleId":"813","severity":1,"message":"887","line":3,"column":23,"nodeType":"811","messageId":"815","endLine":3,"endColumn":34},{"ruleId":"813","severity":1,"message":"814","line":4,"column":9,"nodeType":"811","messageId":"815","endLine":4,"endColumn":18},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"823","line":4,"column":19,"nodeType":"811","messageId":"815","endLine":4,"endColumn":29},{"ruleId":"813","severity":1,"message":"824","line":25,"column":37,"nodeType":"811","messageId":"815","endLine":25,"endColumn":42},{"ruleId":"813","severity":1,"message":"825","line":25,"column":44,"nodeType":"811","messageId":"815","endLine":25,"endColumn":50},{"ruleId":"813","severity":1,"message":"895","line":25,"column":52,"nodeType":"811","messageId":"815","endLine":25,"endColumn":60},{"ruleId":"813","severity":1,"message":"855","line":25,"column":62,"nodeType":"811","messageId":"815","endLine":25,"endColumn":71},{"ruleId":"813","severity":1,"message":"826","line":25,"column":73,"nodeType":"811","messageId":"815","endLine":25,"endColumn":80},{"ruleId":"856","severity":1,"message":"870","line":41,"column":10,"nodeType":"858","endLine":41,"endColumn":12,"suggestions":"896"},{"ruleId":"856","severity":1,"message":"860","line":49,"column":10,"nodeType":"858","endLine":49,"endColumn":37,"suggestions":"897"},{"ruleId":"875","severity":1,"message":"876","line":99,"column":20,"nodeType":"877","messageId":"878","endLine":99,"endColumn":22},{"ruleId":"875","severity":1,"message":"876","line":104,"column":25,"nodeType":"877","messageId":"878","endLine":104,"endColumn":27},{"ruleId":"836","severity":1,"message":"864","line":220,"column":27,"nodeType":"838","endLine":220,"endColumn":108},{"ruleId":"836","severity":1,"message":"864","line":226,"column":29,"nodeType":"838","endLine":226,"endColumn":109},{"ruleId":"890","severity":1,"message":"891","line":55,"column":11,"nodeType":"892","messageId":"893","endLine":55,"endColumn":23},{"ruleId":"813","severity":1,"message":"852","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":14},{"ruleId":"813","severity":1,"message":"898","line":7,"column":10,"nodeType":"811","messageId":"815","endLine":7,"endColumn":19},{"ruleId":"813","severity":1,"message":"899","line":14,"column":13,"nodeType":"811","messageId":"815","endLine":14,"endColumn":28},{"ruleId":"875","severity":1,"message":"889","line":58,"column":135,"nodeType":"877","messageId":"878","endLine":58,"endColumn":137},{"ruleId":"875","severity":1,"message":"889","line":58,"column":166,"nodeType":"877","messageId":"878","endLine":58,"endColumn":168},{"ruleId":"856","severity":1,"message":"900","line":68,"column":7,"nodeType":"858","endLine":68,"endColumn":9,"suggestions":"901"},{"ruleId":"875","severity":1,"message":"889","line":71,"column":23,"nodeType":"877","messageId":"878","endLine":71,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":72,"column":24,"nodeType":"877","messageId":"878","endLine":72,"endColumn":26},{"ruleId":"875","severity":1,"message":"876","line":72,"column":48,"nodeType":"877","messageId":"878","endLine":72,"endColumn":50},{"ruleId":"813","severity":1,"message":"902","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":12},{"ruleId":"813","severity":1,"message":"903","line":21,"column":12,"nodeType":"811","messageId":"815","endLine":21,"endColumn":21},{"ruleId":"813","severity":1,"message":"904","line":21,"column":23,"nodeType":"811","messageId":"815","endLine":21,"endColumn":35},{"ruleId":"875","severity":1,"message":"876","line":26,"column":15,"nodeType":"877","messageId":"878","endLine":26,"endColumn":17},{"ruleId":"875","severity":1,"message":"876","line":38,"column":20,"nodeType":"877","messageId":"878","endLine":38,"endColumn":22},{"ruleId":"836","severity":1,"message":"864","line":85,"column":27,"nodeType":"838","endLine":85,"endColumn":108},{"ruleId":"905","severity":1,"message":"906","line":26,"column":15,"nodeType":"838","endLine":26,"endColumn":106},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"907","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":14},{"ruleId":"813","severity":1,"message":"908","line":11,"column":10,"nodeType":"811","messageId":"815","endLine":11,"endColumn":22},{"ruleId":"813","severity":1,"message":"909","line":12,"column":10,"nodeType":"811","messageId":"815","endLine":12,"endColumn":26},{"ruleId":"813","severity":1,"message":"910","line":12,"column":27,"nodeType":"811","messageId":"815","endLine":12,"endColumn":42},{"ruleId":"813","severity":1,"message":"911","line":12,"column":63,"nodeType":"811","messageId":"815","endLine":12,"endColumn":81},{"ruleId":"813","severity":1,"message":"853","line":13,"column":10,"nodeType":"811","messageId":"815","endLine":13,"endColumn":35},{"ruleId":"813","severity":1,"message":"854","line":13,"column":36,"nodeType":"811","messageId":"815","endLine":13,"endColumn":52},{"ruleId":"813","severity":1,"message":"912","line":16,"column":9,"nodeType":"811","messageId":"815","endLine":16,"endColumn":14},{"ruleId":"813","severity":1,"message":"913","line":25,"column":7,"nodeType":"811","messageId":"815","endLine":25,"endColumn":16},{"ruleId":"813","severity":1,"message":"914","line":47,"column":22,"nodeType":"811","messageId":"815","endLine":47,"endColumn":35},{"ruleId":"813","severity":1,"message":"824","line":50,"column":35,"nodeType":"811","messageId":"815","endLine":50,"endColumn":40},{"ruleId":"813","severity":1,"message":"825","line":50,"column":42,"nodeType":"811","messageId":"815","endLine":50,"endColumn":48},{"ruleId":"813","severity":1,"message":"855","line":50,"column":59,"nodeType":"811","messageId":"815","endLine":50,"endColumn":68},{"ruleId":"856","severity":1,"message":"862","line":85,"column":6,"nodeType":"858","endLine":85,"endColumn":17,"suggestions":"915"},{"ruleId":"875","severity":1,"message":"876","line":88,"column":17,"nodeType":"877","messageId":"878","endLine":88,"endColumn":19},{"ruleId":"875","severity":1,"message":"876","line":93,"column":22,"nodeType":"877","messageId":"878","endLine":93,"endColumn":24},{"ruleId":"836","severity":1,"message":"864","line":209,"column":27,"nodeType":"838","endLine":209,"endColumn":108},{"ruleId":"836","severity":1,"message":"864","line":215,"column":29,"nodeType":"838","endLine":215,"endColumn":109},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"853","line":9,"column":9,"nodeType":"811","messageId":"815","endLine":9,"endColumn":34},{"ruleId":"813","severity":1,"message":"912","line":11,"column":9,"nodeType":"811","messageId":"815","endLine":11,"endColumn":14},{"ruleId":"813","severity":1,"message":"916","line":21,"column":9,"nodeType":"811","messageId":"815","endLine":21,"endColumn":17},{"ruleId":"813","severity":1,"message":"914","line":23,"column":22,"nodeType":"811","messageId":"815","endLine":23,"endColumn":35},{"ruleId":"856","severity":1,"message":"917","line":37,"column":6,"nodeType":"858","endLine":37,"endColumn":8,"suggestions":"918"},{"ruleId":"875","severity":1,"message":"876","line":51,"column":17,"nodeType":"877","messageId":"878","endLine":51,"endColumn":19},{"ruleId":"875","severity":1,"message":"876","line":56,"column":22,"nodeType":"877","messageId":"878","endLine":56,"endColumn":24},{"ruleId":"813","severity":1,"message":"852","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":14},{"ruleId":"813","severity":1,"message":"898","line":7,"column":10,"nodeType":"811","messageId":"815","endLine":7,"endColumn":19},{"ruleId":"813","severity":1,"message":"899","line":14,"column":13,"nodeType":"811","messageId":"815","endLine":14,"endColumn":28},{"ruleId":"856","severity":1,"message":"900","line":77,"column":7,"nodeType":"858","endLine":77,"endColumn":9,"suggestions":"919"},{"ruleId":"875","severity":1,"message":"889","line":80,"column":23,"nodeType":"877","messageId":"878","endLine":80,"endColumn":25},{"ruleId":"875","severity":1,"message":"876","line":81,"column":24,"nodeType":"877","messageId":"878","endLine":81,"endColumn":26},{"ruleId":"875","severity":1,"message":"876","line":81,"column":48,"nodeType":"877","messageId":"878","endLine":81,"endColumn":50},{"ruleId":"813","severity":1,"message":"852","line":2,"column":8,"nodeType":"811","messageId":"815","endLine":2,"endColumn":14},{"ruleId":"813","severity":1,"message":"907","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":14},{"ruleId":"813","severity":1,"message":"908","line":11,"column":10,"nodeType":"811","messageId":"815","endLine":11,"endColumn":22},{"ruleId":"813","severity":1,"message":"909","line":12,"column":9,"nodeType":"811","messageId":"815","endLine":12,"endColumn":25},{"ruleId":"813","severity":1,"message":"920","line":12,"column":62,"nodeType":"811","messageId":"815","endLine":12,"endColumn":80},{"ruleId":"813","severity":1,"message":"854","line":14,"column":36,"nodeType":"811","messageId":"815","endLine":14,"endColumn":52},{"ruleId":"813","severity":1,"message":"913","line":26,"column":7,"nodeType":"811","messageId":"815","endLine":26,"endColumn":16},{"ruleId":"813","severity":1,"message":"914","line":52,"column":22,"nodeType":"811","messageId":"815","endLine":52,"endColumn":35},{"ruleId":"813","severity":1,"message":"824","line":56,"column":35,"nodeType":"811","messageId":"815","endLine":56,"endColumn":40},{"ruleId":"813","severity":1,"message":"825","line":56,"column":42,"nodeType":"811","messageId":"815","endLine":56,"endColumn":48},{"ruleId":"813","severity":1,"message":"855","line":56,"column":59,"nodeType":"811","messageId":"815","endLine":56,"endColumn":68},{"ruleId":"856","severity":1,"message":"868","line":71,"column":6,"nodeType":"858","endLine":71,"endColumn":8,"suggestions":"921"},{"ruleId":"856","severity":1,"message":"870","line":77,"column":6,"nodeType":"858","endLine":77,"endColumn":8,"suggestions":"922"},{"ruleId":"856","severity":1,"message":"860","line":83,"column":6,"nodeType":"858","endLine":83,"endColumn":33,"suggestions":"923"},{"ruleId":"856","severity":1,"message":"873","line":102,"column":6,"nodeType":"858","endLine":102,"endColumn":31,"suggestions":"924"},{"ruleId":"875","severity":1,"message":"876","line":106,"column":15,"nodeType":"877","messageId":"878","endLine":106,"endColumn":17},{"ruleId":"875","severity":1,"message":"876","line":111,"column":20,"nodeType":"877","messageId":"878","endLine":111,"endColumn":22},{"ruleId":"813","severity":1,"message":"828","line":1,"column":17,"nodeType":"811","messageId":"815","endLine":1,"endColumn":26},{"ruleId":"813","severity":1,"message":"925","line":1,"column":38,"nodeType":"811","messageId":"815","endLine":1,"endColumn":44},{"ruleId":"813","severity":1,"message":"926","line":5,"column":8,"nodeType":"811","messageId":"815","endLine":5,"endColumn":14},{"ruleId":"813","severity":1,"message":"927","line":9,"column":8,"nodeType":"811","messageId":"815","endLine":9,"endColumn":21},{"ruleId":"856","severity":1,"message":"928","line":40,"column":42,"nodeType":"858","endLine":40,"endColumn":44,"suggestions":"929"},{"ruleId":"836","severity":1,"message":"837","line":183,"column":7,"nodeType":"838","endLine":193,"endColumn":8},{"ruleId":"813","severity":1,"message":"930","line":255,"column":12,"nodeType":"811","messageId":"815","endLine":255,"endColumn":23},{"ruleId":"813","severity":1,"message":"931","line":3,"column":23,"nodeType":"811","messageId":"815","endLine":3,"endColumn":35},{"ruleId":"813","severity":1,"message":"932","line":6,"column":10,"nodeType":"811","messageId":"815","endLine":6,"endColumn":22},{"ruleId":"813","severity":1,"message":"933","line":23,"column":13,"nodeType":"811","messageId":"815","endLine":23,"endColumn":31},{"ruleId":"813","severity":1,"message":"934","line":34,"column":13,"nodeType":"811","messageId":"815","endLine":34,"endColumn":38},{"ruleId":"813","severity":1,"message":"935","line":49,"column":13,"nodeType":"811","messageId":"815","endLine":49,"endColumn":35},{"ruleId":"813","severity":1,"message":"936","line":65,"column":13,"nodeType":"811","messageId":"815","endLine":65,"endColumn":33},{"ruleId":"813","severity":1,"message":"937","line":4,"column":7,"nodeType":"811","messageId":"815","endLine":4,"endColumn":14},{"ruleId":"805","replacedBy":"938"},{"ruleId":"807","replacedBy":"939"},{"ruleId":"813","severity":1,"message":"828","line":1,"column":24,"nodeType":"811","messageId":"815","endLine":1,"endColumn":33},{"ruleId":"813","severity":1,"message":"940","line":20,"column":9,"nodeType":"811","messageId":"815","endLine":20,"endColumn":16},{"ruleId":"813","severity":1,"message":"941","line":22,"column":21,"nodeType":"811","messageId":"815","endLine":22,"endColumn":33},{"ruleId":"813","severity":1,"message":"824","line":24,"column":35,"nodeType":"811","messageId":"815","endLine":24,"endColumn":40},{"ruleId":"813","severity":1,"message":"895","line":24,"column":41,"nodeType":"811","messageId":"815","endLine":24,"endColumn":49},{"ruleId":"813","severity":1,"message":"825","line":24,"column":51,"nodeType":"811","messageId":"815","endLine":24,"endColumn":57},{"ruleId":"813","severity":1,"message":"826","line":24,"column":58,"nodeType":"811","messageId":"815","endLine":24,"endColumn":65},{"ruleId":"813","severity":1,"message":"941","line":14,"column":21,"nodeType":"811","messageId":"815","endLine":14,"endColumn":33},{"ruleId":"813","severity":1,"message":"942","line":15,"column":7,"nodeType":"811","messageId":"815","endLine":15,"endColumn":15},{"ruleId":"856","severity":1,"message":"943","line":41,"column":6,"nodeType":"858","endLine":41,"endColumn":17,"suggestions":"944"},{"ruleId":"813","severity":1,"message":"916","line":15,"column":9,"nodeType":"811","messageId":"815","endLine":15,"endColumn":17},{"ruleId":"813","severity":1,"message":"940","line":16,"column":9,"nodeType":"811","messageId":"815","endLine":16,"endColumn":16},{"ruleId":"813","severity":1,"message":"942","line":17,"column":7,"nodeType":"811","messageId":"815","endLine":17,"endColumn":15},"no-native-reassign",["945"],"no-negated-in-lhs",["946"],"@typescript-eslint/no-use-before-define","'userInfo' was used before it was defined.","Identifier","noUseBeforeDefine","@typescript-eslint/no-unused-vars","'RootState' is defined but never used.","unusedVar","'authenticateResponse' is defined but never used.","'UserInfo' is defined but never used.","'userInfo' is defined but never used.","'getloginRequest' is defined but never used.","'LOGIN_REQUEST' is defined but never used.",["945"],["946"],"'Controller' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'control' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'login' is defined but never used.","'AuthenticateResponse' is defined but never used.","'setIsFieldEmpty' is assigned a value but never used.","'setWrongCredintials' is assigned a value but never used.","'moaIqama' is assigned a value but never used.","'setmoaIqama' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.",["945"],["946"],"'Redirect' is defined but never used.","'Home' is defined but never used.","'ProtectedRouteAdmin' is defined but never used.","'NotFound' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","'FullPageLoader' is defined but never used.",["945"],["946"],"'Layout' is defined but never used.","'getFetchIncompleteRequest' is defined but never used.","'getUpdateRequest' is defined but never used.","'getValues' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'newAppState.IState.applicationNumber'. Either include them or remove the dependency array.","ArrayExpression",["947"],"React Hook useEffect has missing dependencies: 'dispatch' and 'newAppState.IState.applicationNumber'. Either include them or remove the dependency array.",["948"],"React Hook useEffect has missing dependencies: 'deptOptions', 'jobTitleOptions', and 'setValue'. Either include them or remove the dependency array.",["949"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'DatePicker' is defined but never used.","'startDate' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Nationalities' and 'dispatch'. Either include them or remove the dependency array.",["950"],"React Hook useEffect has missing dependencies: 'dispatch', 'newAppState.IState.applicationNumber', and 'userInfo?.userId'. Either include them or remove the dependency array.",["951"],["952"],"React Hook useEffect has a missing dependency: 'setValue'. Either include it or remove the dependency array.",["953"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getUserApplicationsByApplicationNumber' is defined but never used.","'param' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AppTypes', 'dispatch', 'newAppState.IState.applicationNumber', 'newAppState.isloading', and 'userData.userInfo?.userId'. Either include them or remove the dependency array.",["954"],"React Hook useEffect has missing dependencies: 'newAppState.IState.applicationStatusId' and 'newAppState.isloading'. Either include them or remove the dependency array.",["955"],"'UserType' is defined but never used.","'AppType' is defined but never used.","'useDispatch' is defined but never used.","'toast' is defined but never used.","Expected '!==' and instead saw '!='.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'useSelector' is defined but never used.","'setValue' is assigned a value but never used.",["956"],["957"],"'IRequests' is defined but never used.","'SelectedRequest' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'IRequests', 'dispatch', and 'userInfo?.userId'. Either include them or remove the dependency array.",["958"],"'auth' is defined but never used.","'Direction' is assigned a value but never used.","'setDirection' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'Select' is defined but never used.","'assignToType' is defined but never used.","'getCreateRequest' is defined but never used.","'getFetchRequest' is defined but never used.","'personalInfoUpdate' is defined but never used.","'Steps' is defined but never used.","'TempClass' is defined but never used.","'setIsDisabled' is assigned a value but never used.",["959"],"'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'AppTypes' and 'dispatch'. Either include them or remove the dependency array.",["960"],["961"],"'updatePassportInfo' is defined but never used.",["962"],["963"],["964"],["965"],"'useRef' is defined but never used.","'Button' is defined but never used.","'PrintProvider' is defined but never used.","React Hook React.useMemo has a missing dependency: 'data'. Either include it or remove the dependency array.",["966"],"'handlePopUp' is defined but never used.","'RequestError' is defined but never used.","'createNewApp' is defined but never used.","'ManageRequestAdmin' is defined but never used.","'watchOnManageRequestAdmin' is defined but never used.","'watchOnSelectedRequest' is defined but never used.","'watchOnDeleteRequest' is defined but never used.","'AuthUrl' is assigned a value but never used.",["945"],["946"],"'history' is assigned a value but never used.","'setIsSapUser' is assigned a value but never used.","'dispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["967"],"no-global-assign","no-unsafe-negation",{"desc":"968","fix":"969"},{"desc":"970","fix":"971"},{"desc":"972","fix":"973"},{"desc":"974","fix":"975"},{"desc":"976","fix":"977"},{"desc":"970","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"desc":"976","fix":"985"},{"desc":"970","fix":"986"},{"desc":"987","fix":"988"},{"desc":"972","fix":"989"},{"desc":"990","fix":"991"},{"desc":"987","fix":"992"},{"desc":"974","fix":"993"},{"desc":"976","fix":"994"},{"desc":"970","fix":"995"},{"desc":"979","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},"Update the dependencies array to be: [history, newAppState.IState.applicationNumber]",{"range":"1001","text":"1002"},"Update the dependencies array to be: [dispatch, newAppState.IState.applicationNumber, newAppState.IState.stepNo]",{"range":"1003","text":"1004"},"Update the dependencies array to be: [deptOptions, jobTitleOptions, setValue, stateData]",{"range":"1005","text":"1006"},"Update the dependencies array to be: [Nationalities, dispatch]",{"range":"1007","text":"1008"},"Update the dependencies array to be: [dispatch, newAppState.IState.applicationNumber, userInfo?.userId]",{"range":"1009","text":"1010"},{"range":"1011","text":"1004"},"Update the dependencies array to be: [stateData, Nationalities, setValue]",{"range":"1012","text":"1013"},"Update the dependencies array to be: [AppTypes, dispatch, newAppState.IState.applicationNumber, newAppState.isloading, userData.userInfo?.userId]",{"range":"1014","text":"1015"},"Update the dependencies array to be: [newAppState.IState.applicationTypeId, AppTypes, newAppState.IState.applicationStatusId, newAppState.isloading]",{"range":"1016","text":"1017"},{"range":"1018","text":"1010"},{"range":"1019","text":"1004"},"Update the dependencies array to be: [IRequests, dispatch, userInfo?.userId]",{"range":"1020","text":"1021"},{"range":"1022","text":"1006"},"Update the dependencies array to be: [AppTypes, dispatch]",{"range":"1023","text":"1024"},{"range":"1025","text":"1021"},{"range":"1026","text":"1008"},{"range":"1027","text":"1010"},{"range":"1028","text":"1004"},{"range":"1029","text":"1013"},"Update the dependencies array to be: [data]",{"range":"1030","text":"1031"},"Update the dependencies array to be: [history, isSapUser]",{"range":"1032","text":"1033"},[2954,2956],"[history, newAppState.IState.applicationNumber]",[3142,3169],"[dispatch, newAppState.IState.applicationNumber, newAppState.IState.stepNo]",[3669,3680],"[deptOptions, jobTitleOptions, setValue, stateData]",[2532,2534],"[Nationalities, dispatch]",[2703,2705],"[dispatch, newAppState.IState.applicationNumber, userInfo?.userId]",[2997,3024],[3782,3807],"[stateData, Nationalities, setValue]",[1638,1640],"[AppTypes, dispatch, newAppState.IState.applicationNumber, newAppState.isloading, userData.userInfo?.userId]",[2329,2376],"[newAppState.IState.applicationTypeId, AppTypes, newAppState.IState.applicationStatusId, newAppState.isloading]",[1916,1918],[2244,2271],[2931,2933],"[IRequests, dispatch, userInfo?.userId]",[3545,3556],[1443,1445],"[AppTypes, dispatch]",[3447,3449],[2571,2573],[2742,2744],[2930,2957],[3637,3662],[1643,1645],"[data]",[1358,1369],"[history, isSapUser]"]
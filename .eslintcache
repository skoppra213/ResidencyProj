[{"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\index.tsx":"1","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\reportWebVitals.ts":"2","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\App.tsx":"3","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\registerRequest.ts":"4","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\userInfo.ts":"5","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\auth\\auth.tsx":"6","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\UIRelated.ts":"7","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\lookUpTypes.ts":"8","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\assets\\js\\all.js":"9","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\store.ts":"10","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootReducer.ts":"11","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootSaga.ts":"12","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\sagas.ts":"13","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\index.ts":"14","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\types.ts":"15","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\reducer.ts":"16","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\action.ts":"17","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\login.ts":"18","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ProtectedRoute.tsx":"19","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\Urls.ts":"20","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\localStorageHelper.ts":"21","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Footer.tsx":"22","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NotFound.tsx":"23","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewRequest.tsx":"24","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\TestRBwithRHF.tsx":"25","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Home.tsx":"26","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PersonalInfo.tsx":"27","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Login.tsx":"28","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Register.tsx":"29","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PassportInfo.tsx":"30","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\assignType.ts":"31","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\lookup.ts":"32","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Layout.tsx":"33","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\FullPageLoader.tsx":"34","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ModalInfo.tsx":"35","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\AuthHeader.tsx":"36","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Header.tsx":"37","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\SideMenu.tsx":"38","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\register.ts":"39","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewApp.tsx":"40","C:\\MOAProjects\\webRR\\src\\index.tsx":"41","C:\\MOAProjects\\webRR\\src\\reportWebVitals.ts":"42","C:\\MOAProjects\\webRR\\src\\State\\store.ts":"43","C:\\MOAProjects\\webRR\\src\\App.tsx":"44","C:\\MOAProjects\\webRR\\src\\State\\rootReducer.ts":"45","C:\\MOAProjects\\webRR\\src\\State\\rootSaga.ts":"46","C:\\MOAProjects\\webRR\\src\\UI\\views\\Login.tsx":"47","C:\\MOAProjects\\webRR\\src\\UI\\views\\Home.tsx":"48","C:\\MOAProjects\\webRR\\src\\UI\\views\\NotFound.tsx":"49","C:\\MOAProjects\\webRR\\src\\UI\\views\\Register.tsx":"50","C:\\MOAProjects\\webRR\\src\\UI\\views\\PersonalInfo.tsx":"51","C:\\MOAProjects\\webRR\\src\\UI\\views\\PassportInfo.tsx":"52","C:\\MOAProjects\\webRR\\src\\UI\\views\\TestRBwithRHF.tsx":"53","C:\\MOAProjects\\webRR\\src\\UI\\views\\NewRequest.tsx":"54","C:\\MOAProjects\\webRR\\src\\UI\\components\\ProtectedRoute.tsx":"55","C:\\MOAProjects\\webRR\\src\\UI\\views\\NewApp.tsx":"56","C:\\MOAProjects\\webRR\\src\\UI\\components\\Footer.tsx":"57","C:\\MOAProjects\\webRR\\src\\State\\login\\sagas.ts":"58","C:\\MOAProjects\\webRR\\src\\Services\\lookup.ts":"59","C:\\MOAProjects\\webRR\\src\\types\\registerRequest.ts":"60","C:\\MOAProjects\\webRR\\src\\types\\userInfo.ts":"61","C:\\MOAProjects\\webRR\\src\\Services\\register.ts":"62","C:\\MOAProjects\\webRR\\src\\Services\\utils\\localStorageHelper.ts":"63","C:\\MOAProjects\\webRR\\src\\Services\\utils\\assignType.ts":"64","C:\\MOAProjects\\webRR\\src\\UI\\components\\FullPageLoader.tsx":"65","C:\\MOAProjects\\webRR\\src\\UI\\components\\Layout.tsx":"66","C:\\MOAProjects\\webRR\\src\\UI\\components\\ModalInfo.tsx":"67","C:\\MOAProjects\\webRR\\src\\auth\\auth.tsx":"68","C:\\MOAProjects\\webRR\\src\\State\\login\\index.ts":"69","C:\\MOAProjects\\webRR\\src\\State\\login\\action.ts":"70","C:\\MOAProjects\\webRR\\src\\State\\login\\types.ts":"71","C:\\MOAProjects\\webRR\\src\\Services\\login.ts":"72","C:\\MOAProjects\\webRR\\src\\Services\\Urls.ts":"73","C:\\MOAProjects\\webRR\\src\\types\\UIRelated.ts":"74","C:\\MOAProjects\\webRR\\src\\types\\lookUpTypes.ts":"75","C:\\MOAProjects\\webRR\\src\\assets\\js\\all.js":"76","C:\\MOAProjects\\webRR\\src\\UI\\components\\SideMenu.tsx":"77","C:\\MOAProjects\\webRR\\src\\UI\\components\\Header.tsx":"78","C:\\MOAProjects\\webRR\\src\\UI\\components\\AuthHeader.tsx":"79","C:\\MOAProjects\\webRR\\src\\State\\login\\reducer.ts":"80","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\index.ts":"81","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\reducer.ts":"82","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\action.ts":"83","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\types.ts":"84","C:\\MOAProjects\\webRR\\src\\State\\lookUps\\sagas.ts":"85","C:\\MOAProjects\\webRR\\src\\State\\newApp\\index.ts":"86","C:\\MOAProjects\\webRR\\src\\State\\newApp\\sagas.ts":"87","C:\\MOAProjects\\webRR\\src\\State\\newApp\\action.ts":"88","C:\\MOAProjects\\webRR\\src\\State\\newApp\\reducer.ts":"89","C:\\MOAProjects\\webRR\\src\\State\\newApp\\types.ts":"90","C:\\MOAProjects\\webRR\\src\\Services\\newApp.ts":"91","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\index.ts":"92","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\reducer.ts":"93","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\sagas.ts":"94","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\action.ts":"95","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\types.ts":"96","C:\\MOAProjects\\webRR\\src\\Services\\personalInfo.ts":"97","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\index.ts":"98","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\reducer.ts":"99","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\action.ts":"100","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\sagas.ts":"101","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\types.ts":"102","C:\\MOAProjects\\webRR\\src\\Services\\passportInfo.ts":"103"},{"size":748,"mtime":1614848783478,"results":"104","hashOfConfig":"105"},{"size":425,"mtime":499162500000,"results":"106","hashOfConfig":"105"},{"size":1408,"mtime":1614852327892,"results":"107","hashOfConfig":"105"},{"size":910,"mtime":1613373783960,"results":"108","hashOfConfig":"105"},{"size":986,"mtime":1614758220228,"results":"109","hashOfConfig":"105"},{"size":404,"mtime":1610874310000,"results":"110","hashOfConfig":"105"},{"size":85,"mtime":1613296273412,"results":"111","hashOfConfig":"105"},{"size":189,"mtime":1613035468832,"results":"112","hashOfConfig":"105"},{"size":614,"mtime":1611123306000,"results":"113","hashOfConfig":"105"},{"size":581,"mtime":1614675776666,"results":"114","hashOfConfig":"105"},{"size":255,"mtime":1614675139607,"results":"115","hashOfConfig":"105"},{"size":166,"mtime":1614675480166,"results":"116","hashOfConfig":"105"},{"size":1260,"mtime":1614765970653,"results":"117","hashOfConfig":"105"},{"size":187,"mtime":1614666679997,"results":"118","hashOfConfig":"105"},{"size":1052,"mtime":1614764835248,"results":"119","hashOfConfig":"105"},{"size":881,"mtime":1614765970598,"results":"120","hashOfConfig":"105"},{"size":587,"mtime":1614755623442,"results":"121","hashOfConfig":"105"},{"size":823,"mtime":1614756854007,"results":"122","hashOfConfig":"105"},{"size":758,"mtime":1614760167508,"results":"123","hashOfConfig":"105"},{"size":387,"mtime":1614763791543,"results":"124","hashOfConfig":"105"},{"size":261,"mtime":1612429332395,"results":"125","hashOfConfig":"105"},{"size":536,"mtime":1610959568000,"results":"126","hashOfConfig":"105"},{"size":165,"mtime":1610792140000,"results":"127","hashOfConfig":"105"},{"size":164,"mtime":1611745332000,"results":"128","hashOfConfig":"105"},{"size":4128,"mtime":1613544153011,"results":"129","hashOfConfig":"105"},{"size":563,"mtime":1614760640427,"results":"130","hashOfConfig":"105"},{"size":6016,"mtime":1611563886000,"results":"131","hashOfConfig":"105"},{"size":5554,"mtime":1614763624801,"results":"132","hashOfConfig":"105"},{"size":12682,"mtime":1614850947245,"results":"133","hashOfConfig":"105"},{"size":7451,"mtime":1611649990000,"results":"134","hashOfConfig":"105"},{"size":1028,"mtime":1614760828476,"results":"135","hashOfConfig":"105"},{"size":1023,"mtime":1614760719126,"results":"136","hashOfConfig":"105"},{"size":998,"mtime":1614760592972,"results":"137","hashOfConfig":"105"},{"size":315,"mtime":1614760494666,"results":"138","hashOfConfig":"105"},{"size":717,"mtime":1614844281318,"results":"139","hashOfConfig":"105"},{"size":740,"mtime":1614759176932,"results":"140","hashOfConfig":"105"},{"size":2371,"mtime":1614760430936,"results":"141","hashOfConfig":"105"},{"size":4953,"mtime":1614852251559,"results":"142","hashOfConfig":"105"},{"size":525,"mtime":1614767281874,"results":"143","hashOfConfig":"105"},{"size":2590,"mtime":1614852122583,"results":"144","hashOfConfig":"105"},{"size":748,"mtime":1614848784000,"results":"145","hashOfConfig":"146"},{"size":425,"mtime":499162500000,"results":"147","hashOfConfig":"146"},{"size":752,"mtime":1615972190504,"results":"148","hashOfConfig":"146"},{"size":1408,"mtime":1614852328000,"results":"149","hashOfConfig":"146"},{"size":543,"mtime":1616406652756,"results":"150","hashOfConfig":"146"},{"size":492,"mtime":1616406738932,"results":"151","hashOfConfig":"146"},{"size":5461,"mtime":1615977427995,"results":"152","hashOfConfig":"146"},{"size":563,"mtime":1614760642000,"results":"153","hashOfConfig":"146"},{"size":165,"mtime":1610792140000,"results":"154","hashOfConfig":"146"},{"size":12648,"mtime":1616054192487,"results":"155","hashOfConfig":"146"},{"size":10179,"mtime":1616479782728,"results":"156","hashOfConfig":"146"},{"size":10908,"mtime":1616572841870,"results":"157","hashOfConfig":"146"},{"size":4128,"mtime":1613544154000,"results":"158","hashOfConfig":"146"},{"size":164,"mtime":1611745332000,"results":"159","hashOfConfig":"146"},{"size":758,"mtime":1614760168000,"results":"160","hashOfConfig":"146"},{"size":3852,"mtime":1616487457509,"results":"161","hashOfConfig":"146"},{"size":536,"mtime":1610959568000,"results":"162","hashOfConfig":"146"},{"size":1007,"mtime":1616654910591,"results":"163","hashOfConfig":"146"},{"size":1662,"mtime":1616567120388,"results":"164","hashOfConfig":"146"},{"size":910,"mtime":1613373784000,"results":"165","hashOfConfig":"146"},{"size":986,"mtime":1614758222000,"results":"166","hashOfConfig":"146"},{"size":525,"mtime":1614767282000,"results":"167","hashOfConfig":"146"},{"size":261,"mtime":1612429334000,"results":"168","hashOfConfig":"146"},{"size":1028,"mtime":1614760830000,"results":"169","hashOfConfig":"146"},{"size":315,"mtime":1614760496000,"results":"170","hashOfConfig":"146"},{"size":1336,"mtime":1616569601853,"results":"171","hashOfConfig":"146"},{"size":717,"mtime":1614844282000,"results":"172","hashOfConfig":"146"},{"size":404,"mtime":1610874310000,"results":"173","hashOfConfig":"146"},{"size":240,"mtime":1615193365841,"results":"174","hashOfConfig":"146"},{"size":591,"mtime":1616654886985,"results":"175","hashOfConfig":"146"},{"size":911,"mtime":1616652099051,"results":"176","hashOfConfig":"146"},{"size":823,"mtime":1614756856000,"results":"177","hashOfConfig":"146"},{"size":671,"mtime":1616573319462,"results":"178","hashOfConfig":"146"},{"size":85,"mtime":1613296274000,"results":"179","hashOfConfig":"146"},{"size":278,"mtime":1615111463096,"results":"180","hashOfConfig":"146"},{"size":614,"mtime":1611123306000,"results":"181","hashOfConfig":"146"},{"size":4953,"mtime":1614852252000,"results":"182","hashOfConfig":"146"},{"size":2371,"mtime":1614760432000,"results":"183","hashOfConfig":"146"},{"size":740,"mtime":1614759178000,"results":"184","hashOfConfig":"146"},{"size":849,"mtime":1616652002146,"results":"185","hashOfConfig":"146"},{"size":402,"mtime":1616571300911,"results":"186","hashOfConfig":"146"},{"size":817,"mtime":1616569456579,"results":"187","hashOfConfig":"146"},{"size":1000,"mtime":1616569714729,"results":"188","hashOfConfig":"146"},{"size":1384,"mtime":1616569447350,"results":"189","hashOfConfig":"146"},{"size":1152,"mtime":1616572955326,"results":"190","hashOfConfig":"146"},{"size":441,"mtime":1615800642782,"results":"191","hashOfConfig":"146"},{"size":638,"mtime":1615965002076,"results":"192","hashOfConfig":"146"},{"size":810,"mtime":1615798141163,"results":"193","hashOfConfig":"146"},{"size":893,"mtime":1615883397653,"results":"194","hashOfConfig":"146"},{"size":1215,"mtime":1615877099890,"results":"195","hashOfConfig":"146"},{"size":1432,"mtime":1615883220065,"results":"196","hashOfConfig":"146"},{"size":454,"mtime":1616052804530,"results":"197","hashOfConfig":"146"},{"size":1053,"mtime":1616055212288,"results":"198","hashOfConfig":"146"},{"size":721,"mtime":1616403031859,"results":"199","hashOfConfig":"146"},{"size":720,"mtime":1616055212288,"results":"200","hashOfConfig":"146"},{"size":944,"mtime":1616052745579,"results":"201","hashOfConfig":"146"},{"size":923,"mtime":1616484205957,"results":"202","hashOfConfig":"146"},{"size":454,"mtime":1616406772302,"results":"203","hashOfConfig":"146"},{"size":1062,"mtime":1616483658839,"results":"204","hashOfConfig":"146"},{"size":720,"mtime":1616055212288,"results":"205","hashOfConfig":"146"},{"size":779,"mtime":1616581609055,"results":"206","hashOfConfig":"146"},{"size":938,"mtime":1616406788137,"results":"207","hashOfConfig":"146"},{"size":1408,"mtime":1616579426156,"results":"208","hashOfConfig":"146"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},"1067rjg",{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"211"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"211"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"211"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"247"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"211"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"211"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"211"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"211"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"211"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"211"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"211"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"211"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},"1tzkq46",{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"305"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"305"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"305"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"305"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"305"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"305"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"305"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"305"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"305"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"305"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"305"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"384"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"305"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"305"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"305"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"436","usedDeprecatedRules":"305"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"305"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\index.tsx",[],["441","442"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\reportWebVitals.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\App.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\registerRequest.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\userInfo.ts",["443"],"\r\nexport class UserInfo {\r\n    userId: number = 0;\r\n    mobileNumber?: string;\r\n    email: string = \"\";\r\n    residencyByMoa: boolean = false;\r\n    isSapUser: boolean = false;\r\n    civilId: string = \"\";\r\n    employeeNumber?: string;\r\n    employeeName: string = \"\";\r\n    employeeType?: string;\r\n    sector?: string;\r\n    department?: string;\r\n    section?: string;\r\n    nationality: string = \"\";\r\n    birthDate?: Date;\r\n    jobTitle?: string;\r\n    organization?: string;\r\n    userTypeId: number = 0;\r\n    registrationStatusId: number = 0;\r\n}\r\n\r\ninterface AuthenticateResult {\r\n    userInfo: UserInfo,\r\n    jwtToken: string\r\n}\r\n\r\nexport class AuthenticateResponse {\r\n    response:AuthenticateResult = {\r\n        userInfo: userInfo,\r\n        jwtToken:\"\"\r\n    }\r\n    status: number = 0;\r\n    message: string = \"\";\r\n    hasError: boolean = false;\r\n    isLoggedIn:boolean = false;\r\n}\r\n\r\n\r\nexport const userInfo = new UserInfo();\r\nexport const authenticateResponse = new AuthenticateResponse();","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\auth\\auth.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\UIRelated.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\types\\lookUpTypes.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\assets\\js\\all.js",[],["444","445"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\store.ts",["446"],"\r\n\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport {rootReducer,RootState} from \"./rootReducer\";\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\n// sagaMiddleware.run(rootSaga);\r\n\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n    sagaMiddleware.run(rootSaga);\r\n    return store;\r\n  };\r\n\r\n  export default configureStore;\r\n\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootReducer.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\rootSaga.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\sagas.ts",["447","448","449","450"],"import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\r\n// import {LOGIN_CONSTS,credentials,LoginActionTypes} from \"./types\"\r\nimport { authenticateResponse, AuthenticateResponse, UserInfo, userInfo } from \"../../types/userInfo\";\r\nimport * as actionTypes from \"./types\";\r\nimport {getloginRequest,getloginSuccess,getloginRequestLoading} from \"./action\"\r\n\r\nimport {login} from \"../../Services/login\"\r\n\r\n\r\nfunction* onLoginRequest({ type, payload  }: actionTypes.login_request_action_type) {\r\n  console.log(\"in onLoginRequest\");\r\n    const { username, password} = payload;\r\n    try {\r\n      yield put(getloginRequestLoading());\r\n      const  data  = yield call(login, username, password);\r\n      let loginRes: AuthenticateResponse = data;\r\n      loginRes.isLoggedIn = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n\r\n      console.log(\"data\",data);\r\n      yield put(getloginSuccess(\"PleaseWork\"));\r\n    } catch (error) {\r\n    //   yield put(actionCreators.getLyricsFailure(error.response.data.error));\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchOnLgin() {\r\n    yield takeEvery(actionTypes.LOGIN_REQUEST, onLoginRequest);\r\n    // yield takeEvery()\r\n  }\r\n\r\n  export default function* loginSaga() {\r\n    yield all([fork(watchOnLgin)]);\r\n  }","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\index.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\types.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\reducer.ts",["451"],"import {\r\n    LoginActionTypes,\r\n    AuthState,\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_LOADING\r\n  } from './types'\r\n  \r\n  const initialState: AuthState = {\r\n    isLoading:false,  \r\n    isLoggedIn:false,\r\n    session:undefined,\r\n    userName:undefined\r\n  }\r\n  \r\n  export function loginReducer(\r\n    state:AuthState = initialState,\r\n    action: LoginActionTypes\r\n  ): AuthState {\r\n      console.log(\"in loginReducer\");\r\n    switch (action.type) {\r\n        case LOGIN_LOADING:\r\n        return {\r\n         ...state,\r\n         isLoading:true,\r\n        }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n             ...state,\r\n             isLoggedIn:true,\r\n             isLoading:false,\r\n             userName:\"tryThisOut\"\r\n            }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export default loginReducer;",["452","453"],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\State\\login\\action.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\login.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ProtectedRoute.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\Urls.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\localStorageHelper.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Footer.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NotFound.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewRequest.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\TestRBwithRHF.tsx",["454","455","456","457"],"import React from 'react'\r\nimport { Form, Button, Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Select from 'react-select';\r\n\r\n\r\nfunction TestRBwithRHF() {\r\n    const options = [\r\n        { value: 'chocolate', label: 'Chocolate' },\r\n        { value: 'strawberry', label: 'Strawberry' },\r\n        { value: 'vanilla', label: 'Vanilla' }\r\n      ]\r\n    const { register, handleSubmit, watch, errors, control } = useForm();\r\n\r\n    const onSubmit = (data: FormData) => {\r\n        console.log(\"data\", data);\r\n    }\r\n    return (\r\n        <>\r\n            <Form onSubmit={handleSubmit(onSubmit)}>\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Email address</Form.Label>\r\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\"\r\n                        className=\"text-danger\"\r\n                        ref={register({ required: true })} />\r\n                    <Form.Text className=\"text-muted\" >\r\n                        We'll never share your email with anyone else.\r\n    </Form.Text>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type=\"password\" placeholder=\"Password\" />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Form.Check type=\"checkbox\" label=\"Check me out\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"row\">\r\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\r\n                          <div className=\"col-sm-4\">\r\n     \r\n                          <Select ref={register} name=\"ice\" options={options} />\r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\r\n                          <div className=\"col-sm-4\">\r\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\r\n                              <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" />\r\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\r\n                              {/* <Controller\r\n                                name=\"isMOA\"\r\n                                control={control}\r\n                                defaultValue={true}\r\n                                render={({ onChange, value }) => (\r\n                                  <Switch\r\n                                    onChange={onChange}\r\n                                    checked={value}\r\n                                    />\r\n                                  )}\r\n                              /> */}\r\n                            {/* </div> */}\r\n                          </div>\r\n                        \r\n                        \r\n                        </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n  </Button>\r\n            </Form>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col >\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Card Title</Card.Title>\r\n                                <Card.Text>\r\n                                    Some quick example text to build on the card title and make up the bulk of\r\n                                    the card's content.\r\n    </Card.Text>\r\n                                <Button variant=\"primary\">Go somewhere</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TestRBwithRHF\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Home.tsx",["458"],"import React, { useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n import auth from \"../../auth/auth\";\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n\t// const user = useContext(UserInfoContext);\r\n\tconst history = useHistory();\r\n\t// console.log(\"Home ~ user\", user);\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1>Home Page</h1>\r\n\t\t\t {true && <h3>logged in</h3>}\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tauth.logout(() => {\r\n\t\t\t\t\t\thistory.push(\"/login\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}}>\r\n\t\t\t\tLogout\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PersonalInfo.tsx",["459","460"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\n\r\n\r\nconst PersonalInfo = () => {\r\n  return (\r\n    <Layout>\r\n      <main className=\"login-bg\">\r\n        <div className=\"container\" style={{ marginBottom: '80px' }}>\r\n          {/* Outer Row */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n                <div className=\"card-header bg-dark\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>معاملة تجديد اقامة - البيانات\r\n                      الشخصية</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body p-0 \">\r\n                  {/* Nested Row within Card Body */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"p-5\">\r\n                        <form className=\"user\">\r\n                          {/* ################### form- row-001 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-002 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-عربي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الهاتف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-003 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-انجليزي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ الميلاد</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"date\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-004 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">الادارة/القسم</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <select className=\"form-control form-control-user\">\r\n                                <option>اختر الادارة</option>\r\n                                <option value=\"1\">نظم المعلومات</option>\r\n                                <option value=\"2\">الشئون الادارية</option>\r\n                              </select>\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">المسمى الوظيفي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <select className=\"form-control form-control-user\">\r\n                                <option>اختر المسمى الوظيفي</option>\r\n                                <option value=\"1\">طباع</option>\r\n                                <option value=\"2\">مبرمج</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-005 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ التعيين</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"date\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-006 #################*/}\r\n                          {/* ################# submit btn ##################### */}\r\n                          <div className=\"row justify-content-between\"> <a href=\"001.html\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                            السابق\r\n                            </a>\r\n                            <a href=\"001-002.html\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                              التالي\r\n                            </a>\r\n                          </div>\r\n                          {/* ################# end submit btn ##################### */}\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div></main>\r\n    </Layout>\r\n  );\r\n}\r\nexport default PersonalInfo;","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Login.tsx",["461","462","463","464","465","466","467"],"import React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { login } from \"../../Services/login\";\r\nimport { authenticateResponse, AuthenticateResponse, UserInfo, userInfo } from \"../../types/userInfo\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport FullPageLoader from \"../components/FullPageLoader\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getLocalStorage } from \"../../Services/utils/localStorageHelper\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {RootState} from '../../State/rootReducer';\r\n\r\nimport {getloginRequest} from \"../../State/login\"\r\n\r\nconst Login = () => {\r\n\tlet userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\tconst history = useHistory();\r\n\tlet dispatch = useDispatch();\r\n\tconst loginstate = useSelector<RootState,RootState[\"login\"]>(state => state.login);\r\n\r\n\tconst [username, setUsername] = useState<string>(\"\");\r\n\tconst [password, setPassword] = useState<string>(\"\");\r\n\r\n\tconst {isLoading} = loginstate;\r\n\tconst [isFieldEmpty, setIsFieldEmpty] = useState(false);\r\n\tconst [wrongCredintials, setWrongCredintials] = useState(false);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(\"sb-sidenav-toggled\");\r\n\t\treturn () => {\r\n\t\t\tdocument.body.classList.remove(\"sb-sidenav-toggled\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(getloginRequest({username,password}));\r\n\t\t\r\n\t\t\r\n\r\n\t\t/*if (username.trim() === \"\" || password.trim() === \"\") {\r\n\t\t\tsetIsFieldEmpty(true);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLoading(true);\r\n\t\r\n\t\tlet loginRes: AuthenticateResponse = await login(username, password);\r\n\t\tconsole.log(\"loginRes\", loginRes);\r\n\t\t\r\n\r\n\t\tif (!loginRes.hasError) {\r\n\t\t\tloginRes.isLoggedIn = true;\r\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\telse if(loginRes.hasError && loginRes.status < 500 && loginRes.status > 299) {\r\n\t\t\tsetWrongCredintials(true);\r\n\t\t\tsetLoading(false);\r\n\t\t}*/\r\n\t}\r\n\r\n\tconst handleNewUser = (e:SyntheticEvent)=>\r\n\t{\r\n\t\te.preventDefault();\r\n\t\thistory.push(\"/register\");\r\n\t}\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t{ isLoading && <FullPageLoader />}\r\n\t\t\t{!userAuth.isLoggedIn &&\r\n\t\t\t\t<main className=\"login-bg\">\r\n\t\t\t\t\t<div className=\"container\" style={{ marginBottom: '80px' }}>\r\n\t\t\t\t\t\t{/* Outer Row */}\r\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t<div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n\t\t\t\t\t\t\t\t<div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header bg-dark\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading && <h3 className=\"text-danger\">Loading...</h3>}\r\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>تسجيل دخول لخدمات\r\n                            البوابة الالكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body p-0 \">\r\n\t\t\t\t\t\t\t\t\t\t{/* Nested Row within Card Body */}\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 p-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-4 gold\" style={{ fontSize: '16px', lineHeight: '30px' }}>ادخل اسم المستخدم وكلمة السر\r\n                                  للدخول الى خدمات البوابة اﻹلكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{wrongCredintials &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tاسم المتسخدم / كلمة المرور غير صحيحة!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{isFieldEmpty &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tمطلوب اسم المستخدم / كلمة المرور!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<form className=\"user\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={username} type=\"email\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل اسم المستخدم\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={password} type=\"password\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputPassword\" placeholder=\"ادخل كلمة السر \" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-user  shorooq \" style={{ fontSize: '22px' }}> تسجيل الدخول الى النظام  </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button  className=\"btn btn-info btn-user shorooq \" style={{ fontSize: '22px' }} onClick={handleNewUser}> تسجيل مستخدم جديد </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4 d-none d-lg-block text-center my-auto\" style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'img/kwtman.png'} alt=\"\" width=\"80%\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t\t{userAuth.isLoggedIn &&\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: \"/personalInfo\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\Register.tsx",["468","469"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport Layout from \"../components/Layout\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport Switch from \"react-switch\";\r\nimport {RegisterRequest,RegisterRequestModel} from \"../../types/registerRequest\";\r\nimport {getNationalities,getUserTypes} from \"../../Services/lookup\";\r\nimport {assignToSelectType, assignToType} from \"../../Services/utils/assignType\";\r\nimport ModalInfo, {PropsModal} from '../components/ModalInfo';\r\nimport {SelectOptions} from \"../../types/UIRelated\";\r\nimport {RegisterNonSapUser}from \"../../Services/register\";\r\nimport {Response } from \"../../types/response\";\r\n\r\n\r\n\r\nconst Register2 = () => {\r\n  const history = useHistory(); \r\n\r\n\r\n  const [moaIqama, setmoaIqama] = useState(true);\r\n  const [nationalities, setnationalitiesOption] = useState<SelectOptions[]>();\r\n  const [userTypes, setuserTypesOption] = useState<SelectOptions[]>();\r\n  const [show, setShow] = useState(false);\r\n  const [propsModal, setpropsModal] = useState<PropsModal>({\r\n    handleClose: () => {setShow(false); history.push(\"/login\");},\r\n    show: show,\r\n    modalBody: '',\r\n    modalTitle: ''\r\n  });\r\n\r\n\r\n  const { register, handleSubmit, watch, errors,control } = useForm<RegisterRequestModel>();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n\r\n\r\n  const onSubmit = async (data:FormData) => {\r\n    \r\n    let temp = new RegisterRequestModel();\r\n    temp = assignToType(data,temp);\r\n    \r\n    let arg = new RegisterRequest();\r\n    arg.email = temp.email;\r\n    arg.password = temp.password;\r\n    arg.civilId= temp.civilId;\r\n    arg.employeeName= temp.employeeName;\r\n    arg.nationalityId = temp.nationalityId?.value;\r\n    arg.jobTitle = temp.jobTitle;\r\n    arg.userTypeId = temp.userTypeId?.value;\r\n    arg.employeeType=\"temp Data\";//TODO\r\n    arg.organization=temp.organization;\r\n    arg.mobileNumber = temp.mobileNumber;\r\n    arg.employeeNumber= temp.employeeNumber;\r\n\r\n\r\n    let a:Response= await RegisterNonSapUser(arg);\r\n\r\n    if (a.status ){\r\n      console.log(\"in modal\");\r\n      let tempModal = {...propsModal}\r\n      tempModal.show = true;\r\n      tempModal.modalBody=a.message;\r\n      tempModal.modalTitle=\"Info\"\r\n      setpropsModal({...tempModal});\r\n\r\n    }\r\n\r\n  }\r\n\r\n//intial fetch for dropdown\r\n  useEffect(() => {\r\n    const GetDropdownValues = async()=>{\r\n      let responseNations = await getNationalities();\r\n      let nationOptions: SelectOptions[] = assignToSelectType(responseNations, \"nationalityId\", \"nationalityName\");\r\n      setnationalitiesOption(nationOptions);\r\n\r\n      let responseUserTypes = await getUserTypes();\r\n      let userTypesOptions: SelectOptions[] = assignToSelectType(responseUserTypes, \"userTypeId\", \"userTypeName\");\r\n      setuserTypesOption(userTypesOptions);\r\n      \r\n    };  \r\n    GetDropdownValues();\r\n    \r\n  }, []);\r\n  return (\r\n    <Layout>\r\n\r\n      <main className=\"login-bg\">\r\n\r\n      <div className=\"container\" style={{marginBottom: '80px'}}>\r\n        {/* Outer Row */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\r\n              <div className=\"card-header bg-dark\">\r\n                <div className=\"text-center\">\r\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>تسجيل مستخدم جديد</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body p-0 \">\r\n                {/* Nested Row within Card Body */}\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"p-5\">\r\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\r\n                        {/* ################### form- row-001 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"civilId\" className=\"col-sm-2 col-form-label\">الرقم المدني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" name=\"civilId\" className=\"form-control form-control-user\"\r\n                             ref={register({ required: true,minLength:12,maxLength:12})} />\r\n                            {errors?.civilId?.type===\"required\" && <span className=\"text-danger\">CivilId is required</span>  }\r\n                            {(errors?.civilId?.type===\"minLength\" || errors?.civilId?.type===\"maxLength\")  && \r\n                             <span  className=\"text-danger\">Length must be 12 </span>  }\r\n                            \r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">الرقم المسلسل</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" className=\"form-control form-control-user\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-002 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeNumber\" className=\"col-sm-2 col-form-label\">رقم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeNumber\"  type=\"text\" className=\"form-control form-control-user\"\r\n                              ref={register}/>\r\n                          </div>\r\n                          <label htmlFor=\"employeeName\" className=\"col-sm-2 col-form-label\">اسم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeName\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-003 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"mobileNumber\" className=\"col-sm-2 col-form-label\">رقم الهاتف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"mobileNumber\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">البريد الالكتروني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"email\" type=\"email\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-004 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"organization\" className=\"col-sm-2 col-form-label\">الادارة / القسم</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"organization\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"nationalityId\" className=\"col-sm-2 col-form-label\">الجنسية</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <Controller\r\n                                name=\"nationalityId\"\r\n                                control={control}\r\n                                placeholder=\" اختر الدولة \"\r\n                                options={nationalities}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-005 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\r\n                          <div className=\"col-sm-4\">\r\n     \r\n                              <Controller\r\n                                name=\"userTypeId\"\r\n                                control={control}\r\n                                placeholder=\"  Select UserType \"\r\n                                options={userTypes}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\r\n                          <div className=\"col-sm-4\">\r\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\r\n                              {/* <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" /> */}\r\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\r\n                              <Controller\r\n                                name=\"isMOA\"\r\n                                control={control}\r\n                                defaultValue={true}\r\n                                render={({ onChange, value }) => (\r\n                                  <Switch\r\n                                    onChange={onChange}\r\n                                    checked={value}\r\n                                    />\r\n                                  )}\r\n                              />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        \r\n                        \r\n                        </div>\r\n                        {/* ################### form- row-006 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"password\" type=\"password\" className=\"form-control form-control-user\" \r\n                             ref={register({\r\n                              required: \"You must specify a password\",\r\n                              minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                              }\r\n                            })} />\r\n                             {errors.password && <span  className=\"text-danger\">{errors.password.message}</span>}\r\n                          </div>\r\n                          <label htmlFor=\"password_repeat\" className=\"col-sm-2 col-form-label\">تأكيد كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input  type=\"password\" name=\"password_repeat\" className=\"form-control form-control-user\" \r\n                            ref={register({\r\n                              validate: value =>\r\n                                value === password.current || \"The passwords do not match\"\r\n                            })}/>\r\n                             {errors.password_repeat && <span  className=\"text-danger\">{errors.password_repeat.message}</span>}\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                   \r\n                        <hr />\r\n                        {/* ################# submit btn ##################### */}\r\n                        <div className=\"row justify-content-center\"> \r\n                        <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{fontSize: '22px'}}>\r\n                            تسجيل مستخدم جديد\r\n                          </button>\r\n                        </div>\r\n                        {/* ################# end submit btn ##################### */}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div></main>\r\n\r\n    {/*Success Modal */}\r\n      <ModalInfo show={propsModal.show}\r\n         handleClose={propsModal.handleClose} \r\n         modalBody={propsModal.modalBody}\r\n         modalTitle = {propsModal.modalTitle}\r\n        />\r\n\r\n\r\n   </Layout>\r\n  );\r\n}\r\n\r\nexport default Register2\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\PassportInfo.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\utils\\assignType.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\lookup.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Layout.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\FullPageLoader.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\ModalInfo.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\AuthHeader.tsx",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\Header.tsx",["470","471","472","473"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { authenticateResponse } from '../../types/userInfo';\r\nimport { getLocalStorage } from '../../Services/utils/localStorageHelper';\r\n\r\n\r\n\r\nconst Header = () => {\r\n\r\n  const userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n        <img className=\"navbar-brand d-none d-md-block\" src={process.env.PUBLIC_URL + 'img/brand.png'} alt=\"\" />\r\n\r\n        <p className=\"navbar-brand d-block d-sm-none\">وزارة الاوقاف والشئون اﻹسلامية</p>\r\n        <button className=\"btn btn-link btn-sm order-1 order-lg-0\" id=\"sidebarToggle\"\r\n        > <i className=\"fas fa-bars\" />\r\n        </button>\r\n        {/* profle*/}\r\n        {/*#######################################*/}\r\n        <div className=\"d-none d-md-inline-block\">\r\n          <ul className=\"navbar-nav ml-auto ml-md-0\">\r\n            {userAuth.isLoggedIn ?\r\n              <li className=\"nav-item dropdown\"> <a className=\"top-nav-link dropdown-toggle\" id=\"userDropdown\" href=\"#\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"><i className=\"fas fa-user fa-fw\" />&nbsp;&nbsp; ملف المستخدم\r\n              &nbsp;&nbsp;</a>\r\n                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"userDropdown\">\r\n                  <button className=\"dropdown-item sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; الملف الشخصي\r\n                  </button>\r\n                  <Link to=\"/login\" className=\"dropdown-item sb-nav-link-icon\" onClick={logout} >\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp; تسجيل الخروج\r\n                  </Link>\r\n                  <div className=\"dropdown-divider \" />\r\n                </div>\r\n              </li> : <li className=\"nav-item\"><Link to=\"/login\" className=\"top-nav-link\">تسجيل الدخول</Link></li>}\r\n          </ul>\r\n        </div>\r\n        <div className=\"d-none d-md-inline-block\" />\r\n        {/*#######################################*/}\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\components\\SideMenu.tsx",["474","475","476"],"import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SideMenu = () => {\r\n  return (\r\n    <>\r\n      <div id=\"layoutSidenav_nav\">\r\n        <nav className=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n          <div className=\"sb-sidenav-menu\">\r\n            {/*#######################################*/}\r\n            <div className=\"nav\">\r\n              {/*############### Section title ########################*/}\r\n              <div className=\"sb-sidenav-menu-heading-title text-center\">نظام تجديد اﻹقامات-وزارة الاوقاف</div>\r\n              {/*######################################################*/}\r\n              {/*#######################################*/} <a className=\"nav-link\" href=\"#\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-house-user\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>الصفحة الرئيسية</span>\r\n              </a>\r\n          \r\n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/newApp\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>معاملة جديدة</span>\r\n              </NavLink>\r\n              <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/personalInfo\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>البيانات الشخصية</span>\r\n              </NavLink>\r\n              <NavLink  activeClassName=\"active\" className=\"nav-link\" to=\"/passportInfo\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>بيانات الجواز والاقامة</span>\r\n              </NavLink>\r\n              <a className=\"nav-link\" href=\"001-003.html\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>المرفقات</span>\r\n              </a>\r\n              <a className=\"nav-link\" href=\"001-004.html\">\r\n                <span className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                </span>\r\n                <span>إقرار السداد</span>\r\n              </a>\r\n              {/* ################## collapse link for group links #############\r\n                            */} <a className=\"nav-link collapsed\" href=\"#\" data-toggle=\"collapse\" data-target=\"#collapseLayouts\" aria-expanded=\"false\" aria-controls=\"collapseLayouts\">\r\n                <div className=\"sb-nav-link-icon\">\r\n                  <i className=\"fas fa-user\" />&nbsp;&nbsp;\r\n                </div>قائمة روابط منسدلة &nbsp;&nbsp;\r\n                <div className=\"sb-sidenav-collapse-arrow\">\r\n                  &nbsp;<i className=\"fas fa-angle-double-down\" />&nbsp;&nbsp;\r\n                </div>\r\n              </a>\r\n              <div className=\"collapse\" id=\"collapseLayouts\" aria-labelledby=\"headingOne\" data-parent=\"#sidenavAccordion\">\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم واحد</span>\r\n                </a>\r\n                </nav>\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم اثنين</span>\r\n                </a>\r\n                </nav>\r\n                <nav className=\"sb-sidenav-menu-nested\"> <a className=\"nav-link\" href=\"index.html\">\r\n                  <span className=\"sb-nav-link-icon\">\r\n                    <i className=\"fas fa-angle-double-left\" />&nbsp;&nbsp;\r\n                    </span>\r\n                  <span>رابط رقم ثلاث</span>\r\n                </a>\r\n                </nav>\r\n              </div>\r\n              {/* ################## End collapse ############################## */}\r\n              {/*#######################################*/}\r\n            </div>\r\n            {/*#######################################*/}\r\n          </div>\r\n          <div className=\"sb-sidenav-footer text-center\">\r\n            <img   src={process.env.PUBLIC_URL + 'img/itc-text-logo-white.png'}  alt=\"\" />\r\n           \r\n          </div>\r\n        </nav>\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SideMenu;\r\n","C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\Services\\register.ts",[],"C:\\MOAProjects\\ResidencyApplication\\ResidencyApplication.Services\\ClientApp\\src\\UI\\views\\NewApp.tsx",[],"C:\\MOAProjects\\webRR\\src\\index.tsx",[],["477","478"],"C:\\MOAProjects\\webRR\\src\\reportWebVitals.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\store.ts",[],"C:\\MOAProjects\\webRR\\src\\App.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\rootReducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\rootSaga.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Login.tsx",["479","480","481"],"import React, { SyntheticEvent, useContext, useEffect, useState } from \"react\";\r\nimport { authenticateResponse } from \"../../types/userInfo\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FullPageLoader from \"../components/FullPageLoader\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { getLocalStorage } from \"../../Services/utils/localStorageHelper\";\r\nimport Layout from \"../components/Layout\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {RootState} from '../../State/rootReducer';\r\nimport {getloginRequest} from \"../../State/login\"\r\n\r\nconst Login = () => {\r\n\tlet userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\tconst history = useHistory();\r\n\tlet dispatch = useDispatch();\r\n\tconst loginstate = useSelector<RootState,RootState[\"login\"]>(state => state.login);\r\n\r\n\tconst [username, setUsername] = useState<string>(\"\");\r\n\tconst [password, setPassword] = useState<string>(\"\");\r\n\r\n\tconst {isLoading} = loginstate;\r\n\tconst [isFieldEmpty, setIsFieldEmpty] = useState(false);\r\n\tconst [wrongCredintials, setWrongCredintials] = useState(false);\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.body.classList.add(\"sb-sidenav-toggled\");\r\n\t\treturn () => {\r\n\t\t\tdocument.body.classList.remove(\"sb-sidenav-toggled\");\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(getloginRequest({username,password}));\r\n\t\t\r\n\t\t\r\n\r\n\t\t/*if (username.trim() === \"\" || password.trim() === \"\") {\r\n\t\t\tsetIsFieldEmpty(true);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetLoading(true);\r\n\t\r\n\t\tlet loginRes: AuthenticateResponse = await login(username, password);\r\n\t\tconsole.log(\"loginRes\", loginRes);\r\n\t\t\r\n\r\n\t\tif (!loginRes.hasError) {\r\n\t\t\tloginRes.isLoggedIn = true;\r\n\t\t\tlocalStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n\t\t\tsetLoading(false);\r\n\t\t}\r\n\t\telse if(loginRes.hasError && loginRes.status < 500 && loginRes.status > 299) {\r\n\t\t\tsetWrongCredintials(true);\r\n\t\t\tsetLoading(false);\r\n\t\t}*/\r\n\t}\r\n\r\n\tconst handleNewUser = (e:SyntheticEvent)=>\r\n\t{\r\n\t\te.preventDefault();\r\n\t\thistory.push(\"/register\");\r\n\t}\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t{ isLoading && <FullPageLoader />}\r\n\t\t\t{!userAuth.isLoggedIn &&\r\n\t\t\t\t<main className=\"login-bg\">\r\n\t\t\t\t\t<div className=\"container\" style={{ marginBottom: '80px' }}>\r\n\t\t\t\t\t\t{/* Outer Row */}\r\n\t\t\t\t\t\t<div className=\"row justify-content-center\">\r\n\t\t\t\t\t\t\t<div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n\t\t\t\t\t\t\t\t<div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-header bg-dark\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t{isLoading && <h3 className=\"text-danger\">Loading...</h3>}\r\n\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>تسجيل دخول لخدمات\r\n                            البوابة الالكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"card-body p-0 \">\r\n\t\t\t\t\t\t\t\t\t\t{/* Nested Row within Card Body */}\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-8 p-5 text-center\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h1 className=\" text-gray-900 mb-4 gold\" style={{ fontSize: '16px', lineHeight: '30px' }}>ادخل اسم المستخدم وكلمة السر\r\n                                  للدخول الى خدمات البوابة اﻹلكترونية</h1>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{wrongCredintials &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tاسم المتسخدم / كلمة المرور غير صحيحة!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{isFieldEmpty &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tمطلوب اسم المستخدم / كلمة المرور!\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<form className=\"user\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={username} type=\"email\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setUsername(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل اسم المستخدم\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input value={password} type=\"password\" className=\"form-control form-control-user\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid=\"exampleInputPassword\" placeholder=\"ادخل كلمة السر \" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"row justify-content-between\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary btn-user  shorooq \" style={{ fontSize: '22px' }}> تسجيل الدخول الى النظام  </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button  className=\"btn btn-info btn-user shorooq \" style={{ fontSize: '22px' }} onClick={handleNewUser}> تسجيل مستخدم جديد </button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"col-lg-4 d-none d-lg-block text-center my-auto\" style={{ backgroundColor: 'transparent' }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={process.env.PUBLIC_URL + 'img/kwtman.png'} alt=\"\" width=\"80%\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t}\r\n\t\t\t{userAuth.isLoggedIn &&\r\n\t\t\t\t<Redirect\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: \"/personalInfo\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n\r\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\Home.tsx",["482"],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NotFound.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\Register.tsx",["483","484"],"import React,{useState,useEffect,useRef} from 'react'\r\nimport Layout from \"../components/Layout\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport Switch from \"react-switch\";\r\nimport {RegisterRequest,RegisterRequestModel} from \"../../types/registerRequest\";\r\nimport {getNationalities,getUserTypes} from \"../../Services/lookup\";\r\nimport {assignToSelectType, assignToType} from \"../../Services/utils/assignType\";\r\nimport ModalInfo, {PropsModal} from '../components/ModalInfo';\r\nimport {SelectOptions} from \"../../types/UIRelated\";\r\nimport {RegisterNonSapUser}from \"../../Services/register\";\r\nimport {Response } from \"../../types/response\";\r\n\r\n\r\n\r\nconst Register2 = () => {\r\n  const history = useHistory(); \r\n\r\n\r\n  const [moaIqama, setmoaIqama] = useState(true);\r\n  const [nationalities, setnationalitiesOption] = useState<SelectOptions[]>();\r\n  const [userTypes, setuserTypesOption] = useState<SelectOptions[]>();\r\n  const [show, setShow] = useState(false);\r\n  const [propsModal, setpropsModal] = useState<PropsModal>({\r\n    handleClose: () => {setShow(false); history.push(\"/login\");},\r\n    show: show,\r\n    modalBody: '',\r\n    modalTitle: ''\r\n  });\r\n\r\n\r\n  const { register, handleSubmit, watch, errors,control } = useForm<RegisterRequestModel>();\r\n  const password = useRef({});\r\n  password.current = watch(\"password\", \"\");\r\n\r\n\r\n\r\n  const onSubmit = async (data:FormData) => {\r\n    \r\n    let temp = new RegisterRequestModel();\r\n    temp = assignToType(data,temp);\r\n    \r\n    let arg = new RegisterRequest();\r\n    arg.email = temp.email;\r\n    arg.password = temp.password;\r\n    arg.civilId= temp.civilId;\r\n    arg.employeeName= temp.employeeName;\r\n    arg.nationalityId = temp.nationalityId?.value;\r\n    arg.jobTitle = temp.jobTitle;\r\n    arg.userTypeId = temp.userTypeId?.value;\r\n    arg.employeeType=\"temp Data\";//TODO\r\n    arg.organization=temp.organization;\r\n    arg.mobileNumber = temp.mobileNumber;\r\n    arg.employeeNumber= temp.employeeNumber;\r\n\r\n\r\n    let a:Response= await RegisterNonSapUser(arg);\r\n\r\n    if (a.status ){\r\n      let tempModal = {...propsModal}\r\n      tempModal.show = true;\r\n      tempModal.modalBody=a.message;\r\n      tempModal.modalTitle=\"Info\"\r\n      setpropsModal({...tempModal});\r\n    }\r\n\r\n  }\r\n\r\n//intial fetch for dropdown\r\n  useEffect(() => {\r\n    const GetDropdownValues = async()=>{\r\n      let responseNations = await getNationalities();\r\n      let nationOptions: SelectOptions[] = assignToSelectType(responseNations, \"nationalityId\", \"nationalityName\");\r\n      setnationalitiesOption(nationOptions);\r\n\r\n      let responseUserTypes = await getUserTypes();\r\n      let userTypesOptions: SelectOptions[] = assignToSelectType(responseUserTypes, \"userTypeId\", \"userTypeName\");\r\n      setuserTypesOption(userTypesOptions);\r\n      \r\n    };  \r\n    GetDropdownValues();\r\n    \r\n  }, []);\r\n  return (\r\n    <Layout>\r\n\r\n      <main className=\"login-bg\">\r\n\r\n      <div className=\"container\" style={{marginBottom: '80px'}}>\r\n        {/* Outer Row */}\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n            <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\r\n              <div className=\"card-header bg-dark\">\r\n                <div className=\"text-center\">\r\n                  <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>تسجيل مستخدم جديد</h1>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body p-0 \">\r\n                {/* Nested Row within Card Body */}\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-12\">\r\n                    <div className=\"p-5\">\r\n                      <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\r\n                        {/* ################### form- row-001 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"civilId\" className=\"col-sm-2 col-form-label\">الرقم المدني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" name=\"civilId\" className=\"form-control form-control-user\"\r\n                             ref={register({ required: true,minLength:12,maxLength:12})} />\r\n                            {errors?.civilId?.type===\"required\" && <span className=\"text-danger\">CivilId is required</span>  }\r\n                            {(errors?.civilId?.type===\"minLength\" || errors?.civilId?.type===\"maxLength\")  && \r\n                             <span  className=\"text-danger\">Length must be 12 </span>  }\r\n                            \r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">الرقم المسلسل</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input type=\"text\" className=\"form-control form-control-user\" />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-002 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeNumber\" className=\"col-sm-2 col-form-label\">رقم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeNumber\"  type=\"text\" className=\"form-control form-control-user\"\r\n                              ref={register}/>\r\n                          </div>\r\n                          <label htmlFor=\"employeeName\" className=\"col-sm-2 col-form-label\">اسم الموظف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"employeeName\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-003 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"mobileNumber\" className=\"col-sm-2 col-form-label\">رقم الهاتف</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"mobileNumber\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">البريد الالكتروني</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"email\" type=\"email\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-004 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"organization\" className=\"col-sm-2 col-form-label\">الادارة / القسم</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"organization\" type=\"text\" className=\"form-control form-control-user\" ref={register} />\r\n                          </div>\r\n                          <label htmlFor=\"nationalityId\" className=\"col-sm-2 col-form-label\">الجنسية</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <Controller\r\n                                name=\"nationalityId\"\r\n                                control={control}\r\n                                placeholder=\" اختر الدولة \"\r\n                                options={nationalities}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                        </div>\r\n                        {/* ################### form- row-005 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"employeeType\" className=\"col-sm-2 col-form-label\">الفئة التابعة لها</label>\r\n                          <div className=\"col-sm-4\">\r\n     \r\n                              <Controller\r\n                                name=\"userTypeId\"\r\n                                control={control}\r\n                                placeholder=\"  Select UserType \"\r\n                                options={userTypes}\r\n                                as={Select}\r\n                              />\r\n                          </div>\r\n                          <label htmlFor=\"\" className=\"col-sm-2 col-form-label\">إقامة وزارة</label>\r\n                          <div className=\"col-sm-4\">\r\n                            {/* <div className=\"custom-control custom-checkbox  mt-1\"> */}\r\n                              {/* <input type=\"checkbox\" defaultChecked data-toggle=\"toggle\" data-on=\"<i class='fa fa-check'></i>\" data-off=\"<i class='fas fa-times'></i>\" data-size=\"sm\" /> */}\r\n                              {/* <Switch onChange={()=> setmoaIqama(val=>!val)} checked={moaIqama} /> */}\r\n                              <Controller\r\n                                name=\"isMOA\"\r\n                                control={control}\r\n                                defaultValue={true}\r\n                                render={({ onChange, value }) => (\r\n                                  <Switch\r\n                                    onChange={onChange}\r\n                                    checked={value}\r\n                                    />\r\n                                  )}\r\n                              />\r\n                            {/* </div> */}\r\n                          </div>\r\n                        \r\n                        \r\n                        </div>\r\n                        {/* ################### form- row-006 #################*/}\r\n                        <div className=\"form-group row\">\r\n                          <label htmlFor=\"password\" className=\"col-sm-2 col-form-label\">كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input name=\"password\" type=\"password\" className=\"form-control form-control-user\" \r\n                             ref={register({\r\n                              required: \"You must specify a password\",\r\n                              minLength: {\r\n                                value: 8,\r\n                                message: \"Password must have at least 8 characters\"\r\n                              }\r\n                            })} />\r\n                             {errors.password && <span  className=\"text-danger\">{errors.password.message}</span>}\r\n                          </div>\r\n                          <label htmlFor=\"password_repeat\" className=\"col-sm-2 col-form-label\">تأكيد كلمة المرور</label>\r\n                          <div className=\"col-sm-4\">\r\n                            <input  type=\"password\" name=\"password_repeat\" className=\"form-control form-control-user\" \r\n                            ref={register({\r\n                              validate: value =>\r\n                                value === password.current || \"The passwords do not match\"\r\n                            })}/>\r\n                             {errors.password_repeat && <span  className=\"text-danger\">{errors.password_repeat.message}</span>}\r\n\r\n                          </div>\r\n                        </div>\r\n\r\n                   \r\n                        <hr />\r\n                        {/* ################# submit btn ##################### */}\r\n                        <div className=\"row justify-content-center\"> \r\n                        <button type=\"submit\" className=\"btn btn-primary btn-user shorooq registeralert \" style={{fontSize: '22px'}}>\r\n                            تسجيل مستخدم جديد\r\n                          </button>\r\n                        </div>\r\n                        {/* ################# end submit btn ##################### */}\r\n                      </form>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div></main>\r\n\r\n    {/*Success Modal */}\r\n      <ModalInfo show={propsModal.show}\r\n         handleClose={propsModal.handleClose} \r\n         modalBody={propsModal.modalBody}\r\n         modalTitle = {propsModal.modalTitle}\r\n        />\r\n\r\n\r\n   </Layout>\r\n  );\r\n}\r\n\r\nexport default Register2\r\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\PersonalInfo.tsx",["485","486","487","488"],"import React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../components/Layout\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {IState} from \"../../State/personalInfo\";\r\nimport {SelectOptions} from \"../../types/UIRelated\"\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../State/rootReducer\";\r\nimport { assignToType} from \"../../Services/utils/assignType\";\r\nimport {getCreateRequest} from \"../../State/personalInfo\";\r\n\r\n\r\nexport interface IFormData extends IState {\r\nselectedDept?:SelectOptions,\r\nselectedJobTitle?:SelectOptions\r\n}\r\n\r\nclass TempClass implements IState {\r\n  id: number| undefined;\r\n  employeeNumber: number| undefined;\r\n  employeeNameArabic: string| undefined;\r\n  employeeNameEnglish: string| undefined;\r\n  birthDate: Date| undefined;\r\n  mobileNumber: number| undefined;\r\n  department: string| undefined;\r\n  jobTitle?: string | undefined;\r\n  hireDate?: Date | undefined;\r\n  applicationNumber?: number | undefined;\r\n  userId?: number | undefined;\r\n  createdDate?: Date | undefined;\r\n  updatedDate?: Date | undefined;\r\n}\r\n\r\n\r\n\r\nconst PersonalInfo = () => {  \r\n  const { register, handleSubmit, watch, errors,control } = useForm<IFormData>();\r\n  const stateData = useSelector<RootState,RootState[\"personalInfo\"]>(state => state.personalInfo);\r\n  let dispatch = useDispatch();\r\n  //TODO pick values correctly\r\n  const jobTitleOptions: SelectOptions[] =\r\n    [\r\n      { label: \"طباع\", value: \"1\" },\r\n      { label: \"مبرمج\", value: \"2\" }\r\n    ]\r\n\r\n    const deptOptions: SelectOptions[] =\r\n    [\r\n      { label: \"نظم المعلومات\", value: \"1\" },\r\n      { label: \"الشئون الادارية\", value: \"2\" }\r\n    ]\r\n\r\n    const onSubmit = async (data:IFormData) => {\r\n      console.log(\"data on submit\",data);\r\n      console.log(\"stateData\",stateData); \r\n      let res  = new TempClass();\r\n      res = assignToType(data,res); \r\n      console.log(\"res on submit\",res);\r\n      res.department=data.selectedDept?.value;\r\n      res.jobTitle = data.selectedJobTitle?.value;\r\n      res.applicationNumber=15;\r\n      res.userId=5;\r\n      res.createdDate = new  Date();\r\n      res.employeeNumber = Number(data.employeeNumber);\r\n      console.log(\"res on after the selected  submit\",res);\r\n      dispatch(getCreateRequest(res));\r\n    }\r\n  return (\r\n    <Layout>\r\n      <main className=\"login-bg\">\r\n        <div className=\"container\" style={{ marginBottom: '80px' }}>\r\n          {/* Outer Row */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{ border: '1px solid rgb(189, 189, 189)' }}>\r\n                <div className=\"card-header bg-dark\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{ fontSize: '28px' }}>معاملة تجديد اقامة - البيانات\r\n                      الشخصية</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body p-0 \">\r\n                  {/* Nested Row within Card Body */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"p-5\">\r\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\r\n                          {/* ################### form- row-001 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الموظف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" \r\n                              name=\"employeeNumber\" ref={register} />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-002 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label htmlFor=\"employeeNameArabic\" className=\"col-sm-3 col-form-label\">اسم الموظف-عربي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" \r\n                              name=\"employeeNameArabic\"  ref={register}/>\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">رقم الهاتف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" \r\n                              name=\"mobileNumber\" ref={register} />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-003 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">اسم الموظف-انجليزي</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" \r\n                              name=\"employeeNameEnglish\" ref={register} />\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ الميلاد</label>\r\n                            <div className=\"col-sm-3\">\r\n                              {/* <input type=\"date\" className=\"form-control form-control-user\" /> */}\r\n                              <Controller\r\n                                  control={control}\r\n                                  name=\"birthDate\"\r\n                                  render={({ onChange, onBlur, value }) => (\r\n                                    <ReactDatePicker\r\n                                      onChange={onChange}\r\n                                      onBlur={onBlur}\r\n                                      selected={value}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      placeholderText=\"dd/MM/yyyy \"   \r\n                                      className=\"form-control form-control-user\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-004 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">الادارة/القسم</label>\r\n                            <div className=\"col-sm-3\">\r\n                            <Controller\r\n                                name=\"selectedDept\"\r\n                                control={control}\r\n                                placeholder=\" اختر الادار  \"\r\n                                options={deptOptions}\r\n                                as={Select}\r\n                              />\r\n\r\n                            </div>\r\n                            <label className=\"col-sm-3 col-form-label\">المسمى الوظيفي</label>\r\n                            <div className=\"col-sm-3\">\r\n                            <Controller\r\n                                name=\"selectedJobTitle\"\r\n                                control={control}\r\n                                placeholder=\" اختر المسمى الوظيفي  \"\r\n                                options={jobTitleOptions}\r\n                                as={Select}\r\n                              />\r\n\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-005 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label className=\"col-sm-3 col-form-label\">تاريخ التعيين</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <Controller\r\n                                  control={control}\r\n                                  name=\"hireDate\"\r\n                                  render={({ onChange, onBlur, value }) => (\r\n                                    <ReactDatePicker\r\n                                      onChange={onChange}\r\n                                      onBlur={onBlur}\r\n                                      selected={value}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      placeholderText=\"dd/MM/yyyy \"   \r\n                                      className=\"form-control form-control-user\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-006 #################*/}\r\n                          {/* ################# submit btn ##################### */}\r\n                          <div className=\"row justify-content-between\"> <a href=\"001.html\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                            السابق\r\n                            </a>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{ fontSize: '22px' }}>\r\n                              التالي\r\n                            </button>\r\n                          </div>\r\n                          {/* ################# end submit btn ##################### */}\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div></main>\r\n    </Layout>\r\n  );\r\n}\r\nexport default PersonalInfo;","C:\\MOAProjects\\webRR\\src\\UI\\views\\PassportInfo.tsx",["489","490","491","492"],"import React,{useState,useEffect} from 'react'\r\nimport Layout from \"../components/Layout\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Select from 'react-select';\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {IState} from \"../../State/passportInfo\";\r\nimport {SelectOptions} from \"../../types/UIRelated\"\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../State/rootReducer\";\r\nimport { assignToType} from \"../../Services/utils/assignType\";\r\nimport {getCreateRequest} from \"../../State/passportInfo\";\r\nimport {getNationalitiesRequest,setLoading} from \"../../State/lookUps\";\r\n\r\n\r\nexport interface IFormData extends IState {\r\n  selectedNationality?:SelectOptions,\r\n  selectedIssueCountry?:SelectOptions\r\n  }\r\n\r\n\r\nclass TempClass implements IState{\r\n  id?:number ;\r\n  civilID?:number;  \r\n  nationalityId?:string;\r\n  passportNumber?:number;\r\n  issueCountry?:string;\r\n  issueDate?:Date;\r\n  expiryDate?:Date;\r\n  address?:string; \r\n  residencyExpiryDate?:Date; \r\n  applicationNumber?:number;    \r\n  userId?:number;    \r\n  createdDate?:Date; \r\n  updatedDate?:Date;\r\n\r\n\r\n}\r\nconst PassportInfo = () => {\r\n\r\n\r\n  const { register, handleSubmit,  errors,control } = useForm<FormData>();\r\n  const LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\r\n  const stateData = useSelector<RootState,RootState[\"passportInfo\"]>(state => state.passportInfo);\r\n  const {Nationalities} = LookUpState;\r\n  let dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const GetDropdownValues = async () => {\r\n      if (Nationalities === undefined) {\r\n        dispatch(getNationalitiesRequest());\r\n      }\r\n    };\r\n    GetDropdownValues();\r\n\r\n  }, []);\r\n\r\n  const onSubmit = async (data:IFormData) => {\r\n    console.log(\"data on submit\",data);\r\n    console.log(\"stateData\",stateData); \r\n    let res  = new TempClass();\r\n    res = assignToType(data,res); \r\n    console.log(\"res on submit\",res);\r\n    res.nationalityId=data.selectedNationality?.value;\r\n    res.issueCountry = data.selectedIssueCountry?.value;\r\n    res.applicationNumber=15;\r\n    res.userId=5;\r\n    res.createdDate = new  Date();\r\n    // res.employeeNumber = Number(data.employeeNumber);\r\n    console.log(\"res on after the selected  submit\",res);\r\n    dispatch(getCreateRequest(res));\r\n  }\r\n    return (\r\n        <Layout>\r\n        <main className=\"login-bg\">\r\n        <div className=\"container\" style={{marginBottom: '80px'}}>\r\n          {/* Outer Row */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-12 col-lg-12 col-md-12\">\r\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\r\n                <div className=\"card-header bg-dark\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>معاملة تجديد اقامة - بيانات\r\n                      الجواز والاقامة</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body p-0 \">\r\n                  {/* Nested Row within Card Body */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"p-5\">\r\n                        <form className=\"user\" onSubmit={handleSubmit(onSubmit)}>\r\n                          {/* ################### form- row-001 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label  className=\"col-sm-3 col-form-label\">رقم الموظف</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-002 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label  className=\"col-sm-3 col-form-label\">الرقم المتسلسل</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\" />\r\n                            </div>\r\n                            <label  className=\"col-sm-3 col-form-label\">الجنسية</label>\r\n                            <div className=\"col-sm-3\">\r\n                                <Controller\r\n                                  name=\"selectedNationality\"\r\n                                  control={control}\r\n                                  placeholder=\" اختر الادار  \"\r\n                                  options={Nationalities}\r\n                                  as={Select}\r\n                                />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-003 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label  className=\"col-sm-3 col-form-label\">رقم الجواز</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\"  \r\n                              name=\"passportNumber\" ref={register} />\r\n                            </div>\r\n                            <label  className=\"col-sm-3 col-form-label\">مكان الاصدار</label>\r\n                            <div className=\"col-sm-3\">\r\n\r\n                               <Controller\r\n                                  name=\"selectedIssueCountry\"\r\n                                  control={control}\r\n                                  placeholder=\" اختر الادار  \"\r\n                                  options={Nationalities}\r\n                                  as={Select}\r\n                                />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-004 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الاصدار</label>\r\n                            <div className=\"col-sm-3\">\r\n                            <Controller\r\n                                  control={control}\r\n                                  name=\"issueDate\"\r\n                                  render={({ onChange, onBlur, value }) => (\r\n                                    <ReactDatePicker\r\n                                      onChange={onChange}\r\n                                      onBlur={onBlur}\r\n                                      selected={value}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      placeholderText=\"dd/MM/yyyy \"   \r\n                                      className=\"form-control form-control-user\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n\r\n                            </div>\r\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ الانتهاء</label>\r\n                            <div className=\"col-sm-3\" >\r\n                            <Controller\r\n                                  control={control}\r\n                                  name=\"expiryDate\"\r\n                                  render={({ onChange, onBlur, value }) => (\r\n                                    <ReactDatePicker\r\n                                      onChange={onChange}\r\n                                      onBlur={onBlur}\r\n                                      selected={value}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      placeholderText=\"dd/MM/yyyy \"   \r\n                                      className=\"form-control form-control-user\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                            </div>\r\n                           \r\n                          </div>\r\n                          {/* ################### form- row-005 #################*/}\r\n                          <div className=\"form-group row\">\r\n                            <label  className=\"col-sm-3 col-form-label\">عنوان السكن</label>\r\n                            <div className=\"col-sm-3\">\r\n                              <input type=\"text\" className=\"form-control form-control-user\"  \r\n                              name=\"address\" ref={register} />\r\n                            </div>\r\n                            <label  className=\"col-sm-3 col-form-label\">تاريخ انتهاء الاقامة</label>\r\n                            <div className=\"col-sm-3\">\r\n                            <Controller\r\n                                  control={control}\r\n                                  name=\"residencyExpiryDate\"\r\n                                  render={({ onChange, onBlur, value }) => (\r\n                                    <ReactDatePicker\r\n                                      onChange={onChange}\r\n                                      onBlur={onBlur}\r\n                                      selected={value}\r\n                                      dateFormat=\"dd/MM/yyyy\"\r\n                                      placeholderText=\"dd/MM/yyyy \"   \r\n                                      className=\"form-control form-control-user\"\r\n                                    />\r\n                                  )}\r\n                                />\r\n                            </div>\r\n                          </div>\r\n                          {/* ################### form- row-006 #################*/}\r\n                          {/* ################# submit btn ##################### */}\r\n                          <div className=\"row justify-content-between\">\r\n                             <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\r\n                              السابق\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary btn-user shorooq  \" style={{fontSize: '22px'}}>\r\n                              التالي\r\n                            </button >\r\n                          </div>\r\n                          {/* ################# end submit btn ##################### */}\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div></main>\r\n         </Layout>\r\n       \r\n    )\r\n}\r\n\r\nexport default PassportInfo;\r\n","C:\\MOAProjects\\webRR\\src\\UI\\views\\TestRBwithRHF.tsx",["493","494","495","496"],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NewRequest.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\ProtectedRoute.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\views\\NewApp.tsx",["497","498"],"import React, {useEffect,useState} from 'react';\r\nimport Layout from \"../components/Layout\";\r\nimport Select from 'react-select';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {RootState} from '../../State/rootReducer';\r\nimport {getAppTypesRequest} from \"../../State/lookUps\";\r\nimport {SelectOptions} from '../../types/UIRelated'\r\nimport {getCreateRequest} from \"../../State/newApp\";\r\nfunction NewApp() {\r\n\tconst LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\r\n  const newAppState = useSelector<RootState,RootState[\"newApp\"]>(state => state.newApp);\r\n  // const [appType, setappType] = useState<SelectOptions>({label:\"\",value:\"\"});\r\n  const {AppTypes} = LookUpState;\r\n  let dispatch = useDispatch();\r\n  useEffect(() => {\r\n    const GetDropdownValues = async () => {\r\n      if (AppTypes === undefined) {\r\n        dispatch(getAppTypesRequest());\r\n      }\r\n    };\r\n    GetDropdownValues();\r\n\r\n  }, []);\r\n\r\n\tconst handleSubmit = async (e: React.SyntheticEvent) => {\r\n\t\t e.preventDefault();\r\n     newAppState.applicationDate = new Date();\r\n     newAppState.userId=5;\r\n     newAppState.isActive=false;\r\n     newAppState.stepNo=0;\r\n     newAppState.applicationStatusId=1;\r\n     newAppState.remark=\"ss\";\r\n   \r\n\r\n\t\t  dispatch(getCreateRequest(newAppState));\r\n\t}\r\n\r\n  const handleAppTypeChange = async (value?:SelectOptions|SelectOptions[] | null) => {\r\n    let temp : SelectOptions= value as SelectOptions;\r\n    newAppState.applicationTypeId = Number(temp?.value);\r\n  }\r\n    return (\r\n        <Layout>\r\n                  <main className=\"login-bg\">\r\n        <div className=\"container\" style={{marginBottom: '80px'}}>\r\n          {/* Outer Row */}\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-10 col-lg-12 col-md-9\">\r\n              <div className=\"card o-hidden border-1 shadow my-5 animate__animated animate__backInDown \" style={{border: '1px solid rgb(189, 189, 189)'}}>\r\n                <div className=\"card-header bg-dark\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\" text-gray-900 mb-1 shorooq gold\" style={{fontSize: '28px'}}>نموذج انشاء معاملة جديدة</h1>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body p-0 \">\r\n                  {/* Nested Row within Card Body */}\r\n                  <div className=\"row\">\r\n                    <div className=\"col-lg-12\">\r\n                      <div className=\"p-5\">\r\n                        <form className=\"user\" onSubmit={handleSubmit}>\r\n                          <div className=\"form-group\">\r\n                            <input type=\"email\" className=\"form-control form-control-user\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\" placeholder=\"ادخل رقم الموظف \" />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <Select \r\n                             name=\"AppType\" \r\n                             placeholder=\" Choose App Type \"\r\n                             options={AppTypes}\r\n                             onChange={handleAppTypeChange}\r\n                              />\r\n                          </div>\r\n                          <div className=\"row justify-content-center\"> <button type=\"submit\" className=\"btn btn-primary btn-user  shorooq \" style={{fontSize: '22px'}}>\r\n                              بدء معاملة جديدة\r\n                            </button>\r\n                          </div>\r\n                        </form>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div></main>\r\n    );\r\n        </Layout>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default NewApp\r\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\Footer.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\sagas.ts",["499"],"import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\r\nimport {  AuthenticateResponse} from \"../../types/userInfo\";\r\nimport * as actionTypes from \"./types\";\r\nimport {getloginSuccess,getloginRequestLoading} from \"./action\"\r\n\r\nimport {login} from \"../../Services/login\"\r\n\r\n\r\nfunction* onLoginRequest({ type, payload  }: actionTypes.login_request_action_type) {\r\n  console.log(\"in onLoginRequest\");\r\n    const { username, password} = payload;\r\n    try {\r\n      yield put(getloginRequestLoading());\r\n      const  loginRes:AuthenticateResponse  = yield call(login, username, password);\r\n      loginRes.isLoggedIn = true;\r\n      localStorage.setItem(\"user\", JSON.stringify(loginRes));\r\n      console.log(\"data\",loginRes);\r\n      // yield put(getloginSuccess(\"PleaseWork\"));\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n\r\nfunction* watchOnLgin() {\r\n    yield takeEvery(actionTypes.LOGIN_REQUEST, onLoginRequest);\r\n  }\r\n\r\n  export default function* loginSaga() {\r\n    yield all([fork(watchOnLgin)]);\r\n  }","C:\\MOAProjects\\webRR\\src\\Services\\lookup.ts",["500"],"import {GET_NATIONALITIES,GET_USERTYPES,GET_APPTYPES } from \"./Urls\";\r\nimport {assignToTypeArray} from \"./utils/assignType\";\r\nimport {Nationality,UserType,AppType} from \"../types/lookUpTypes\";\r\nimport {SelectOptions} from \"../types/UIRelated\"\r\n\r\nexport const getNationalities = async ():Promise<Nationality[]> =>{\r\n    let response = await fetch(GET_NATIONALITIES, { \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }      \r\n      });\r\n      let data = await response.json();     \r\n      let nationalities = new Array<Nationality>();\r\n      nationalities = assignToTypeArray<Nationality>(data, new Nationality(),nationalities);\r\n      return nationalities;\r\n}\r\n\r\nexport const getUserTypes = async ():Promise<UserType[]> =>{\r\n    let response = await fetch(GET_USERTYPES, { \r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }      \r\n      });\r\n      let data = await response.json();     \r\n      let userTypes = new Array<UserType>();\r\n      userTypes = assignToTypeArray<UserType>(data, new UserType(),userTypes);\r\n      return userTypes;\r\n}\r\n\r\nexport const getAppTypes = async ():Promise<SelectOptions[]> =>{\r\n  let response = await fetch(GET_APPTYPES, { \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }      \r\n    });\r\n    let res:SelectOptions[] = await response.json();     \r\n    return res;\r\n}\r\n\r\n\r\n\r\nexport const getNations = async ():Promise<SelectOptions[]> =>{\r\n  let response = await fetch(GET_NATIONALITIES, { \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }      \r\n    });\r\n    let res:SelectOptions[] = await response.json();     \r\n    return res;\r\n}","C:\\MOAProjects\\webRR\\src\\types\\registerRequest.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\userInfo.ts",["501"],"C:\\MOAProjects\\webRR\\src\\Services\\register.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\utils\\localStorageHelper.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\utils\\assignType.ts",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\FullPageLoader.tsx",[],"C:\\MOAProjects\\webRR\\src\\UI\\components\\Layout.tsx",["502"],"import React, { FC } from 'react'\r\nimport SideMenu from \"./SideMenu\";\r\nimport AuthHeader from \"./AuthHeader\";\r\nimport Header from './Header';\r\nimport FullPageLoader from './FullPageLoader';\r\nimport { getLocalStorage } from '../../Services/utils/localStorageHelper';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { RootState } from \"../../State/rootReducer\";\r\n\r\nimport { authenticateResponse } from '../../types/userInfo';\r\nimport '../../assets/js/all';\r\n\r\n\r\nconst Layout: FC = ({ children }) => {\r\n    const LookUpState = useSelector<RootState,RootState[\"lookUp\"]>(state => state.lookUp);\r\n    const {IsLoading} = LookUpState;\r\n\r\n\r\n    const userAuth = getLocalStorage(\"user\", authenticateResponse);\r\n\r\n    return (\r\n        <>\r\n         <Header />\r\n            <div id=\"layoutSidenav\">\r\n                <SideMenu />\r\n                <div id=\"layoutSidenav_content\">\r\n       \r\n          \r\n                    {userAuth.isLoggedIn && \r\n                    <AuthHeader loggedIn={userAuth.isLoggedIn} \r\n                    fullName={ userAuth.response.userInfo.employeeName}\r\n                    civilId = {userAuth.response.userInfo.civilId} />}\r\n                    {children}\r\n                </div>\r\n            </div>\r\n            { IsLoading && <FullPageLoader />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout;\r\n","C:\\MOAProjects\\webRR\\src\\UI\\components\\ModalInfo.tsx",[],"C:\\MOAProjects\\webRR\\src\\auth\\auth.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\login.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\Urls.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\UIRelated.ts",[],"C:\\MOAProjects\\webRR\\src\\types\\lookUpTypes.ts",[],"C:\\MOAProjects\\webRR\\src\\assets\\js\\all.js",[],["503","504"],"C:\\MOAProjects\\webRR\\src\\UI\\components\\SideMenu.tsx",["505","506","507"],"C:\\MOAProjects\\webRR\\src\\UI\\components\\Header.tsx",["508","509","510","511"],"C:\\MOAProjects\\webRR\\src\\UI\\components\\AuthHeader.tsx",[],"C:\\MOAProjects\\webRR\\src\\State\\login\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\lookUps\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\newApp\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\newApp.ts",["512","513","514"],"import {NEWAPP_CREATE } from \"./Urls\";\r\nimport {INewAppState} from \"../State/newApp\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {RootState} from '../State/rootReducer' ;\r\n\r\nexport const createNewApp = async (data:INewAppState): Promise<INewAppState> => {\r\n    console.log(\"in create newApp service\",data);\r\n\r\n    try {\r\n      let response = await fetch(NEWAPP_CREATE, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n         ...data\r\n        })\r\n      });\r\n      if (!response.ok) {\r\n        // return { ...authenticateResponse, status: response.status, message: response.statusText, hasError: true }\r\n      }\r\n      let temp:INewAppState = await response.json();\r\n      let res :INewAppState = \r\n              {applicationDate:temp.applicationDate,\r\n              applicationNumber : temp.applicationNumber,\r\n               applicationStatusId:temp.applicationStatusId,\r\n               applicationTypeId:temp.applicationTypeId,\r\n               isActive:temp.isActive,\r\n               remark:temp.remark,\r\n               stepNo:temp.stepNo,\r\n               userId:temp.userId\r\n            }\r\n      console.log(\"response \",res);\r\n      return res;\r\n  \r\n    } catch (e) {\r\n      console.log(\"NET error\");\r\n      return data\r\n    //   return { ...authenticateResponse, status: 500, message: e, hasError: true }\r\n    }\r\n  }","C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\sagas.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\personalInfo\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\personalInfo.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\index.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\reducer.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\action.ts",[],"C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\sagas.ts",["515","516","517","518"],"import { put, call, takeEvery, all, fork } from \"redux-saga/effects\";\r\nimport * as actionTypes from \"./types\";\r\nimport * as actions from \"./action\";\r\nimport * as loockupActions from \"../lookUps/action\"\r\nimport {  } from \"../../Services/passportInfo\";\r\n\r\n\r\nfunction* onPersonalInfoRequest({ type, payload }: actionTypes.CreateRequestActionType) {\r\n  try {\r\n yield \"a\";\r\n    // let res: actionTypes.IState = yield call(createPersonalInfo, payload);\r\n    // console.log(\"in personal saga\",res);\r\n    // yield put(actions.getCreateSuccess(res));\r\n  } catch (error) {\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction* watchOnPersonalInfo() {\r\n  yield takeEvery(actionTypes.CreateRequest, onPersonalInfoRequest);\r\n}\r\n\r\nexport default function* passportInfoSaga() {\r\n  yield all([fork(watchOnPersonalInfo)]);\r\n}","C:\\MOAProjects\\webRR\\src\\State\\passportInfo\\types.ts",[],"C:\\MOAProjects\\webRR\\src\\Services\\passportInfo.ts",[],{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","replacedBy":"522"},{"ruleId":"523","severity":1,"message":"524","line":30,"column":19,"nodeType":"525","messageId":"526","endLine":30,"endColumn":27},{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","replacedBy":"522"},{"ruleId":"527","severity":1,"message":"528","line":6,"column":21,"nodeType":"525","messageId":"529","endLine":6,"endColumn":30},{"ruleId":"527","severity":1,"message":"530","line":3,"column":10,"nodeType":"525","messageId":"529","endLine":3,"endColumn":30},{"ruleId":"527","severity":1,"message":"531","line":3,"column":54,"nodeType":"525","messageId":"529","endLine":3,"endColumn":62},{"ruleId":"527","severity":1,"message":"532","line":3,"column":64,"nodeType":"525","messageId":"529","endLine":3,"endColumn":72},{"ruleId":"527","severity":1,"message":"533","line":5,"column":9,"nodeType":"525","messageId":"529","endLine":5,"endColumn":24},{"ruleId":"527","severity":1,"message":"534","line":4,"column":5,"nodeType":"525","messageId":"529","endLine":4,"endColumn":18},{"ruleId":"519","replacedBy":"535"},{"ruleId":"521","replacedBy":"536"},{"ruleId":"527","severity":1,"message":"537","line":3,"column":19,"nodeType":"525","messageId":"529","endLine":3,"endColumn":29},{"ruleId":"527","severity":1,"message":"538","line":13,"column":37,"nodeType":"525","messageId":"529","endLine":13,"endColumn":42},{"ruleId":"527","severity":1,"message":"539","line":13,"column":44,"nodeType":"525","messageId":"529","endLine":13,"endColumn":50},{"ruleId":"527","severity":1,"message":"540","line":13,"column":52,"nodeType":"525","messageId":"529","endLine":13,"endColumn":59},{"ruleId":"527","severity":1,"message":"541","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":27},{"ruleId":"527","severity":1,"message":"542","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":26},{"ruleId":"527","severity":1,"message":"543","line":1,"column":28,"nodeType":"525","messageId":"529","endLine":1,"endColumn":36},{"ruleId":"527","severity":1,"message":"541","line":1,"column":33,"nodeType":"525","messageId":"529","endLine":1,"endColumn":43},{"ruleId":"527","severity":1,"message":"544","line":2,"column":10,"nodeType":"525","messageId":"529","endLine":2,"endColumn":15},{"ruleId":"527","severity":1,"message":"545","line":3,"column":32,"nodeType":"525","messageId":"529","endLine":3,"endColumn":52},{"ruleId":"527","severity":1,"message":"531","line":3,"column":54,"nodeType":"525","messageId":"529","endLine":3,"endColumn":62},{"ruleId":"527","severity":1,"message":"532","line":3,"column":64,"nodeType":"525","messageId":"529","endLine":3,"endColumn":72},{"ruleId":"527","severity":1,"message":"546","line":25,"column":23,"nodeType":"525","messageId":"529","endLine":25,"endColumn":38},{"ruleId":"527","severity":1,"message":"547","line":26,"column":27,"nodeType":"525","messageId":"529","endLine":26,"endColumn":46},{"ruleId":"527","severity":1,"message":"548","line":21,"column":10,"nodeType":"525","messageId":"529","endLine":21,"endColumn":18},{"ruleId":"527","severity":1,"message":"549","line":21,"column":20,"nodeType":"525","messageId":"529","endLine":21,"endColumn":31},{"ruleId":"527","severity":1,"message":"541","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":27},{"ruleId":"527","severity":1,"message":"542","line":1,"column":29,"nodeType":"525","messageId":"529","endLine":1,"endColumn":38},{"ruleId":"527","severity":1,"message":"543","line":1,"column":40,"nodeType":"525","messageId":"529","endLine":1,"endColumn":48},{"ruleId":"550","severity":1,"message":"551","line":36,"column":50,"nodeType":"552","endLine":36,"endColumn":201},{"ruleId":"527","severity":1,"message":"553","line":2,"column":10,"nodeType":"525","messageId":"529","endLine":2,"endColumn":14},{"ruleId":"550","severity":1,"message":"551","line":17,"column":61,"nodeType":"552","endLine":17,"endColumn":94},{"ruleId":"550","severity":1,"message":"551","line":55,"column":33,"nodeType":"552","endLine":55,"endColumn":184},{"ruleId":"519","replacedBy":"554"},{"ruleId":"521","replacedBy":"555"},{"ruleId":"527","severity":1,"message":"541","line":1,"column":33,"nodeType":"525","messageId":"529","endLine":1,"endColumn":43},{"ruleId":"527","severity":1,"message":"546","line":22,"column":23,"nodeType":"525","messageId":"529","endLine":22,"endColumn":38},{"ruleId":"527","severity":1,"message":"547","line":23,"column":27,"nodeType":"525","messageId":"529","endLine":23,"endColumn":46},{"ruleId":"527","severity":1,"message":"541","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":27},{"ruleId":"527","severity":1,"message":"548","line":21,"column":10,"nodeType":"525","messageId":"529","endLine":21,"endColumn":18},{"ruleId":"527","severity":1,"message":"549","line":21,"column":20,"nodeType":"525","messageId":"529","endLine":21,"endColumn":31},{"ruleId":"527","severity":1,"message":"542","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":26},{"ruleId":"527","severity":1,"message":"543","line":1,"column":28,"nodeType":"525","messageId":"529","endLine":1,"endColumn":36},{"ruleId":"527","severity":1,"message":"538","line":39,"column":35,"nodeType":"525","messageId":"529","endLine":39,"endColumn":40},{"ruleId":"527","severity":1,"message":"539","line":39,"column":42,"nodeType":"525","messageId":"529","endLine":39,"endColumn":48},{"ruleId":"527","severity":1,"message":"543","line":1,"column":15,"nodeType":"525","messageId":"529","endLine":1,"endColumn":23},{"ruleId":"527","severity":1,"message":"556","line":13,"column":33,"nodeType":"525","messageId":"529","endLine":13,"endColumn":43},{"ruleId":"527","severity":1,"message":"539","line":42,"column":36,"nodeType":"525","messageId":"529","endLine":42,"endColumn":42},{"ruleId":"557","severity":1,"message":"558","line":56,"column":6,"nodeType":"559","endLine":56,"endColumn":8,"suggestions":"560"},{"ruleId":"527","severity":1,"message":"537","line":3,"column":19,"nodeType":"525","messageId":"529","endLine":3,"endColumn":29},{"ruleId":"527","severity":1,"message":"538","line":13,"column":37,"nodeType":"525","messageId":"529","endLine":13,"endColumn":42},{"ruleId":"527","severity":1,"message":"539","line":13,"column":44,"nodeType":"525","messageId":"529","endLine":13,"endColumn":50},{"ruleId":"527","severity":1,"message":"540","line":13,"column":52,"nodeType":"525","messageId":"529","endLine":13,"endColumn":59},{"ruleId":"527","severity":1,"message":"543","line":1,"column":26,"nodeType":"525","messageId":"529","endLine":1,"endColumn":34},{"ruleId":"557","severity":1,"message":"561","line":23,"column":6,"nodeType":"559","endLine":23,"endColumn":8,"suggestions":"562"},{"ruleId":"527","severity":1,"message":"563","line":4,"column":9,"nodeType":"525","messageId":"529","endLine":4,"endColumn":24},{"ruleId":"527","severity":1,"message":"564","line":3,"column":30,"nodeType":"525","messageId":"529","endLine":3,"endColumn":37},{"ruleId":"523","severity":1,"message":"524","line":30,"column":19,"nodeType":"525","messageId":"526","endLine":30,"endColumn":27},{"ruleId":"527","severity":1,"message":"565","line":7,"column":22,"nodeType":"525","messageId":"529","endLine":7,"endColumn":33},{"ruleId":"519","replacedBy":"554"},{"ruleId":"521","replacedBy":"555"},{"ruleId":"527","severity":1,"message":"553","line":2,"column":10,"nodeType":"525","messageId":"529","endLine":2,"endColumn":14},{"ruleId":"550","severity":1,"message":"551","line":17,"column":61,"nodeType":"552","endLine":17,"endColumn":94},{"ruleId":"550","severity":1,"message":"551","line":55,"column":33,"nodeType":"552","endLine":55,"endColumn":184},{"ruleId":"527","severity":1,"message":"541","line":1,"column":17,"nodeType":"525","messageId":"529","endLine":1,"endColumn":27},{"ruleId":"527","severity":1,"message":"542","line":1,"column":29,"nodeType":"525","messageId":"529","endLine":1,"endColumn":38},{"ruleId":"527","severity":1,"message":"543","line":1,"column":40,"nodeType":"525","messageId":"529","endLine":1,"endColumn":48},{"ruleId":"550","severity":1,"message":"551","line":36,"column":50,"nodeType":"552","endLine":36,"endColumn":201},{"ruleId":"527","severity":1,"message":"566","line":3,"column":10,"nodeType":"525","messageId":"529","endLine":3,"endColumn":21},{"ruleId":"527","severity":1,"message":"565","line":3,"column":23,"nodeType":"525","messageId":"529","endLine":3,"endColumn":34},{"ruleId":"527","severity":1,"message":"528","line":4,"column":9,"nodeType":"525","messageId":"529","endLine":4,"endColumn":18},{"ruleId":"527","severity":1,"message":"567","line":1,"column":10,"nodeType":"525","messageId":"529","endLine":1,"endColumn":13},{"ruleId":"527","severity":1,"message":"568","line":1,"column":15,"nodeType":"525","messageId":"529","endLine":1,"endColumn":19},{"ruleId":"527","severity":1,"message":"569","line":3,"column":13,"nodeType":"525","messageId":"529","endLine":3,"endColumn":20},{"ruleId":"527","severity":1,"message":"570","line":4,"column":13,"nodeType":"525","messageId":"529","endLine":4,"endColumn":27},"no-native-reassign",["571"],"no-negated-in-lhs",["572"],"@typescript-eslint/no-use-before-define","'userInfo' was used before it was defined.","Identifier","noUseBeforeDefine","@typescript-eslint/no-unused-vars","'RootState' is defined but never used.","unusedVar","'authenticateResponse' is defined but never used.","'UserInfo' is defined but never used.","'userInfo' is defined but never used.","'getloginRequest' is defined but never used.","'LOGIN_REQUEST' is defined but never used.",["571"],["572"],"'Controller' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'control' is assigned a value but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'login' is defined but never used.","'AuthenticateResponse' is defined but never used.","'setIsFieldEmpty' is assigned a value but never used.","'setWrongCredintials' is assigned a value but never used.","'moaIqama' is assigned a value but never used.","'setmoaIqama' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Link' is defined but never used.",["571"],["572"],"'setLoading' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Nationalities' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["573"],"React Hook useEffect has missing dependencies: 'AppTypes' and 'dispatch'. Either include them or remove the dependency array.",["574"],"'getloginSuccess' is defined but never used.","'AppType' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'put' is defined but never used.","'call' is defined but never used.","'actions' is defined but never used.","'loockupActions' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},"Update the dependencies array to be: [Nationalities, dispatch]",{"range":"579","text":"580"},"Update the dependencies array to be: [AppTypes, dispatch]",{"range":"581","text":"582"},[1766,1768],"[Nationalities, dispatch]",[947,949],"[AppTypes, dispatch]"]